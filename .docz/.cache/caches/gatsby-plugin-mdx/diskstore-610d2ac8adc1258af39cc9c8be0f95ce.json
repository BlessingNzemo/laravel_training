{"expireTime":9007200985218088000,"key":"gatsby-plugin-mdx-entire-payload-1ef2d3a8999c331bac8f64d7c943d0e1-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"phpunit/php-code-coverage","position":{"start":{"line":7,"column":3,"offset":144},"end":{"line":7,"column":28,"offset":169},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":28,"offset":169},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://packagist.org/packages/phpunit/php-code-coverage","children":[{"type":"image","title":null,"url":"https://poser.pugx.org/phpunit/php-code-coverage/v","alt":"Latest Stable Version","position":{"start":{"line":9,"column":2,"offset":172},"end":{"line":9,"column":78,"offset":248},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":171},"end":{"line":9,"column":137,"offset":307},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":9,"column":137,"offset":307},"end":{"line":10,"column":1,"offset":308},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/sebastianbergmann/php-code-coverage/actions","children":[{"type":"image","title":null,"url":"https://github.com/sebastianbergmann/php-code-coverage/workflows/CI/badge.svg","alt":"CI Status","position":{"start":{"line":10,"column":2,"offset":309},"end":{"line":10,"column":93,"offset":400},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":308},"end":{"line":10,"column":158,"offset":465},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":10,"column":158,"offset":465},"end":{"line":11,"column":1,"offset":466},"indent":[1]}},{"type":"link","title":null,"url":"https://codecov.io/gh/sebastianbergmann/php-code-coverage","children":[{"type":"image","title":null,"url":"https://codecov.io/gh/sebastianbergmann/php-code-coverage/branch/main/graph/badge.svg","alt":"codecov","position":{"start":{"line":11,"column":2,"offset":467},"end":{"line":11,"column":99,"offset":564},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":466},"end":{"line":11,"column":159,"offset":624},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":171},"end":{"line":11,"column":159,"offset":624},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Provides collection, processing, and rendering functionality for PHP code coverage information.","position":{"start":{"line":13,"column":1,"offset":626},"end":{"line":13,"column":96,"offset":721},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":626},"end":{"line":13,"column":96,"offset":721},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation","position":{"start":{"line":15,"column":4,"offset":726},"end":{"line":15,"column":16,"offset":738},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":723},"end":{"line":15,"column":16,"offset":738},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can add this library as a local, per-project dependency to your project using ","position":{"start":{"line":17,"column":1,"offset":740},"end":{"line":17,"column":83,"offset":822},"indent":[]}},{"type":"link","title":null,"url":"https://getcomposer.org/","children":[{"type":"text","value":"Composer","position":{"start":{"line":17,"column":84,"offset":823},"end":{"line":17,"column":92,"offset":831},"indent":[]}}],"position":{"start":{"line":17,"column":83,"offset":822},"end":{"line":17,"column":119,"offset":858},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":17,"column":119,"offset":858},"end":{"line":17,"column":120,"offset":859},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":740},"end":{"line":17,"column":120,"offset":859},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"composer require phpunit/php-code-coverage","position":{"start":{"line":19,"column":1,"offset":861},"end":{"line":21,"column":4,"offset":911},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:","position":{"start":{"line":23,"column":1,"offset":913},"end":{"line":23,"column":154,"offset":1066},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":913},"end":{"line":23,"column":154,"offset":1066},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"composer require --dev phpunit/php-code-coverage","position":{"start":{"line":25,"column":1,"offset":1068},"end":{"line":27,"column":4,"offset":1124},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":29,"column":4,"offset":1129},"end":{"line":29,"column":9,"offset":1134},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1126},"end":{"line":29,"column":9,"offset":1134},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php declare(strict_types=1);\nuse SebastianBergmann\\CodeCoverage\\Filter;\nuse SebastianBergmann\\CodeCoverage\\Driver\\Selector;\nuse SebastianBergmann\\CodeCoverage\\CodeCoverage;\nuse SebastianBergmann\\CodeCoverage\\Report\\Html\\Facade as HtmlReport;\n\n$filter = new Filter;\n\n$filter->includeFiles(\n    [\n        '/path/to/file.php',\n        '/path/to/another_file.php',\n    ]\n);\n\n$coverage = new CodeCoverage(\n    (new Selector)->forLineCoverage($filter),\n    $filter\n);\n\n$coverage->start('<name of test>');\n\n// ...\n\n$coverage->stop();\n\n\n(new HtmlReport)->process($coverage, '/tmp/code-coverage-report');","position":{"start":{"line":31,"column":1,"offset":1136},"end":{"line":60,"column":4,"offset":1744},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":63,"column":1,"offset":1747},"end":{"line":63,"column":31,"offset":1777},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":63,"column":31,"offset":1777}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"phpunitphp-code-coverage\"\n    }}>{`phpunit/php-code-coverage`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/phpunit/php-code-coverage\"\n      }}><img alt=\"Latest Stable Version\" src=\"https://poser.pugx.org/phpunit/php-code-coverage/v\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/sebastianbergmann/php-code-coverage/actions\"\n      }}><img alt=\"CI Status\" src=\"https://github.com/sebastianbergmann/php-code-coverage/workflows/CI/badge.svg\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://codecov.io/gh/sebastianbergmann/php-code-coverage\"\n      }}><img alt=\"codecov\" src=\"https://codecov.io/gh/sebastianbergmann/php-code-coverage/branch/main/graph/badge.svg\" /></a></p>\n    <p>{`Provides collection, processing, and rendering functionality for PHP code coverage information.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`You can add this library as a local, per-project dependency to your project using `}<a parentName=\"p\" {...{\n        \"href\": \"https://getcomposer.org/\"\n      }}>{`Composer`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`composer require phpunit/php-code-coverage\n`}</code></pre>\n    <p>{`If you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`composer require --dev phpunit/php-code-coverage\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php declare(strict_types=1);\nuse SebastianBergmann\\\\CodeCoverage\\\\Filter;\nuse SebastianBergmann\\\\CodeCoverage\\\\Driver\\\\Selector;\nuse SebastianBergmann\\\\CodeCoverage\\\\CodeCoverage;\nuse SebastianBergmann\\\\CodeCoverage\\\\Report\\\\Html\\\\Facade as HtmlReport;\n\n$filter = new Filter;\n\n$filter->includeFiles(\n    [\n        '/path/to/file.php',\n        '/path/to/another_file.php',\n    ]\n);\n\n$coverage = new CodeCoverage(\n    (new Selector)->forLineCoverage($filter),\n    $filter\n);\n\n$coverage->start('<name of test>');\n\n// ...\n\n$coverage->stop();\n\n\n(new HtmlReport)->process($coverage, '/tmp/code-coverage-report');\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}