{"expireTime":9007200985218075000,"key":"gatsby-plugin-mdx-entire-payload-aafa884b3eaaf410a34d762d19c74332-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Clock Component","position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":16,"offset":157},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":8,"column":16,"offset":173},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Symfony Clock decouples applications from the system clock.","position":{"start":{"line":10,"column":1,"offset":175},"end":{"line":10,"column":60,"offset":234},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":175},"end":{"line":10,"column":60,"offset":234},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Getting Started","position":{"start":{"line":12,"column":1,"offset":236},"end":{"line":12,"column":16,"offset":251},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":236},"end":{"line":13,"column":16,"offset":267},"indent":[1]}},{"type":"code","lang":"bash","meta":null,"value":"composer require symfony/clock","position":{"start":{"line":15,"column":1,"offset":269},"end":{"line":17,"column":4,"offset":311},"indent":[1,1]}},{"type":"code","lang":"php","meta":null,"value":"use Symfony\\Component\\Clock\\NativeClock;\nuse Symfony\\Component\\Clock\\ClockInterface;\n\nclass MyClockSensitiveClass\n{\n    public function __construct(\n        private ClockInterface $clock,\n    ) {\n        // Only if you need to force a timezone:\n        //$this->clock = $clock->withTimeZone('UTC');\n    }\n\n    public function doSomething()\n    {\n        $now = $this->clock->now();\n        // [...] do something with $now, which is a \\DateTimeImmutable object\n\n        $this->clock->sleep(2.5); // Pause execution for 2.5 seconds\n    }\n}\n\n$clock = new NativeClock();\n$service = new MyClockSensitiveClass($clock);\n$service->doSomething();","position":{"start":{"line":19,"column":1,"offset":313},"end":{"line":44,"column":4,"offset":961},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Resources","position":{"start":{"line":46,"column":1,"offset":963},"end":{"line":46,"column":10,"offset":972},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":963},"end":{"line":47,"column":10,"offset":982},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://symfony.com/doc/current/components/clock.html","children":[{"type":"text","value":"Documentation","position":{"start":{"line":49,"column":5,"offset":988},"end":{"line":49,"column":18,"offset":1001},"indent":[]}}],"position":{"start":{"line":49,"column":4,"offset":987},"end":{"line":49,"column":74,"offset":1057},"indent":[]}}],"position":{"start":{"line":49,"column":4,"offset":987},"end":{"line":49,"column":74,"offset":1057},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":984},"end":{"line":49,"column":74,"offset":1057},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://symfony.com/doc/current/contributing/index.html","children":[{"type":"text","value":"Contributing","position":{"start":{"line":50,"column":5,"offset":1062},"end":{"line":50,"column":17,"offset":1074},"indent":[]}}],"position":{"start":{"line":50,"column":4,"offset":1061},"end":{"line":50,"column":75,"offset":1132},"indent":[]}}],"position":{"start":{"line":50,"column":4,"offset":1061},"end":{"line":50,"column":75,"offset":1132},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1058},"end":{"line":50,"column":75,"offset":1132},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/symfony/symfony/issues","children":[{"type":"text","value":"Report issues","position":{"start":{"line":51,"column":5,"offset":1137},"end":{"line":51,"column":18,"offset":1150},"indent":[]}}],"position":{"start":{"line":51,"column":4,"offset":1136},"end":{"line":51,"column":62,"offset":1194},"indent":[]}},{"type":"text","value":" and\n","position":{"start":{"line":51,"column":62,"offset":1194},"end":{"line":52,"column":4,"offset":1202},"indent":[4]}},{"type":"link","title":null,"url":"https://github.com/symfony/symfony/pulls","children":[{"type":"text","value":"send Pull Requests","position":{"start":{"line":52,"column":5,"offset":1203},"end":{"line":52,"column":23,"offset":1221},"indent":[]}}],"position":{"start":{"line":52,"column":4,"offset":1202},"end":{"line":52,"column":66,"offset":1264},"indent":[]}},{"type":"text","value":"\nin the ","position":{"start":{"line":52,"column":66,"offset":1264},"end":{"line":53,"column":11,"offset":1275},"indent":[4]}},{"type":"link","title":null,"url":"https://github.com/symfony/symfony","children":[{"type":"text","value":"main Symfony repository","position":{"start":{"line":53,"column":12,"offset":1276},"end":{"line":53,"column":35,"offset":1299},"indent":[]}}],"position":{"start":{"line":53,"column":11,"offset":1275},"end":{"line":53,"column":72,"offset":1336},"indent":[]}}],"position":{"start":{"line":51,"column":4,"offset":1136},"end":{"line":53,"column":72,"offset":1336},"indent":[4,4]}}],"position":{"start":{"line":51,"column":1,"offset":1133},"end":{"line":53,"column":72,"offset":1336},"indent":[1,1]}}],"position":{"start":{"line":49,"column":1,"offset":984},"end":{"line":53,"column":72,"offset":1336},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":56,"column":1,"offset":1339},"end":{"line":56,"column":31,"offset":1369},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":56,"column":31,"offset":1369}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"clock-component\"\n    }}>{`Clock Component`}</h1>\n    <p>{`Symfony Clock decouples applications from the system clock.`}</p>\n    <h2 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`composer require symfony/clock\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Symfony\\\\Component\\\\Clock\\\\NativeClock;\nuse Symfony\\\\Component\\\\Clock\\\\ClockInterface;\n\nclass MyClockSensitiveClass\n{\n    public function __construct(\n        private ClockInterface $clock,\n    ) {\n        // Only if you need to force a timezone:\n        //$this->clock = $clock->withTimeZone('UTC');\n    }\n\n    public function doSomething()\n    {\n        $now = $this->clock->now();\n        // [...] do something with $now, which is a \\\\DateTimeImmutable object\n\n        $this->clock->sleep(2.5); // Pause execution for 2.5 seconds\n    }\n}\n\n$clock = new NativeClock();\n$service = new MyClockSensitiveClass($clock);\n$service->doSomething();\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://symfony.com/doc/current/components/clock.html\"\n        }}>{`Documentation`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://symfony.com/doc/current/contributing/index.html\"\n        }}>{`Contributing`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/symfony/symfony/issues\"\n        }}>{`Report issues`}</a>{` and\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/symfony/symfony/pulls\"\n        }}>{`send Pull Requests`}</a>{`\nin the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/symfony/symfony\"\n        }}>{`main Symfony repository`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}