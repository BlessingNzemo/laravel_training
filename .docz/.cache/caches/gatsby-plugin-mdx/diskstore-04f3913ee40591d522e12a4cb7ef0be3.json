{"expireTime":9007200985218041000,"key":"gatsby-plugin-mdx-entire-payload-b4903c3ea255e25b4b080fa09c85295d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Webmozart Assert","position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":17,"offset":158},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":8,"column":17,"offset":175},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://packagist.org/packages/webmozart/assert","children":[{"type":"image","title":null,"url":"https://poser.pugx.org/webmozart/assert/v/stable.svg","alt":"Latest Stable Version","position":{"start":{"line":10,"column":2,"offset":178},"end":{"line":10,"column":80,"offset":256},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":177},"end":{"line":10,"column":130,"offset":306},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":10,"column":130,"offset":306},"end":{"line":11,"column":1,"offset":307},"indent":[1]}},{"type":"link","title":null,"url":"https://packagist.org/packages/webmozart/assert","children":[{"type":"image","title":null,"url":"https://poser.pugx.org/webmozart/assert/downloads.svg","alt":"Total Downloads","position":{"start":{"line":11,"column":2,"offset":308},"end":{"line":11,"column":75,"offset":381},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":307},"end":{"line":11,"column":125,"offset":431},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":177},"end":{"line":11,"column":125,"offset":431},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"This library contains efficient assertions to test the input and output of\nyour methods. With these assertions, you can greatly reduce the amount of coding\nneeded to write a safe implementation.","position":{"start":{"line":13,"column":1,"offset":433},"end":{"line":15,"column":39,"offset":627},"indent":[1,1]}}],"position":{"start":{"line":13,"column":1,"offset":433},"end":{"line":15,"column":39,"offset":627},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All assertions in the ","position":{"start":{"line":17,"column":1,"offset":629},"end":{"line":17,"column":23,"offset":651},"indent":[]}},{"type":"linkReference","identifier":"`assert`","label":"`Assert`","referenceType":"shortcut","children":[{"type":"inlineCode","value":"Assert","position":{"start":{"line":17,"column":24,"offset":652},"end":{"line":17,"column":32,"offset":660},"indent":[]}}],"position":{"start":{"line":17,"column":23,"offset":651},"end":{"line":17,"column":33,"offset":661},"indent":[]}},{"type":"text","value":" class throw an ","position":{"start":{"line":17,"column":33,"offset":661},"end":{"line":17,"column":49,"offset":677},"indent":[]}},{"type":"inlineCode","value":"Webmozart\\Assert\\InvalidArgumentException","position":{"start":{"line":17,"column":49,"offset":677},"end":{"line":17,"column":92,"offset":720},"indent":[]}},{"type":"text","value":" if\nthey fail.","position":{"start":{"line":17,"column":92,"offset":720},"end":{"line":18,"column":11,"offset":734},"indent":[1]}}],"position":{"start":{"line":17,"column":1,"offset":629},"end":{"line":18,"column":11,"offset":734},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"FAQ","position":{"start":{"line":20,"column":1,"offset":736},"end":{"line":20,"column":4,"offset":739},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":736},"end":{"line":21,"column":4,"offset":743},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"What's the difference to ","position":{"start":{"line":23,"column":3,"offset":747},"end":{"line":23,"column":28,"offset":772},"indent":[]}},{"type":"linkReference","identifier":"beberlei/assert","label":"beberlei/assert","referenceType":"shortcut","children":[{"type":"text","value":"beberlei/assert","position":{"start":{"line":23,"column":29,"offset":773},"end":{"line":23,"column":44,"offset":788},"indent":[]}}],"position":{"start":{"line":23,"column":28,"offset":772},"end":{"line":23,"column":45,"offset":789},"indent":[]}},{"type":"text","value":"?","position":{"start":{"line":23,"column":45,"offset":789},"end":{"line":23,"column":46,"offset":790},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":745},"end":{"line":23,"column":48,"offset":792},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":745},"end":{"line":23,"column":48,"offset":792},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This library is heavily inspired by Benjamin Eberlei's wonderful ","position":{"start":{"line":25,"column":1,"offset":794},"end":{"line":25,"column":66,"offset":859},"indent":[]}},{"type":"linkReference","identifier":"assert package","label":"assert package","referenceType":"shortcut","children":[{"type":"text","value":"assert package","position":{"start":{"line":25,"column":67,"offset":860},"end":{"line":25,"column":81,"offset":874},"indent":[]}}],"position":{"start":{"line":25,"column":66,"offset":859},"end":{"line":25,"column":82,"offset":875},"indent":[]}},{"type":"text","value":",\nbut fixes a usability issue with error messages that can't be fixed there without\nbreaking backwards compatibility.","position":{"start":{"line":25,"column":82,"offset":875},"end":{"line":27,"column":34,"offset":992},"indent":[1,1]}}],"position":{"start":{"line":25,"column":1,"offset":794},"end":{"line":27,"column":34,"offset":992},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This package features usable error messages by default. However, you can also\neasily write custom error messages:","position":{"start":{"line":29,"column":1,"offset":994},"end":{"line":30,"column":36,"offset":1107},"indent":[1]}}],"position":{"start":{"line":29,"column":1,"offset":994},"end":{"line":30,"column":36,"offset":1107},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"Assert::string($path, 'The path is expected to be a string. Got: %s');","position":{"start":{"line":32,"column":1,"offset":1109},"end":{"line":34,"column":4,"offset":1187},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":36,"column":1,"offset":1189},"end":{"line":36,"column":4,"offset":1192},"indent":[]}},{"type":"linkReference","identifier":"beberlei/assert","label":"beberlei/assert","referenceType":"shortcut","children":[{"type":"text","value":"beberlei/assert","position":{"start":{"line":36,"column":5,"offset":1193},"end":{"line":36,"column":20,"offset":1208},"indent":[]}}],"position":{"start":{"line":36,"column":4,"offset":1192},"end":{"line":36,"column":21,"offset":1209},"indent":[]}},{"type":"text","value":", the ordering of the ","position":{"start":{"line":36,"column":21,"offset":1209},"end":{"line":36,"column":43,"offset":1231},"indent":[]}},{"type":"inlineCode","value":"%s","position":{"start":{"line":36,"column":43,"offset":1231},"end":{"line":36,"column":47,"offset":1235},"indent":[]}},{"type":"text","value":" placeholders is different for\nevery assertion. This package, on the contrary, provides consistent placeholder\nordering for all assertions:","position":{"start":{"line":36,"column":47,"offset":1235},"end":{"line":38,"column":29,"offset":1374},"indent":[1,1]}}],"position":{"start":{"line":36,"column":1,"offset":1189},"end":{"line":38,"column":29,"offset":1374},"indent":[1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"%s","position":{"start":{"line":40,"column":3,"offset":1378},"end":{"line":40,"column":7,"offset":1382},"indent":[]}},{"type":"text","value":": The tested value as string, e.g. ","position":{"start":{"line":40,"column":7,"offset":1382},"end":{"line":40,"column":42,"offset":1417},"indent":[]}},{"type":"inlineCode","value":"\"/foo/bar\"","position":{"start":{"line":40,"column":42,"offset":1417},"end":{"line":40,"column":54,"offset":1429},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":40,"column":54,"offset":1429},"end":{"line":40,"column":55,"offset":1430},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":1378},"end":{"line":40,"column":55,"offset":1430},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1376},"end":{"line":40,"column":55,"offset":1430},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"%2$s","position":{"start":{"line":41,"column":3,"offset":1433},"end":{"line":41,"column":9,"offset":1439},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":41,"column":9,"offset":1439},"end":{"line":41,"column":11,"offset":1441},"indent":[]}},{"type":"inlineCode","value":"%3$s","position":{"start":{"line":41,"column":11,"offset":1441},"end":{"line":41,"column":17,"offset":1447},"indent":[]}},{"type":"text","value":", ...: Additional assertion-specific values, e.g. the\nminimum/maximum length, allowed values, etc.","position":{"start":{"line":41,"column":17,"offset":1447},"end":{"line":42,"column":47,"offset":1547},"indent":[3]}}],"position":{"start":{"line":41,"column":3,"offset":1433},"end":{"line":42,"column":47,"offset":1547},"indent":[3]}}],"position":{"start":{"line":41,"column":1,"offset":1431},"end":{"line":42,"column":47,"offset":1547},"indent":[1]}}],"position":{"start":{"line":40,"column":1,"offset":1376},"end":{"line":42,"column":47,"offset":1547},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Check the source code of the assertions to find out details about the additional\navailable placeholders.","position":{"start":{"line":44,"column":1,"offset":1549},"end":{"line":45,"column":24,"offset":1653},"indent":[1]}}],"position":{"start":{"line":44,"column":1,"offset":1549},"end":{"line":45,"column":24,"offset":1653},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation","position":{"start":{"line":47,"column":1,"offset":1655},"end":{"line":47,"column":13,"offset":1667},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1655},"end":{"line":48,"column":13,"offset":1680},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":50,"column":1,"offset":1682},"end":{"line":50,"column":5,"offset":1686},"indent":[]}},{"type":"linkReference","identifier":"composer","label":"Composer","referenceType":"shortcut","children":[{"type":"text","value":"Composer","position":{"start":{"line":50,"column":6,"offset":1687},"end":{"line":50,"column":14,"offset":1695},"indent":[]}}],"position":{"start":{"line":50,"column":5,"offset":1686},"end":{"line":50,"column":15,"offset":1696},"indent":[]}},{"type":"text","value":" to install the package:","position":{"start":{"line":50,"column":15,"offset":1696},"end":{"line":50,"column":39,"offset":1720},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1682},"end":{"line":50,"column":39,"offset":1720},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"composer require webmozart/assert","position":{"start":{"line":52,"column":1,"offset":1722},"end":{"line":54,"column":4,"offset":1767},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Example","position":{"start":{"line":56,"column":1,"offset":1769},"end":{"line":56,"column":8,"offset":1776},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1769},"end":{"line":57,"column":8,"offset":1784},"indent":[1]}},{"type":"code","lang":"php","meta":null,"value":"use Webmozart\\Assert\\Assert;\n\nclass Employee\n{\n    public function __construct($id)\n    {\n        Assert::integer($id, 'The employee ID must be an integer. Got: %s');\n        Assert::greaterThan($id, 0, 'The employee ID must be a positive integer. Got: %s');\n    }\n}","position":{"start":{"line":59,"column":1,"offset":1786},"end":{"line":70,"column":4,"offset":2063},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you create an employee with an invalid ID, an exception is thrown:","position":{"start":{"line":72,"column":1,"offset":2065},"end":{"line":72,"column":70,"offset":2134},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2065},"end":{"line":72,"column":70,"offset":2134},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"new Employee('foobar');\n// => Webmozart\\Assert\\InvalidArgumentException:\n//    The employee ID must be an integer. Got: string\n\nnew Employee(-10);\n// => Webmozart\\Assert\\InvalidArgumentException:\n//    The employee ID must be a positive integer. Got: -10","position":{"start":{"line":74,"column":1,"offset":2136},"end":{"line":82,"column":4,"offset":2401},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Assertions","position":{"start":{"line":84,"column":1,"offset":2403},"end":{"line":84,"column":11,"offset":2413},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2403},"end":{"line":85,"column":11,"offset":2424},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":87,"column":1,"offset":2426},"end":{"line":87,"column":5,"offset":2430},"indent":[]}},{"type":"linkReference","identifier":"`assert`","label":"`Assert`","referenceType":"shortcut","children":[{"type":"inlineCode","value":"Assert","position":{"start":{"line":87,"column":6,"offset":2431},"end":{"line":87,"column":14,"offset":2439},"indent":[]}}],"position":{"start":{"line":87,"column":5,"offset":2430},"end":{"line":87,"column":15,"offset":2440},"indent":[]}},{"type":"text","value":" class provides the following assertions:","position":{"start":{"line":87,"column":15,"offset":2440},"end":{"line":87,"column":56,"offset":2481},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2426},"end":{"line":87,"column":56,"offset":2481},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Type Assertions","position":{"start":{"line":89,"column":5,"offset":2487},"end":{"line":89,"column":20,"offset":2502},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2483},"end":{"line":89,"column":20,"offset":2502},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Method","position":{"start":{"line":91,"column":1,"offset":2504},"end":{"line":91,"column":7,"offset":2510},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2504},"end":{"line":91,"column":57,"offset":2560},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":91,"column":60,"offset":2563},"end":{"line":91,"column":71,"offset":2574},"indent":[]}}],"position":{"start":{"line":91,"column":60,"offset":2563},"end":{"line":91,"column":71,"offset":2574},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2504},"end":{"line":91,"column":71,"offset":2574},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"string($value, $message = '')","position":{"start":{"line":93,"column":1,"offset":2685},"end":{"line":93,"column":32,"offset":2716},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2685},"end":{"line":93,"column":57,"offset":2741},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a string","position":{"start":{"line":93,"column":60,"offset":2744},"end":{"line":93,"column":90,"offset":2774},"indent":[]}}],"position":{"start":{"line":93,"column":60,"offset":2744},"end":{"line":93,"column":90,"offset":2774},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2685},"end":{"line":93,"column":90,"offset":2774},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"stringNotEmpty($value, $message = '')","position":{"start":{"line":94,"column":1,"offset":2775},"end":{"line":94,"column":40,"offset":2814},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2775},"end":{"line":94,"column":57,"offset":2831},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a non-empty string","position":{"start":{"line":94,"column":60,"offset":2834},"end":{"line":94,"column":100,"offset":2874},"indent":[]}}],"position":{"start":{"line":94,"column":60,"offset":2834},"end":{"line":94,"column":100,"offset":2874},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2775},"end":{"line":94,"column":100,"offset":2874},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"integer($value, $message = '')","position":{"start":{"line":95,"column":1,"offset":2875},"end":{"line":95,"column":33,"offset":2907},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":2875},"end":{"line":95,"column":57,"offset":2931},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an integer","position":{"start":{"line":95,"column":60,"offset":2934},"end":{"line":95,"column":92,"offset":2966},"indent":[]}}],"position":{"start":{"line":95,"column":60,"offset":2934},"end":{"line":95,"column":92,"offset":2966},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":2875},"end":{"line":95,"column":92,"offset":2966},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"integerish($value, $message = '')","position":{"start":{"line":96,"column":1,"offset":2967},"end":{"line":96,"column":36,"offset":3002},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2967},"end":{"line":96,"column":57,"offset":3023},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value casts to an integer","position":{"start":{"line":96,"column":60,"offset":3026},"end":{"line":96,"column":98,"offset":3064},"indent":[]}}],"position":{"start":{"line":96,"column":60,"offset":3026},"end":{"line":96,"column":98,"offset":3064},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":2967},"end":{"line":96,"column":98,"offset":3064},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"positiveInteger($value, $message = '')","position":{"start":{"line":97,"column":1,"offset":3065},"end":{"line":97,"column":41,"offset":3105},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3065},"end":{"line":97,"column":57,"offset":3121},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a positive (non-zero) integer","position":{"start":{"line":97,"column":60,"offset":3124},"end":{"line":97,"column":111,"offset":3175},"indent":[]}}],"position":{"start":{"line":97,"column":60,"offset":3124},"end":{"line":97,"column":111,"offset":3175},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":3065},"end":{"line":97,"column":111,"offset":3175},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"float($value, $message = '')","position":{"start":{"line":98,"column":1,"offset":3176},"end":{"line":98,"column":31,"offset":3206},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3176},"end":{"line":98,"column":57,"offset":3232},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a float","position":{"start":{"line":98,"column":60,"offset":3235},"end":{"line":98,"column":89,"offset":3264},"indent":[]}}],"position":{"start":{"line":98,"column":60,"offset":3235},"end":{"line":98,"column":89,"offset":3264},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3176},"end":{"line":98,"column":89,"offset":3264},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"numeric($value, $message = '')","position":{"start":{"line":99,"column":1,"offset":3265},"end":{"line":99,"column":33,"offset":3297},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3265},"end":{"line":99,"column":57,"offset":3321},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is numeric","position":{"start":{"line":99,"column":60,"offset":3324},"end":{"line":99,"column":89,"offset":3353},"indent":[]}}],"position":{"start":{"line":99,"column":60,"offset":3324},"end":{"line":99,"column":89,"offset":3353},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":3265},"end":{"line":99,"column":89,"offset":3353},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"natural($value, $message= ''')","position":{"start":{"line":100,"column":1,"offset":3354},"end":{"line":100,"column":33,"offset":3386},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3354},"end":{"line":100,"column":57,"offset":3410},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a non-negative integer","position":{"start":{"line":100,"column":60,"offset":3413},"end":{"line":100,"column":104,"offset":3457},"indent":[]}}],"position":{"start":{"line":100,"column":60,"offset":3413},"end":{"line":100,"column":104,"offset":3457},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":3354},"end":{"line":100,"column":104,"offset":3457},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"boolean($value, $message = '')","position":{"start":{"line":101,"column":1,"offset":3458},"end":{"line":101,"column":33,"offset":3490},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3458},"end":{"line":101,"column":57,"offset":3514},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a boolean","position":{"start":{"line":101,"column":60,"offset":3517},"end":{"line":101,"column":91,"offset":3548},"indent":[]}}],"position":{"start":{"line":101,"column":60,"offset":3517},"end":{"line":101,"column":91,"offset":3548},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":3458},"end":{"line":101,"column":91,"offset":3548},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"scalar($value, $message = '')","position":{"start":{"line":102,"column":1,"offset":3549},"end":{"line":102,"column":32,"offset":3580},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3549},"end":{"line":102,"column":57,"offset":3605},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a scalar","position":{"start":{"line":102,"column":60,"offset":3608},"end":{"line":102,"column":90,"offset":3638},"indent":[]}}],"position":{"start":{"line":102,"column":60,"offset":3608},"end":{"line":102,"column":90,"offset":3638},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":3549},"end":{"line":102,"column":90,"offset":3638},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"object($value, $message = '')","position":{"start":{"line":103,"column":1,"offset":3639},"end":{"line":103,"column":32,"offset":3670},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3639},"end":{"line":103,"column":57,"offset":3695},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an object","position":{"start":{"line":103,"column":60,"offset":3698},"end":{"line":103,"column":91,"offset":3729},"indent":[]}}],"position":{"start":{"line":103,"column":60,"offset":3698},"end":{"line":103,"column":91,"offset":3729},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":3639},"end":{"line":103,"column":91,"offset":3729},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"resource($value, $type = null, $message = '')","position":{"start":{"line":104,"column":1,"offset":3730},"end":{"line":104,"column":48,"offset":3777},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3730},"end":{"line":104,"column":57,"offset":3786},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a resource","position":{"start":{"line":104,"column":60,"offset":3789},"end":{"line":104,"column":92,"offset":3821},"indent":[]}}],"position":{"start":{"line":104,"column":60,"offset":3789},"end":{"line":104,"column":92,"offset":3821},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":3730},"end":{"line":104,"column":92,"offset":3821},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isCallable($value, $message = '')","position":{"start":{"line":105,"column":1,"offset":3822},"end":{"line":105,"column":36,"offset":3857},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3822},"end":{"line":105,"column":57,"offset":3878},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a callable","position":{"start":{"line":105,"column":60,"offset":3881},"end":{"line":105,"column":92,"offset":3913},"indent":[]}}],"position":{"start":{"line":105,"column":60,"offset":3881},"end":{"line":105,"column":92,"offset":3913},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3822},"end":{"line":105,"column":92,"offset":3913},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isArray($value, $message = '')","position":{"start":{"line":106,"column":1,"offset":3914},"end":{"line":106,"column":33,"offset":3946},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3914},"end":{"line":106,"column":57,"offset":3970},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an array","position":{"start":{"line":106,"column":60,"offset":3973},"end":{"line":106,"column":90,"offset":4003},"indent":[]}}],"position":{"start":{"line":106,"column":60,"offset":3973},"end":{"line":106,"column":90,"offset":4003},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3914},"end":{"line":106,"column":90,"offset":4003},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isTraversable($value, $message = '')","position":{"start":{"line":107,"column":1,"offset":4004},"end":{"line":107,"column":39,"offset":4042},"indent":[]}},{"type":"text","value":"  (deprecated)","position":{"start":{"line":107,"column":39,"offset":4042},"end":{"line":107,"column":53,"offset":4056},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4004},"end":{"line":107,"column":57,"offset":4060},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an array or a ","position":{"start":{"line":107,"column":60,"offset":4063},"end":{"line":107,"column":96,"offset":4099},"indent":[]}},{"type":"inlineCode","value":"\\Traversable","position":{"start":{"line":107,"column":96,"offset":4099},"end":{"line":107,"column":110,"offset":4113},"indent":[]}}],"position":{"start":{"line":107,"column":60,"offset":4063},"end":{"line":107,"column":110,"offset":4113},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":4004},"end":{"line":107,"column":110,"offset":4113},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isIterable($value, $message = '')","position":{"start":{"line":108,"column":1,"offset":4114},"end":{"line":108,"column":36,"offset":4149},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":4114},"end":{"line":108,"column":57,"offset":4170},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an array or a ","position":{"start":{"line":108,"column":60,"offset":4173},"end":{"line":108,"column":96,"offset":4209},"indent":[]}},{"type":"inlineCode","value":"\\Traversable","position":{"start":{"line":108,"column":96,"offset":4209},"end":{"line":108,"column":110,"offset":4223},"indent":[]}}],"position":{"start":{"line":108,"column":60,"offset":4173},"end":{"line":108,"column":110,"offset":4223},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":4114},"end":{"line":108,"column":110,"offset":4223},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isCountable($value, $message = '')","position":{"start":{"line":109,"column":1,"offset":4224},"end":{"line":109,"column":37,"offset":4260},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4224},"end":{"line":109,"column":57,"offset":4280},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an array or a ","position":{"start":{"line":109,"column":60,"offset":4283},"end":{"line":109,"column":96,"offset":4319},"indent":[]}},{"type":"inlineCode","value":"\\Countable","position":{"start":{"line":109,"column":96,"offset":4319},"end":{"line":109,"column":108,"offset":4331},"indent":[]}}],"position":{"start":{"line":109,"column":60,"offset":4283},"end":{"line":109,"column":108,"offset":4331},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":4224},"end":{"line":109,"column":108,"offset":4331},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isInstanceOf($value, $class, $message = '')","position":{"start":{"line":110,"column":1,"offset":4332},"end":{"line":110,"column":46,"offset":4377},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4332},"end":{"line":110,"column":57,"offset":4388},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an ","position":{"start":{"line":110,"column":60,"offset":4391},"end":{"line":110,"column":85,"offset":4416},"indent":[]}},{"type":"inlineCode","value":"instanceof","position":{"start":{"line":110,"column":85,"offset":4416},"end":{"line":110,"column":97,"offset":4428},"indent":[]}},{"type":"text","value":" a class","position":{"start":{"line":110,"column":97,"offset":4428},"end":{"line":110,"column":105,"offset":4436},"indent":[]}}],"position":{"start":{"line":110,"column":60,"offset":4391},"end":{"line":110,"column":105,"offset":4436},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4332},"end":{"line":110,"column":105,"offset":4436},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isInstanceOfAny($value, array $classes, $message = '')","position":{"start":{"line":111,"column":1,"offset":4437},"end":{"line":111,"column":57,"offset":4493},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4437},"end":{"line":111,"column":57,"offset":4493},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an ","position":{"start":{"line":111,"column":60,"offset":4496},"end":{"line":111,"column":85,"offset":4521},"indent":[]}},{"type":"inlineCode","value":"instanceof","position":{"start":{"line":111,"column":85,"offset":4521},"end":{"line":111,"column":97,"offset":4533},"indent":[]}},{"type":"text","value":" at least one class on the array of classes","position":{"start":{"line":111,"column":97,"offset":4533},"end":{"line":111,"column":140,"offset":4576},"indent":[]}}],"position":{"start":{"line":111,"column":60,"offset":4496},"end":{"line":111,"column":140,"offset":4576},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":4437},"end":{"line":111,"column":140,"offset":4576},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notInstanceOf($value, $class, $message = '')","position":{"start":{"line":112,"column":1,"offset":4577},"end":{"line":112,"column":47,"offset":4623},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4577},"end":{"line":112,"column":57,"offset":4633},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is not an ","position":{"start":{"line":112,"column":60,"offset":4636},"end":{"line":112,"column":89,"offset":4665},"indent":[]}},{"type":"inlineCode","value":"instanceof","position":{"start":{"line":112,"column":89,"offset":4665},"end":{"line":112,"column":101,"offset":4677},"indent":[]}},{"type":"text","value":" a class","position":{"start":{"line":112,"column":101,"offset":4677},"end":{"line":112,"column":109,"offset":4685},"indent":[]}}],"position":{"start":{"line":112,"column":60,"offset":4636},"end":{"line":112,"column":109,"offset":4685},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":4577},"end":{"line":112,"column":109,"offset":4685},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isAOf($value, $class, $message = '')","position":{"start":{"line":113,"column":1,"offset":4686},"end":{"line":113,"column":39,"offset":4724},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4686},"end":{"line":113,"column":57,"offset":4742},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is of the class or has one of its parents","position":{"start":{"line":113,"column":60,"offset":4745},"end":{"line":113,"column":120,"offset":4805},"indent":[]}}],"position":{"start":{"line":113,"column":60,"offset":4745},"end":{"line":113,"column":120,"offset":4805},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":4686},"end":{"line":113,"column":120,"offset":4805},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isAnyOf($value, array $classes, $message = '')","position":{"start":{"line":114,"column":1,"offset":4806},"end":{"line":114,"column":49,"offset":4854},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4806},"end":{"line":114,"column":57,"offset":4862},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is of at least one of the classes or has one of its parents","position":{"start":{"line":114,"column":60,"offset":4865},"end":{"line":114,"column":138,"offset":4943},"indent":[]}}],"position":{"start":{"line":114,"column":60,"offset":4865},"end":{"line":114,"column":138,"offset":4943},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":4806},"end":{"line":114,"column":138,"offset":4943},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isNotA($value, $class, $message = '')","position":{"start":{"line":115,"column":1,"offset":4944},"end":{"line":115,"column":40,"offset":4983},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4944},"end":{"line":115,"column":57,"offset":5000},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is not of the class or has not one of its parents","position":{"start":{"line":115,"column":60,"offset":5003},"end":{"line":115,"column":128,"offset":5071},"indent":[]}}],"position":{"start":{"line":115,"column":60,"offset":5003},"end":{"line":115,"column":128,"offset":5071},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":4944},"end":{"line":115,"column":128,"offset":5071},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isArrayAccessible($value, $message = '')","position":{"start":{"line":116,"column":1,"offset":5072},"end":{"line":116,"column":43,"offset":5114},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":5072},"end":{"line":116,"column":57,"offset":5128},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value can be accessed as an array","position":{"start":{"line":116,"column":60,"offset":5131},"end":{"line":116,"column":106,"offset":5177},"indent":[]}}],"position":{"start":{"line":116,"column":60,"offset":5131},"end":{"line":116,"column":106,"offset":5177},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":5072},"end":{"line":116,"column":106,"offset":5177},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"uniqueValues($values, $message = '')","position":{"start":{"line":117,"column":1,"offset":5178},"end":{"line":117,"column":39,"offset":5216},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":5178},"end":{"line":117,"column":57,"offset":5234},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that the given array contains unique values","position":{"start":{"line":117,"column":60,"offset":5237},"end":{"line":117,"column":109,"offset":5286},"indent":[]}}],"position":{"start":{"line":117,"column":60,"offset":5237},"end":{"line":117,"column":109,"offset":5286},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":5178},"end":{"line":117,"column":109,"offset":5286},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2504},"end":{"line":117,"column":109,"offset":5286},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Comparison Assertions","position":{"start":{"line":119,"column":5,"offset":5292},"end":{"line":119,"column":26,"offset":5313},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":5288},"end":{"line":119,"column":26,"offset":5313},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Method","position":{"start":{"line":121,"column":1,"offset":5315},"end":{"line":121,"column":7,"offset":5321},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":5315},"end":{"line":121,"column":48,"offset":5362},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":121,"column":51,"offset":5365},"end":{"line":121,"column":62,"offset":5376},"indent":[]}}],"position":{"start":{"line":121,"column":51,"offset":5365},"end":{"line":121,"column":62,"offset":5376},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":5315},"end":{"line":121,"column":62,"offset":5376},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"true($value, $message = '')","position":{"start":{"line":123,"column":1,"offset":5494},"end":{"line":123,"column":30,"offset":5523},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":5494},"end":{"line":123,"column":48,"offset":5541},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is ","position":{"start":{"line":123,"column":51,"offset":5544},"end":{"line":123,"column":73,"offset":5566},"indent":[]}},{"type":"inlineCode","value":"true","position":{"start":{"line":123,"column":73,"offset":5566},"end":{"line":123,"column":79,"offset":5572},"indent":[]}}],"position":{"start":{"line":123,"column":51,"offset":5544},"end":{"line":123,"column":79,"offset":5572},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":5494},"end":{"line":123,"column":79,"offset":5572},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"false($value, $message = '')","position":{"start":{"line":124,"column":1,"offset":5573},"end":{"line":124,"column":31,"offset":5603},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":5573},"end":{"line":124,"column":48,"offset":5620},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is ","position":{"start":{"line":124,"column":51,"offset":5623},"end":{"line":124,"column":73,"offset":5645},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":124,"column":73,"offset":5645},"end":{"line":124,"column":80,"offset":5652},"indent":[]}}],"position":{"start":{"line":124,"column":51,"offset":5623},"end":{"line":124,"column":80,"offset":5652},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":5573},"end":{"line":124,"column":80,"offset":5652},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notFalse($value, $message = '')","position":{"start":{"line":125,"column":1,"offset":5653},"end":{"line":125,"column":34,"offset":5686},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":5653},"end":{"line":125,"column":48,"offset":5700},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is not ","position":{"start":{"line":125,"column":51,"offset":5703},"end":{"line":125,"column":77,"offset":5729},"indent":[]}},{"type":"inlineCode","value":"false","position":{"start":{"line":125,"column":77,"offset":5729},"end":{"line":125,"column":84,"offset":5736},"indent":[]}}],"position":{"start":{"line":125,"column":51,"offset":5703},"end":{"line":125,"column":84,"offset":5736},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":5653},"end":{"line":125,"column":84,"offset":5736},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"null($value, $message = '')","position":{"start":{"line":126,"column":1,"offset":5737},"end":{"line":126,"column":30,"offset":5766},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":5737},"end":{"line":126,"column":48,"offset":5784},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is ","position":{"start":{"line":126,"column":51,"offset":5787},"end":{"line":126,"column":73,"offset":5809},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":126,"column":73,"offset":5809},"end":{"line":126,"column":79,"offset":5815},"indent":[]}}],"position":{"start":{"line":126,"column":51,"offset":5787},"end":{"line":126,"column":79,"offset":5815},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":5737},"end":{"line":126,"column":79,"offset":5815},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notNull($value, $message = '')","position":{"start":{"line":127,"column":1,"offset":5816},"end":{"line":127,"column":33,"offset":5848},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":5816},"end":{"line":127,"column":48,"offset":5863},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is not ","position":{"start":{"line":127,"column":51,"offset":5866},"end":{"line":127,"column":77,"offset":5892},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":127,"column":77,"offset":5892},"end":{"line":127,"column":83,"offset":5898},"indent":[]}}],"position":{"start":{"line":127,"column":51,"offset":5866},"end":{"line":127,"column":83,"offset":5898},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":5816},"end":{"line":127,"column":83,"offset":5898},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isEmpty($value, $message = '')","position":{"start":{"line":128,"column":1,"offset":5899},"end":{"line":128,"column":33,"offset":5931},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":5899},"end":{"line":128,"column":48,"offset":5946},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is ","position":{"start":{"line":128,"column":51,"offset":5949},"end":{"line":128,"column":73,"offset":5971},"indent":[]}},{"type":"inlineCode","value":"empty()","position":{"start":{"line":128,"column":73,"offset":5971},"end":{"line":128,"column":82,"offset":5980},"indent":[]}}],"position":{"start":{"line":128,"column":51,"offset":5949},"end":{"line":128,"column":82,"offset":5980},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":5899},"end":{"line":128,"column":82,"offset":5980},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notEmpty($value, $message = '')","position":{"start":{"line":129,"column":1,"offset":5981},"end":{"line":129,"column":34,"offset":6014},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":5981},"end":{"line":129,"column":48,"offset":6028},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is not ","position":{"start":{"line":129,"column":51,"offset":6031},"end":{"line":129,"column":77,"offset":6057},"indent":[]}},{"type":"inlineCode","value":"empty()","position":{"start":{"line":129,"column":77,"offset":6057},"end":{"line":129,"column":86,"offset":6066},"indent":[]}}],"position":{"start":{"line":129,"column":51,"offset":6031},"end":{"line":129,"column":86,"offset":6066},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":5981},"end":{"line":129,"column":86,"offset":6066},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"eq($value, $value2, $message = '')","position":{"start":{"line":130,"column":1,"offset":6067},"end":{"line":130,"column":37,"offset":6103},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":6067},"end":{"line":130,"column":48,"offset":6114},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value equals another (","position":{"start":{"line":130,"column":51,"offset":6117},"end":{"line":130,"column":86,"offset":6152},"indent":[]}},{"type":"inlineCode","value":"==","position":{"start":{"line":130,"column":86,"offset":6152},"end":{"line":130,"column":90,"offset":6156},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":130,"column":90,"offset":6156},"end":{"line":130,"column":91,"offset":6157},"indent":[]}}],"position":{"start":{"line":130,"column":51,"offset":6117},"end":{"line":130,"column":91,"offset":6157},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":6067},"end":{"line":130,"column":91,"offset":6157},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notEq($value, $value2, $message = '')","position":{"start":{"line":131,"column":1,"offset":6158},"end":{"line":131,"column":40,"offset":6197},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":6158},"end":{"line":131,"column":48,"offset":6205},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value does not equal another (","position":{"start":{"line":131,"column":51,"offset":6208},"end":{"line":131,"column":94,"offset":6251},"indent":[]}},{"type":"inlineCode","value":"!=","position":{"start":{"line":131,"column":94,"offset":6251},"end":{"line":131,"column":98,"offset":6255},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":131,"column":98,"offset":6255},"end":{"line":131,"column":99,"offset":6256},"indent":[]}}],"position":{"start":{"line":131,"column":51,"offset":6208},"end":{"line":131,"column":99,"offset":6256},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":6158},"end":{"line":131,"column":99,"offset":6256},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"same($value, $value2, $message = '')","position":{"start":{"line":132,"column":1,"offset":6257},"end":{"line":132,"column":39,"offset":6295},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":6257},"end":{"line":132,"column":48,"offset":6304},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is identical to another (","position":{"start":{"line":132,"column":51,"offset":6307},"end":{"line":132,"column":95,"offset":6351},"indent":[]}},{"type":"inlineCode","value":"===","position":{"start":{"line":132,"column":95,"offset":6351},"end":{"line":132,"column":100,"offset":6356},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":132,"column":100,"offset":6356},"end":{"line":132,"column":101,"offset":6357},"indent":[]}}],"position":{"start":{"line":132,"column":51,"offset":6307},"end":{"line":132,"column":101,"offset":6357},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":6257},"end":{"line":132,"column":101,"offset":6357},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notSame($value, $value2, $message = '')","position":{"start":{"line":133,"column":1,"offset":6358},"end":{"line":133,"column":42,"offset":6399},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":6358},"end":{"line":133,"column":48,"offset":6405},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is not identical to another (","position":{"start":{"line":133,"column":51,"offset":6408},"end":{"line":133,"column":99,"offset":6456},"indent":[]}},{"type":"inlineCode","value":"!==","position":{"start":{"line":133,"column":99,"offset":6456},"end":{"line":133,"column":104,"offset":6461},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":133,"column":104,"offset":6461},"end":{"line":133,"column":105,"offset":6462},"indent":[]}}],"position":{"start":{"line":133,"column":51,"offset":6408},"end":{"line":133,"column":105,"offset":6462},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":6358},"end":{"line":133,"column":105,"offset":6462},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"greaterThan($value, $value2, $message = '')","position":{"start":{"line":134,"column":1,"offset":6463},"end":{"line":134,"column":46,"offset":6508},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":6463},"end":{"line":134,"column":48,"offset":6510},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is greater than another","position":{"start":{"line":134,"column":51,"offset":6513},"end":{"line":134,"column":93,"offset":6555},"indent":[]}}],"position":{"start":{"line":134,"column":51,"offset":6513},"end":{"line":134,"column":93,"offset":6555},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":6463},"end":{"line":134,"column":93,"offset":6555},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"greaterThanEq($value, $value2, $message = '')","position":{"start":{"line":135,"column":1,"offset":6556},"end":{"line":135,"column":48,"offset":6603},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":6556},"end":{"line":135,"column":48,"offset":6603},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is greater than or equal to another","position":{"start":{"line":135,"column":51,"offset":6606},"end":{"line":135,"column":105,"offset":6660},"indent":[]}}],"position":{"start":{"line":135,"column":51,"offset":6606},"end":{"line":135,"column":105,"offset":6660},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":6556},"end":{"line":135,"column":105,"offset":6660},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"lessThan($value, $value2, $message = '')","position":{"start":{"line":136,"column":1,"offset":6661},"end":{"line":136,"column":43,"offset":6703},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":6661},"end":{"line":136,"column":48,"offset":6708},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is less than another","position":{"start":{"line":136,"column":51,"offset":6711},"end":{"line":136,"column":90,"offset":6750},"indent":[]}}],"position":{"start":{"line":136,"column":51,"offset":6711},"end":{"line":136,"column":90,"offset":6750},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":6661},"end":{"line":136,"column":90,"offset":6750},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"lessThanEq($value, $value2, $message = '')","position":{"start":{"line":137,"column":1,"offset":6751},"end":{"line":137,"column":45,"offset":6795},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":6751},"end":{"line":137,"column":48,"offset":6798},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is less than or equal to another","position":{"start":{"line":137,"column":51,"offset":6801},"end":{"line":137,"column":102,"offset":6852},"indent":[]}}],"position":{"start":{"line":137,"column":51,"offset":6801},"end":{"line":137,"column":102,"offset":6852},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":6751},"end":{"line":137,"column":102,"offset":6852},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"range($value, $min, $max, $message = '')","position":{"start":{"line":138,"column":1,"offset":6853},"end":{"line":138,"column":43,"offset":6895},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":6853},"end":{"line":138,"column":48,"offset":6900},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is within a range","position":{"start":{"line":138,"column":51,"offset":6903},"end":{"line":138,"column":87,"offset":6939},"indent":[]}}],"position":{"start":{"line":138,"column":51,"offset":6903},"end":{"line":138,"column":87,"offset":6939},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":6853},"end":{"line":138,"column":87,"offset":6939},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"inArray($value, array $values, $message = '')","position":{"start":{"line":139,"column":1,"offset":6940},"end":{"line":139,"column":48,"offset":6987},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":6940},"end":{"line":139,"column":48,"offset":6987},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is one of a list of values","position":{"start":{"line":139,"column":51,"offset":6990},"end":{"line":139,"column":96,"offset":7035},"indent":[]}}],"position":{"start":{"line":139,"column":51,"offset":6990},"end":{"line":139,"column":96,"offset":7035},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":6940},"end":{"line":139,"column":96,"offset":7035},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"oneOf($value, array $values, $message = '')","position":{"start":{"line":140,"column":1,"offset":7036},"end":{"line":140,"column":46,"offset":7081},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":7036},"end":{"line":140,"column":48,"offset":7083},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is one of a list of values (alias of ","position":{"start":{"line":140,"column":51,"offset":7086},"end":{"line":140,"column":107,"offset":7142},"indent":[]}},{"type":"inlineCode","value":"inArray","position":{"start":{"line":140,"column":107,"offset":7142},"end":{"line":140,"column":116,"offset":7151},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":140,"column":116,"offset":7151},"end":{"line":140,"column":117,"offset":7152},"indent":[]}}],"position":{"start":{"line":140,"column":51,"offset":7086},"end":{"line":140,"column":117,"offset":7152},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":7036},"end":{"line":140,"column":117,"offset":7152},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":5315},"end":{"line":140,"column":117,"offset":7152},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"String Assertions","position":{"start":{"line":142,"column":5,"offset":7158},"end":{"line":142,"column":22,"offset":7175},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":7154},"end":{"line":142,"column":22,"offset":7175},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You should check that a value is a string with ","position":{"start":{"line":144,"column":1,"offset":7177},"end":{"line":144,"column":48,"offset":7224},"indent":[]}},{"type":"inlineCode","value":"Assert::string()","position":{"start":{"line":144,"column":48,"offset":7224},"end":{"line":144,"column":66,"offset":7242},"indent":[]}},{"type":"text","value":" before making\nany of the following assertions.","position":{"start":{"line":144,"column":66,"offset":7242},"end":{"line":145,"column":33,"offset":7289},"indent":[1]}}],"position":{"start":{"line":144,"column":1,"offset":7177},"end":{"line":145,"column":33,"offset":7289},"indent":[1]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Method","position":{"start":{"line":147,"column":1,"offset":7291},"end":{"line":147,"column":7,"offset":7297},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":7291},"end":{"line":147,"column":52,"offset":7342},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":147,"column":55,"offset":7345},"end":{"line":147,"column":66,"offset":7356},"indent":[]}}],"position":{"start":{"line":147,"column":55,"offset":7345},"end":{"line":147,"column":66,"offset":7356},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":7291},"end":{"line":147,"column":66,"offset":7356},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"contains($value, $subString, $message = '')","position":{"start":{"line":149,"column":1,"offset":7477},"end":{"line":149,"column":46,"offset":7522},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":7477},"end":{"line":149,"column":52,"offset":7528},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string contains a substring","position":{"start":{"line":149,"column":55,"offset":7531},"end":{"line":149,"column":95,"offset":7571},"indent":[]}}],"position":{"start":{"line":149,"column":55,"offset":7531},"end":{"line":149,"column":95,"offset":7571},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":7477},"end":{"line":149,"column":95,"offset":7571},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notContains($value, $subString, $message = '')","position":{"start":{"line":150,"column":1,"offset":7572},"end":{"line":150,"column":49,"offset":7620},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":7572},"end":{"line":150,"column":52,"offset":7623},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string does not contain a substring","position":{"start":{"line":150,"column":55,"offset":7626},"end":{"line":150,"column":103,"offset":7674},"indent":[]}}],"position":{"start":{"line":150,"column":55,"offset":7626},"end":{"line":150,"column":103,"offset":7674},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":7572},"end":{"line":150,"column":103,"offset":7674},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"startsWith($value, $prefix, $message = '')","position":{"start":{"line":151,"column":1,"offset":7675},"end":{"line":151,"column":45,"offset":7719},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":7675},"end":{"line":151,"column":52,"offset":7726},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string has a prefix","position":{"start":{"line":151,"column":55,"offset":7729},"end":{"line":151,"column":87,"offset":7761},"indent":[]}}],"position":{"start":{"line":151,"column":55,"offset":7729},"end":{"line":151,"column":87,"offset":7761},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":7675},"end":{"line":151,"column":87,"offset":7761},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notStartsWith($value, $prefix, $message = '')","position":{"start":{"line":152,"column":1,"offset":7762},"end":{"line":152,"column":48,"offset":7809},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":7762},"end":{"line":152,"column":52,"offset":7813},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string does not have a prefix","position":{"start":{"line":152,"column":55,"offset":7816},"end":{"line":152,"column":97,"offset":7858},"indent":[]}}],"position":{"start":{"line":152,"column":55,"offset":7816},"end":{"line":152,"column":97,"offset":7858},"indent":[]}}],"position":{"start":{"line":152,"column":1,"offset":7762},"end":{"line":152,"column":97,"offset":7858},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"startsWithLetter($value, $message = '')","position":{"start":{"line":153,"column":1,"offset":7859},"end":{"line":153,"column":42,"offset":7900},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":7859},"end":{"line":153,"column":52,"offset":7910},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string starts with a letter","position":{"start":{"line":153,"column":55,"offset":7913},"end":{"line":153,"column":95,"offset":7953},"indent":[]}}],"position":{"start":{"line":153,"column":55,"offset":7913},"end":{"line":153,"column":95,"offset":7953},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":7859},"end":{"line":153,"column":95,"offset":7953},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"endsWith($value, $suffix, $message = '')","position":{"start":{"line":154,"column":1,"offset":7954},"end":{"line":154,"column":43,"offset":7996},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":7954},"end":{"line":154,"column":52,"offset":8005},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string has a suffix","position":{"start":{"line":154,"column":55,"offset":8008},"end":{"line":154,"column":87,"offset":8040},"indent":[]}}],"position":{"start":{"line":154,"column":55,"offset":8008},"end":{"line":154,"column":87,"offset":8040},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":7954},"end":{"line":154,"column":87,"offset":8040},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notEndsWith($value, $suffix, $message = '')","position":{"start":{"line":155,"column":1,"offset":8041},"end":{"line":155,"column":46,"offset":8086},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":8041},"end":{"line":155,"column":52,"offset":8092},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string does not have a suffix","position":{"start":{"line":155,"column":55,"offset":8095},"end":{"line":155,"column":97,"offset":8137},"indent":[]}}],"position":{"start":{"line":155,"column":55,"offset":8095},"end":{"line":155,"column":97,"offset":8137},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":8041},"end":{"line":155,"column":97,"offset":8137},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"regex($value, $pattern, $message = '')","position":{"start":{"line":156,"column":1,"offset":8138},"end":{"line":156,"column":41,"offset":8178},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":8138},"end":{"line":156,"column":52,"offset":8189},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string matches a regular expression","position":{"start":{"line":156,"column":55,"offset":8192},"end":{"line":156,"column":103,"offset":8240},"indent":[]}}],"position":{"start":{"line":156,"column":55,"offset":8192},"end":{"line":156,"column":103,"offset":8240},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":8138},"end":{"line":156,"column":103,"offset":8240},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notRegex($value, $pattern, $message = '')","position":{"start":{"line":157,"column":1,"offset":8241},"end":{"line":157,"column":44,"offset":8284},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":8241},"end":{"line":157,"column":52,"offset":8292},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string does not match a regular expression","position":{"start":{"line":157,"column":55,"offset":8295},"end":{"line":157,"column":110,"offset":8350},"indent":[]}}],"position":{"start":{"line":157,"column":55,"offset":8295},"end":{"line":157,"column":110,"offset":8350},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":8241},"end":{"line":157,"column":110,"offset":8350},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"unicodeLetters($value, $message = '')","position":{"start":{"line":158,"column":1,"offset":8351},"end":{"line":158,"column":40,"offset":8390},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":8351},"end":{"line":158,"column":52,"offset":8402},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string contains Unicode letters only","position":{"start":{"line":158,"column":55,"offset":8405},"end":{"line":158,"column":104,"offset":8454},"indent":[]}}],"position":{"start":{"line":158,"column":55,"offset":8405},"end":{"line":158,"column":104,"offset":8454},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":8351},"end":{"line":158,"column":104,"offset":8454},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"alpha($value, $message = '')","position":{"start":{"line":159,"column":1,"offset":8455},"end":{"line":159,"column":31,"offset":8485},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":8455},"end":{"line":159,"column":52,"offset":8506},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string contains letters only","position":{"start":{"line":159,"column":55,"offset":8509},"end":{"line":159,"column":96,"offset":8550},"indent":[]}}],"position":{"start":{"line":159,"column":55,"offset":8509},"end":{"line":159,"column":96,"offset":8550},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":8455},"end":{"line":159,"column":96,"offset":8550},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"digits($value, $message = '')","position":{"start":{"line":160,"column":1,"offset":8551},"end":{"line":160,"column":32,"offset":8582},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":8551},"end":{"line":160,"column":52,"offset":8602},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string contains digits only","position":{"start":{"line":160,"column":55,"offset":8605},"end":{"line":160,"column":95,"offset":8645},"indent":[]}}],"position":{"start":{"line":160,"column":55,"offset":8605},"end":{"line":160,"column":95,"offset":8645},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":8551},"end":{"line":160,"column":95,"offset":8645},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"alnum($value, $message = '')","position":{"start":{"line":161,"column":1,"offset":8646},"end":{"line":161,"column":31,"offset":8676},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":8646},"end":{"line":161,"column":52,"offset":8697},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string contains letters and digits only","position":{"start":{"line":161,"column":55,"offset":8700},"end":{"line":161,"column":107,"offset":8752},"indent":[]}}],"position":{"start":{"line":161,"column":55,"offset":8700},"end":{"line":161,"column":107,"offset":8752},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":8646},"end":{"line":161,"column":107,"offset":8752},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"lower($value, $message = '')","position":{"start":{"line":162,"column":1,"offset":8753},"end":{"line":162,"column":31,"offset":8783},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":8753},"end":{"line":162,"column":52,"offset":8804},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string contains lowercase characters only","position":{"start":{"line":162,"column":55,"offset":8807},"end":{"line":162,"column":109,"offset":8861},"indent":[]}}],"position":{"start":{"line":162,"column":55,"offset":8807},"end":{"line":162,"column":109,"offset":8861},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":8753},"end":{"line":162,"column":109,"offset":8861},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"upper($value, $message = '')","position":{"start":{"line":163,"column":1,"offset":8862},"end":{"line":163,"column":31,"offset":8892},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":8862},"end":{"line":163,"column":52,"offset":8913},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string contains uppercase characters only","position":{"start":{"line":163,"column":55,"offset":8916},"end":{"line":163,"column":109,"offset":8970},"indent":[]}}],"position":{"start":{"line":163,"column":55,"offset":8916},"end":{"line":163,"column":109,"offset":8970},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":8862},"end":{"line":163,"column":109,"offset":8970},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"length($value, $length, $message = '')","position":{"start":{"line":164,"column":1,"offset":8971},"end":{"line":164,"column":41,"offset":9011},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":8971},"end":{"line":164,"column":52,"offset":9022},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string has a certain number of characters","position":{"start":{"line":164,"column":55,"offset":9025},"end":{"line":164,"column":109,"offset":9079},"indent":[]}}],"position":{"start":{"line":164,"column":55,"offset":9025},"end":{"line":164,"column":109,"offset":9079},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":8971},"end":{"line":164,"column":109,"offset":9079},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"minLength($value, $min, $message = '')","position":{"start":{"line":165,"column":1,"offset":9080},"end":{"line":165,"column":41,"offset":9120},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":9080},"end":{"line":165,"column":52,"offset":9131},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string has at least a certain number of characters","position":{"start":{"line":165,"column":55,"offset":9134},"end":{"line":165,"column":118,"offset":9197},"indent":[]}}],"position":{"start":{"line":165,"column":55,"offset":9134},"end":{"line":165,"column":118,"offset":9197},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":9080},"end":{"line":165,"column":118,"offset":9197},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"maxLength($value, $max, $message = '')","position":{"start":{"line":166,"column":1,"offset":9198},"end":{"line":166,"column":41,"offset":9238},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":9198},"end":{"line":166,"column":52,"offset":9249},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string has at most a certain number of characters","position":{"start":{"line":166,"column":55,"offset":9252},"end":{"line":166,"column":117,"offset":9314},"indent":[]}}],"position":{"start":{"line":166,"column":55,"offset":9252},"end":{"line":166,"column":117,"offset":9314},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":9198},"end":{"line":166,"column":117,"offset":9314},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"lengthBetween($value, $min, $max, $message = '')","position":{"start":{"line":167,"column":1,"offset":9315},"end":{"line":167,"column":51,"offset":9365},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":9315},"end":{"line":167,"column":52,"offset":9366},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string has a length in the given range","position":{"start":{"line":167,"column":55,"offset":9369},"end":{"line":167,"column":106,"offset":9420},"indent":[]}}],"position":{"start":{"line":167,"column":55,"offset":9369},"end":{"line":167,"column":106,"offset":9420},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":9315},"end":{"line":167,"column":106,"offset":9420},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"uuid($value, $message = '')","position":{"start":{"line":168,"column":1,"offset":9421},"end":{"line":168,"column":30,"offset":9450},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":9421},"end":{"line":168,"column":52,"offset":9472},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string is a valid UUID","position":{"start":{"line":168,"column":55,"offset":9475},"end":{"line":168,"column":90,"offset":9510},"indent":[]}}],"position":{"start":{"line":168,"column":55,"offset":9475},"end":{"line":168,"column":90,"offset":9510},"indent":[]}}],"position":{"start":{"line":168,"column":1,"offset":9421},"end":{"line":168,"column":90,"offset":9510},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"ip($value, $message = '')","position":{"start":{"line":169,"column":1,"offset":9511},"end":{"line":169,"column":28,"offset":9538},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":9511},"end":{"line":169,"column":52,"offset":9562},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string is a valid IP (either IPv4 or IPv6)","position":{"start":{"line":169,"column":55,"offset":9565},"end":{"line":169,"column":110,"offset":9620},"indent":[]}}],"position":{"start":{"line":169,"column":55,"offset":9565},"end":{"line":169,"column":110,"offset":9620},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":9511},"end":{"line":169,"column":110,"offset":9620},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"ipv4($value, $message = '')","position":{"start":{"line":170,"column":1,"offset":9621},"end":{"line":170,"column":30,"offset":9650},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":9621},"end":{"line":170,"column":52,"offset":9672},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string is a valid IPv4","position":{"start":{"line":170,"column":55,"offset":9675},"end":{"line":170,"column":90,"offset":9710},"indent":[]}}],"position":{"start":{"line":170,"column":55,"offset":9675},"end":{"line":170,"column":90,"offset":9710},"indent":[]}}],"position":{"start":{"line":170,"column":1,"offset":9621},"end":{"line":170,"column":90,"offset":9710},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"ipv6($value, $message = '')","position":{"start":{"line":171,"column":1,"offset":9711},"end":{"line":171,"column":30,"offset":9740},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":9711},"end":{"line":171,"column":52,"offset":9762},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string is a valid IPv6","position":{"start":{"line":171,"column":55,"offset":9765},"end":{"line":171,"column":90,"offset":9800},"indent":[]}}],"position":{"start":{"line":171,"column":55,"offset":9765},"end":{"line":171,"column":90,"offset":9800},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":9711},"end":{"line":171,"column":90,"offset":9800},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"email($value, $message = '')","position":{"start":{"line":172,"column":1,"offset":9801},"end":{"line":172,"column":31,"offset":9831},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":9801},"end":{"line":172,"column":52,"offset":9852},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string is a valid e-mail address","position":{"start":{"line":172,"column":55,"offset":9855},"end":{"line":172,"column":100,"offset":9900},"indent":[]}}],"position":{"start":{"line":172,"column":55,"offset":9855},"end":{"line":172,"column":100,"offset":9900},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":9801},"end":{"line":172,"column":100,"offset":9900},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"notWhitespaceOnly($value, $message = '')","position":{"start":{"line":173,"column":1,"offset":9901},"end":{"line":173,"column":43,"offset":9943},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":9901},"end":{"line":173,"column":52,"offset":9952},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a string contains at least one non-whitespace character","position":{"start":{"line":173,"column":55,"offset":9955},"end":{"line":173,"column":121,"offset":10021},"indent":[]}}],"position":{"start":{"line":173,"column":55,"offset":9955},"end":{"line":173,"column":121,"offset":10021},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":9901},"end":{"line":173,"column":121,"offset":10021},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":7291},"end":{"line":173,"column":121,"offset":10021},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"File Assertions","position":{"start":{"line":175,"column":5,"offset":10027},"end":{"line":175,"column":20,"offset":10042},"indent":[]}}],"position":{"start":{"line":175,"column":1,"offset":10023},"end":{"line":175,"column":20,"offset":10042},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Method","position":{"start":{"line":177,"column":1,"offset":10044},"end":{"line":177,"column":7,"offset":10050},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":10044},"end":{"line":177,"column":36,"offset":10079},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":177,"column":39,"offset":10082},"end":{"line":177,"column":50,"offset":10093},"indent":[]}}],"position":{"start":{"line":177,"column":39,"offset":10082},"end":{"line":177,"column":50,"offset":10093},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":10044},"end":{"line":177,"column":50,"offset":10093},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"fileExists($value, $message = '')","position":{"start":{"line":179,"column":1,"offset":10183},"end":{"line":179,"column":36,"offset":10218},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":10183},"end":{"line":179,"column":36,"offset":10218},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an existing path","position":{"start":{"line":179,"column":39,"offset":10221},"end":{"line":179,"column":77,"offset":10259},"indent":[]}}],"position":{"start":{"line":179,"column":39,"offset":10221},"end":{"line":179,"column":77,"offset":10259},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":10183},"end":{"line":179,"column":77,"offset":10259},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"file($value, $message = '')","position":{"start":{"line":180,"column":1,"offset":10260},"end":{"line":180,"column":30,"offset":10289},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":10260},"end":{"line":180,"column":36,"offset":10295},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an existing file","position":{"start":{"line":180,"column":39,"offset":10298},"end":{"line":180,"column":77,"offset":10336},"indent":[]}}],"position":{"start":{"line":180,"column":39,"offset":10298},"end":{"line":180,"column":77,"offset":10336},"indent":[]}}],"position":{"start":{"line":180,"column":1,"offset":10260},"end":{"line":180,"column":77,"offset":10336},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"directory($value, $message = '')","position":{"start":{"line":181,"column":1,"offset":10337},"end":{"line":181,"column":35,"offset":10371},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":10337},"end":{"line":181,"column":36,"offset":10372},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an existing directory","position":{"start":{"line":181,"column":39,"offset":10375},"end":{"line":181,"column":82,"offset":10418},"indent":[]}}],"position":{"start":{"line":181,"column":39,"offset":10375},"end":{"line":181,"column":82,"offset":10418},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":10337},"end":{"line":181,"column":82,"offset":10418},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"readable($value, $message = '')","position":{"start":{"line":182,"column":1,"offset":10419},"end":{"line":182,"column":34,"offset":10452},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":10419},"end":{"line":182,"column":36,"offset":10454},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a readable path","position":{"start":{"line":182,"column":39,"offset":10457},"end":{"line":182,"column":76,"offset":10494},"indent":[]}}],"position":{"start":{"line":182,"column":39,"offset":10457},"end":{"line":182,"column":76,"offset":10494},"indent":[]}}],"position":{"start":{"line":182,"column":1,"offset":10419},"end":{"line":182,"column":76,"offset":10494},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"writable($value, $message = '')","position":{"start":{"line":183,"column":1,"offset":10495},"end":{"line":183,"column":34,"offset":10528},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":10495},"end":{"line":183,"column":36,"offset":10530},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a writable path","position":{"start":{"line":183,"column":39,"offset":10533},"end":{"line":183,"column":76,"offset":10570},"indent":[]}}],"position":{"start":{"line":183,"column":39,"offset":10533},"end":{"line":183,"column":76,"offset":10570},"indent":[]}}],"position":{"start":{"line":183,"column":1,"offset":10495},"end":{"line":183,"column":76,"offset":10570},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":10044},"end":{"line":183,"column":76,"offset":10570},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Object Assertions","position":{"start":{"line":185,"column":5,"offset":10576},"end":{"line":185,"column":22,"offset":10593},"indent":[]}}],"position":{"start":{"line":185,"column":1,"offset":10572},"end":{"line":185,"column":22,"offset":10593},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Method","position":{"start":{"line":187,"column":1,"offset":10595},"end":{"line":187,"column":7,"offset":10601},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":10595},"end":{"line":187,"column":54,"offset":10648},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":187,"column":57,"offset":10651},"end":{"line":187,"column":68,"offset":10662},"indent":[]}}],"position":{"start":{"line":187,"column":57,"offset":10651},"end":{"line":187,"column":68,"offset":10662},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":10595},"end":{"line":187,"column":68,"offset":10662},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"classExists($value, $message = '')","position":{"start":{"line":189,"column":1,"offset":10770},"end":{"line":189,"column":37,"offset":10806},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":10770},"end":{"line":189,"column":54,"offset":10823},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an existing class name","position":{"start":{"line":189,"column":57,"offset":10826},"end":{"line":189,"column":101,"offset":10870},"indent":[]}}],"position":{"start":{"line":189,"column":57,"offset":10826},"end":{"line":189,"column":101,"offset":10870},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":10770},"end":{"line":189,"column":101,"offset":10870},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"subclassOf($value, $class, $message = '')","position":{"start":{"line":190,"column":1,"offset":10871},"end":{"line":190,"column":44,"offset":10914},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":10871},"end":{"line":190,"column":54,"offset":10924},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a class is a subclass of another","position":{"start":{"line":190,"column":57,"offset":10927},"end":{"line":190,"column":100,"offset":10970},"indent":[]}}],"position":{"start":{"line":190,"column":57,"offset":10927},"end":{"line":190,"column":100,"offset":10970},"indent":[]}}],"position":{"start":{"line":190,"column":1,"offset":10871},"end":{"line":190,"column":100,"offset":10970},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"interfaceExists($value, $message = '')","position":{"start":{"line":191,"column":1,"offset":10971},"end":{"line":191,"column":41,"offset":11011},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":10971},"end":{"line":191,"column":54,"offset":11024},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is an existing interface name","position":{"start":{"line":191,"column":57,"offset":11027},"end":{"line":191,"column":105,"offset":11075},"indent":[]}}],"position":{"start":{"line":191,"column":57,"offset":11027},"end":{"line":191,"column":105,"offset":11075},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":10971},"end":{"line":191,"column":105,"offset":11075},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"implementsInterface($value, $class, $message = '')","position":{"start":{"line":192,"column":1,"offset":11076},"end":{"line":192,"column":53,"offset":11128},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":11076},"end":{"line":192,"column":54,"offset":11129},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a class implements an interface","position":{"start":{"line":192,"column":57,"offset":11132},"end":{"line":192,"column":99,"offset":11174},"indent":[]}}],"position":{"start":{"line":192,"column":57,"offset":11132},"end":{"line":192,"column":99,"offset":11174},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":11076},"end":{"line":192,"column":99,"offset":11174},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"propertyExists($value, $property, $message = '')","position":{"start":{"line":193,"column":1,"offset":11175},"end":{"line":193,"column":51,"offset":11225},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":11175},"end":{"line":193,"column":54,"offset":11228},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a property exists in a class/object","position":{"start":{"line":193,"column":57,"offset":11231},"end":{"line":193,"column":103,"offset":11277},"indent":[]}}],"position":{"start":{"line":193,"column":57,"offset":11231},"end":{"line":193,"column":103,"offset":11277},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":11175},"end":{"line":193,"column":103,"offset":11277},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"propertyNotExists($value, $property, $message = '')","position":{"start":{"line":194,"column":1,"offset":11278},"end":{"line":194,"column":54,"offset":11331},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":11278},"end":{"line":194,"column":54,"offset":11331},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a property does not exist in a class/object","position":{"start":{"line":194,"column":57,"offset":11334},"end":{"line":194,"column":111,"offset":11388},"indent":[]}}],"position":{"start":{"line":194,"column":57,"offset":11334},"end":{"line":194,"column":111,"offset":11388},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":11278},"end":{"line":194,"column":111,"offset":11388},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"methodExists($value, $method, $message = '')","position":{"start":{"line":195,"column":1,"offset":11389},"end":{"line":195,"column":47,"offset":11435},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":11389},"end":{"line":195,"column":54,"offset":11442},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a method exists in a class/object","position":{"start":{"line":195,"column":57,"offset":11445},"end":{"line":195,"column":101,"offset":11489},"indent":[]}}],"position":{"start":{"line":195,"column":57,"offset":11445},"end":{"line":195,"column":101,"offset":11489},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":11389},"end":{"line":195,"column":101,"offset":11489},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"methodNotExists($value, $method, $message = '')","position":{"start":{"line":196,"column":1,"offset":11490},"end":{"line":196,"column":50,"offset":11539},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":11490},"end":{"line":196,"column":54,"offset":11543},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a method does not exist in a class/object","position":{"start":{"line":196,"column":57,"offset":11546},"end":{"line":196,"column":109,"offset":11598},"indent":[]}}],"position":{"start":{"line":196,"column":57,"offset":11546},"end":{"line":196,"column":109,"offset":11598},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":11490},"end":{"line":196,"column":109,"offset":11598},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":10595},"end":{"line":196,"column":109,"offset":11598},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Array Assertions","position":{"start":{"line":198,"column":5,"offset":11604},"end":{"line":198,"column":21,"offset":11620},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":11600},"end":{"line":198,"column":21,"offset":11620},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Method","position":{"start":{"line":200,"column":1,"offset":11622},"end":{"line":200,"column":7,"offset":11628},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":11622},"end":{"line":200,"column":51,"offset":11672},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":200,"column":54,"offset":11675},"end":{"line":200,"column":65,"offset":11686},"indent":[]}}],"position":{"start":{"line":200,"column":54,"offset":11675},"end":{"line":200,"column":65,"offset":11686},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":11622},"end":{"line":200,"column":65,"offset":11686},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"keyExists($array, $key, $message = '')","position":{"start":{"line":202,"column":1,"offset":11807},"end":{"line":202,"column":41,"offset":11847},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":11807},"end":{"line":202,"column":51,"offset":11857},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a key exists in an array","position":{"start":{"line":202,"column":54,"offset":11860},"end":{"line":202,"column":89,"offset":11895},"indent":[]}}],"position":{"start":{"line":202,"column":54,"offset":11860},"end":{"line":202,"column":89,"offset":11895},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":11807},"end":{"line":202,"column":89,"offset":11895},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"keyNotExists($array, $key, $message = '')","position":{"start":{"line":203,"column":1,"offset":11896},"end":{"line":203,"column":44,"offset":11939},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":11896},"end":{"line":203,"column":51,"offset":11946},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a key does not exist in an array","position":{"start":{"line":203,"column":54,"offset":11949},"end":{"line":203,"column":97,"offset":11992},"indent":[]}}],"position":{"start":{"line":203,"column":54,"offset":11949},"end":{"line":203,"column":97,"offset":11992},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":11896},"end":{"line":203,"column":97,"offset":11992},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"validArrayKey($key, $message = '')","position":{"start":{"line":204,"column":1,"offset":11993},"end":{"line":204,"column":37,"offset":12029},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":11993},"end":{"line":204,"column":51,"offset":12043},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a value is a valid array key (int or string)","position":{"start":{"line":204,"column":54,"offset":12046},"end":{"line":204,"column":109,"offset":12101},"indent":[]}}],"position":{"start":{"line":204,"column":54,"offset":12046},"end":{"line":204,"column":109,"offset":12101},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":11993},"end":{"line":204,"column":109,"offset":12101},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"count($array, $number, $message = '')","position":{"start":{"line":205,"column":1,"offset":12102},"end":{"line":205,"column":40,"offset":12141},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":12102},"end":{"line":205,"column":51,"offset":12152},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that an array contains a specific number of elements","position":{"start":{"line":205,"column":54,"offset":12155},"end":{"line":205,"column":112,"offset":12213},"indent":[]}}],"position":{"start":{"line":205,"column":54,"offset":12155},"end":{"line":205,"column":112,"offset":12213},"indent":[]}}],"position":{"start":{"line":205,"column":1,"offset":12102},"end":{"line":205,"column":112,"offset":12213},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"minCount($array, $min, $message = '')","position":{"start":{"line":206,"column":1,"offset":12214},"end":{"line":206,"column":40,"offset":12253},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":12214},"end":{"line":206,"column":51,"offset":12264},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that an array contains at least a certain number of elements","position":{"start":{"line":206,"column":54,"offset":12267},"end":{"line":206,"column":120,"offset":12333},"indent":[]}}],"position":{"start":{"line":206,"column":54,"offset":12267},"end":{"line":206,"column":120,"offset":12333},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":12214},"end":{"line":206,"column":120,"offset":12333},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"maxCount($array, $max, $message = '')","position":{"start":{"line":207,"column":1,"offset":12334},"end":{"line":207,"column":40,"offset":12373},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":12334},"end":{"line":207,"column":51,"offset":12384},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that an array contains at most a certain number of elements","position":{"start":{"line":207,"column":54,"offset":12387},"end":{"line":207,"column":119,"offset":12452},"indent":[]}}],"position":{"start":{"line":207,"column":54,"offset":12387},"end":{"line":207,"column":119,"offset":12452},"indent":[]}}],"position":{"start":{"line":207,"column":1,"offset":12334},"end":{"line":207,"column":119,"offset":12452},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"countBetween($array, $min, $max, $message = '')","position":{"start":{"line":208,"column":1,"offset":12453},"end":{"line":208,"column":50,"offset":12502},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":12453},"end":{"line":208,"column":51,"offset":12503},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that an array has a count in the given range","position":{"start":{"line":208,"column":54,"offset":12506},"end":{"line":208,"column":104,"offset":12556},"indent":[]}}],"position":{"start":{"line":208,"column":54,"offset":12506},"end":{"line":208,"column":104,"offset":12556},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":12453},"end":{"line":208,"column":104,"offset":12556},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isList($array, $message = '')","position":{"start":{"line":209,"column":1,"offset":12557},"end":{"line":209,"column":32,"offset":12588},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":12557},"end":{"line":209,"column":51,"offset":12607},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that an array is a non-associative list","position":{"start":{"line":209,"column":54,"offset":12610},"end":{"line":209,"column":99,"offset":12655},"indent":[]}}],"position":{"start":{"line":209,"column":54,"offset":12610},"end":{"line":209,"column":99,"offset":12655},"indent":[]}}],"position":{"start":{"line":209,"column":1,"offset":12557},"end":{"line":209,"column":99,"offset":12655},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isNonEmptyList($array, $message = '')","position":{"start":{"line":210,"column":1,"offset":12656},"end":{"line":210,"column":40,"offset":12695},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":12656},"end":{"line":210,"column":51,"offset":12706},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that an array is a non-associative list, and not empty","position":{"start":{"line":210,"column":54,"offset":12709},"end":{"line":210,"column":114,"offset":12769},"indent":[]}}],"position":{"start":{"line":210,"column":54,"offset":12709},"end":{"line":210,"column":114,"offset":12769},"indent":[]}}],"position":{"start":{"line":210,"column":1,"offset":12656},"end":{"line":210,"column":114,"offset":12769},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isMap($array, $message = '')","position":{"start":{"line":211,"column":1,"offset":12770},"end":{"line":211,"column":31,"offset":12800},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":12770},"end":{"line":211,"column":51,"offset":12820},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that an array is associative and has strings as keys","position":{"start":{"line":211,"column":54,"offset":12823},"end":{"line":211,"column":112,"offset":12881},"indent":[]}}],"position":{"start":{"line":211,"column":54,"offset":12823},"end":{"line":211,"column":112,"offset":12881},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":12770},"end":{"line":211,"column":112,"offset":12881},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"isNonEmptyMap($array, $message = '')","position":{"start":{"line":212,"column":1,"offset":12882},"end":{"line":212,"column":39,"offset":12920},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":12882},"end":{"line":212,"column":51,"offset":12932},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that an array is associative and has strings as keys, and is not empty","position":{"start":{"line":212,"column":54,"offset":12935},"end":{"line":212,"column":130,"offset":13011},"indent":[]}}],"position":{"start":{"line":212,"column":54,"offset":12935},"end":{"line":212,"column":130,"offset":13011},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":12882},"end":{"line":212,"column":130,"offset":13011},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":11622},"end":{"line":212,"column":130,"offset":13011},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Function Assertions","position":{"start":{"line":214,"column":5,"offset":13017},"end":{"line":214,"column":24,"offset":13036},"indent":[]}}],"position":{"start":{"line":214,"column":1,"offset":13013},"end":{"line":214,"column":24,"offset":13036},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Method","position":{"start":{"line":216,"column":1,"offset":13038},"end":{"line":216,"column":7,"offset":13044},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":13038},"end":{"line":216,"column":44,"offset":13081},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":216,"column":47,"offset":13084},"end":{"line":216,"column":58,"offset":13095},"indent":[]}}],"position":{"start":{"line":216,"column":47,"offset":13084},"end":{"line":216,"column":58,"offset":13095},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":13038},"end":{"line":216,"column":58,"offset":13095},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"throws($closure, $class, $message = '')","position":{"start":{"line":218,"column":1,"offset":13244},"end":{"line":218,"column":42,"offset":13285},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":13244},"end":{"line":218,"column":44,"offset":13287},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Check that a function throws a certain exception. Subclasses of the exception class will be accepted.","position":{"start":{"line":218,"column":47,"offset":13290},"end":{"line":218,"column":148,"offset":13391},"indent":[]}}],"position":{"start":{"line":218,"column":47,"offset":13290},"end":{"line":218,"column":148,"offset":13391},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":13244},"end":{"line":218,"column":148,"offset":13391},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":13038},"end":{"line":218,"column":148,"offset":13391},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Collection Assertions","position":{"start":{"line":220,"column":5,"offset":13397},"end":{"line":220,"column":26,"offset":13418},"indent":[]}}],"position":{"start":{"line":220,"column":1,"offset":13393},"end":{"line":220,"column":26,"offset":13418},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"All of the above assertions can be prefixed with ","position":{"start":{"line":222,"column":1,"offset":13420},"end":{"line":222,"column":50,"offset":13469},"indent":[]}},{"type":"inlineCode","value":"all*()","position":{"start":{"line":222,"column":50,"offset":13469},"end":{"line":222,"column":58,"offset":13477},"indent":[]}},{"type":"text","value":" to test the contents\nof an array or a ","position":{"start":{"line":222,"column":58,"offset":13477},"end":{"line":223,"column":18,"offset":13516},"indent":[1]}},{"type":"inlineCode","value":"\\Traversable","position":{"start":{"line":223,"column":18,"offset":13516},"end":{"line":223,"column":32,"offset":13530},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":223,"column":32,"offset":13530},"end":{"line":223,"column":33,"offset":13531},"indent":[]}}],"position":{"start":{"line":222,"column":1,"offset":13420},"end":{"line":223,"column":33,"offset":13531},"indent":[1]}},{"type":"code","lang":"php","meta":null,"value":"Assert::allIsInstanceOf($employees, 'Acme\\Employee');","position":{"start":{"line":225,"column":1,"offset":13533},"end":{"line":227,"column":4,"offset":13597},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Nullable Assertions","position":{"start":{"line":229,"column":5,"offset":13603},"end":{"line":229,"column":24,"offset":13622},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":13599},"end":{"line":229,"column":24,"offset":13622},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"All of the above assertions can be prefixed with ","position":{"start":{"line":231,"column":1,"offset":13624},"end":{"line":231,"column":50,"offset":13673},"indent":[]}},{"type":"inlineCode","value":"nullOr*()","position":{"start":{"line":231,"column":50,"offset":13673},"end":{"line":231,"column":61,"offset":13684},"indent":[]}},{"type":"text","value":" to run the\nassertion only if it the value is not ","position":{"start":{"line":231,"column":61,"offset":13684},"end":{"line":232,"column":39,"offset":13734},"indent":[1]}},{"type":"inlineCode","value":"null","position":{"start":{"line":232,"column":39,"offset":13734},"end":{"line":232,"column":45,"offset":13740},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":232,"column":45,"offset":13740},"end":{"line":232,"column":46,"offset":13741},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":13624},"end":{"line":232,"column":46,"offset":13741},"indent":[1]}},{"type":"code","lang":"php","meta":null,"value":"Assert::nullOrString($middleName, 'The middle name must be a string or null. Got: %s');","position":{"start":{"line":234,"column":1,"offset":13743},"end":{"line":236,"column":4,"offset":13841},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Extending Assert","position":{"start":{"line":238,"column":5,"offset":13847},"end":{"line":238,"column":21,"offset":13863},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":13843},"end":{"line":238,"column":21,"offset":13863},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":240,"column":1,"offset":13865},"end":{"line":240,"column":5,"offset":13869},"indent":[]}},{"type":"inlineCode","value":"Assert","position":{"start":{"line":240,"column":5,"offset":13869},"end":{"line":240,"column":13,"offset":13877},"indent":[]}},{"type":"text","value":" class comes with a few methods, which can be overridden to change the class behaviour. You can also extend it to\nadd your own assertions.","position":{"start":{"line":240,"column":13,"offset":13877},"end":{"line":241,"column":25,"offset":14015},"indent":[1]}}],"position":{"start":{"line":240,"column":1,"offset":13865},"end":{"line":241,"column":25,"offset":14015},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Overriding methods","position":{"start":{"line":243,"column":6,"offset":14022},"end":{"line":243,"column":24,"offset":14040},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":14017},"end":{"line":243,"column":24,"offset":14040},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Overriding the following methods in your assertion class allows you to change the behaviour of the assertions:","position":{"start":{"line":245,"column":1,"offset":14042},"end":{"line":245,"column":111,"offset":14152},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":14042},"end":{"line":245,"column":111,"offset":14152},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"public static function __callStatic($name, $arguments)","position":{"start":{"line":247,"column":3,"offset":14156},"end":{"line":247,"column":59,"offset":14212},"indent":[]}}],"position":{"start":{"line":247,"column":3,"offset":14156},"end":{"line":247,"column":59,"offset":14212},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This method is used to 'create' the ","position":{"start":{"line":248,"column":5,"offset":14217},"end":{"line":248,"column":41,"offset":14253},"indent":[]}},{"type":"inlineCode","value":"nullOr","position":{"start":{"line":248,"column":41,"offset":14253},"end":{"line":248,"column":49,"offset":14261},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":248,"column":49,"offset":14261},"end":{"line":248,"column":54,"offset":14266},"indent":[]}},{"type":"inlineCode","value":"all","position":{"start":{"line":248,"column":54,"offset":14266},"end":{"line":248,"column":59,"offset":14271},"indent":[]}},{"type":"text","value":" versions of the assertions.","position":{"start":{"line":248,"column":59,"offset":14271},"end":{"line":248,"column":87,"offset":14299},"indent":[]}}],"position":{"start":{"line":248,"column":5,"offset":14217},"end":{"line":248,"column":87,"offset":14299},"indent":[]}}],"position":{"start":{"line":248,"column":3,"offset":14215},"end":{"line":248,"column":87,"offset":14299},"indent":[]}}],"position":{"start":{"line":248,"column":3,"offset":14215},"end":{"line":248,"column":87,"offset":14299},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":14154},"end":{"line":248,"column":87,"offset":14299},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"protected static function valueToString($value)","position":{"start":{"line":249,"column":3,"offset":14302},"end":{"line":249,"column":52,"offset":14351},"indent":[]}}],"position":{"start":{"line":249,"column":3,"offset":14302},"end":{"line":249,"column":52,"offset":14351},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This method is used for error messages, to convert the value to a string value for displaying. You could use this for representing a value object with a ","position":{"start":{"line":250,"column":5,"offset":14356},"end":{"line":250,"column":158,"offset":14509},"indent":[]}},{"type":"inlineCode","value":"__toString","position":{"start":{"line":250,"column":158,"offset":14509},"end":{"line":250,"column":170,"offset":14521},"indent":[]}},{"type":"text","value":" method for example.","position":{"start":{"line":250,"column":170,"offset":14521},"end":{"line":250,"column":190,"offset":14541},"indent":[]}}],"position":{"start":{"line":250,"column":5,"offset":14356},"end":{"line":250,"column":190,"offset":14541},"indent":[]}}],"position":{"start":{"line":250,"column":3,"offset":14354},"end":{"line":250,"column":190,"offset":14541},"indent":[]}}],"position":{"start":{"line":250,"column":3,"offset":14354},"end":{"line":250,"column":190,"offset":14541},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":14300},"end":{"line":250,"column":190,"offset":14541},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"protected static function typeToString($value)","position":{"start":{"line":251,"column":3,"offset":14544},"end":{"line":251,"column":51,"offset":14592},"indent":[]}}],"position":{"start":{"line":251,"column":3,"offset":14544},"end":{"line":251,"column":51,"offset":14592},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This method is used for error messages, to convert the a value to a string representing its type.","position":{"start":{"line":252,"column":5,"offset":14597},"end":{"line":252,"column":102,"offset":14694},"indent":[]}}],"position":{"start":{"line":252,"column":5,"offset":14597},"end":{"line":252,"column":102,"offset":14694},"indent":[]}}],"position":{"start":{"line":252,"column":3,"offset":14595},"end":{"line":252,"column":102,"offset":14694},"indent":[]}}],"position":{"start":{"line":252,"column":3,"offset":14595},"end":{"line":252,"column":102,"offset":14694},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":14542},"end":{"line":252,"column":102,"offset":14694},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"protected static function strlen($value)","position":{"start":{"line":253,"column":3,"offset":14697},"end":{"line":253,"column":45,"offset":14739},"indent":[]}}],"position":{"start":{"line":253,"column":3,"offset":14697},"end":{"line":253,"column":45,"offset":14739},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This method is used to calculate string length for relevant methods, using the ","position":{"start":{"line":254,"column":5,"offset":14744},"end":{"line":254,"column":84,"offset":14823},"indent":[]}},{"type":"inlineCode","value":"mb_strlen","position":{"start":{"line":254,"column":84,"offset":14823},"end":{"line":254,"column":95,"offset":14834},"indent":[]}},{"type":"text","value":" if available and useful.","position":{"start":{"line":254,"column":95,"offset":14834},"end":{"line":254,"column":120,"offset":14859},"indent":[]}}],"position":{"start":{"line":254,"column":5,"offset":14744},"end":{"line":254,"column":120,"offset":14859},"indent":[]}}],"position":{"start":{"line":254,"column":3,"offset":14742},"end":{"line":254,"column":120,"offset":14859},"indent":[]}}],"position":{"start":{"line":254,"column":3,"offset":14742},"end":{"line":254,"column":120,"offset":14859},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":14695},"end":{"line":254,"column":120,"offset":14859},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"protected static function reportInvalidArgument($message)","position":{"start":{"line":255,"column":3,"offset":14862},"end":{"line":255,"column":62,"offset":14921},"indent":[]}}],"position":{"start":{"line":255,"column":3,"offset":14862},"end":{"line":255,"column":62,"offset":14921},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"This method is called when an assertion fails, with the specified error message. Here you can throw your own exception, or log something.","position":{"start":{"line":256,"column":5,"offset":14926},"end":{"line":256,"column":142,"offset":15063},"indent":[]}}],"position":{"start":{"line":256,"column":5,"offset":14926},"end":{"line":256,"column":142,"offset":15063},"indent":[]}}],"position":{"start":{"line":256,"column":3,"offset":14924},"end":{"line":256,"column":142,"offset":15063},"indent":[]}}],"position":{"start":{"line":256,"column":3,"offset":14924},"end":{"line":256,"column":142,"offset":15063},"indent":[]}}],"position":{"start":{"line":255,"column":1,"offset":14860},"end":{"line":256,"column":142,"offset":15063},"indent":[1]}}],"position":{"start":{"line":247,"column":1,"offset":14154},"end":{"line":256,"column":142,"offset":15063},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Static analysis support","position":{"start":{"line":258,"column":4,"offset":15068},"end":{"line":258,"column":27,"offset":15091},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":15065},"end":{"line":258,"column":27,"offset":15091},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Where applicable, assertion functions are annotated to support Psalm's\n","position":{"start":{"line":260,"column":1,"offset":15093},"end":{"line":261,"column":1,"offset":15164},"indent":[1]}},{"type":"link","title":null,"url":"https://psalm.dev/docs/annotating_code/assertion_syntax/","children":[{"type":"text","value":"Assertion syntax","position":{"start":{"line":261,"column":2,"offset":15165},"end":{"line":261,"column":18,"offset":15181},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":15164},"end":{"line":261,"column":77,"offset":15240},"indent":[]}},{"type":"text","value":".\nA dedicated ","position":{"start":{"line":261,"column":77,"offset":15240},"end":{"line":262,"column":13,"offset":15254},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/phpstan/phpstan-webmozart-assert","children":[{"type":"text","value":"PHPStan Plugin","position":{"start":{"line":262,"column":14,"offset":15255},"end":{"line":262,"column":28,"offset":15269},"indent":[]}}],"position":{"start":{"line":262,"column":13,"offset":15254},"end":{"line":262,"column":82,"offset":15323},"indent":[]}},{"type":"text","value":" is\nrequired for proper type support.","position":{"start":{"line":262,"column":82,"offset":15323},"end":{"line":263,"column":34,"offset":15360},"indent":[1]}}],"position":{"start":{"line":260,"column":1,"offset":15093},"end":{"line":263,"column":34,"offset":15360},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Authors","position":{"start":{"line":265,"column":1,"offset":15362},"end":{"line":265,"column":8,"offset":15369},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":15362},"end":{"line":266,"column":8,"offset":15377},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"bernhard schussek","label":"Bernhard Schussek","referenceType":"shortcut","children":[{"type":"text","value":"Bernhard Schussek","position":{"start":{"line":268,"column":4,"offset":15382},"end":{"line":268,"column":21,"offset":15399},"indent":[]}}],"position":{"start":{"line":268,"column":3,"offset":15381},"end":{"line":268,"column":22,"offset":15400},"indent":[]}},{"type":"text","value":" a.k.a. ","position":{"start":{"line":268,"column":22,"offset":15400},"end":{"line":268,"column":30,"offset":15408},"indent":[]}},{"type":"linkReference","identifier":"@webmozart","label":"@webmozart","referenceType":"shortcut","children":[{"type":"text","value":"@webmozart","position":{"start":{"line":268,"column":31,"offset":15409},"end":{"line":268,"column":41,"offset":15419},"indent":[]}}],"position":{"start":{"line":268,"column":30,"offset":15408},"end":{"line":268,"column":42,"offset":15420},"indent":[]}}],"position":{"start":{"line":268,"column":3,"offset":15381},"end":{"line":268,"column":42,"offset":15420},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":15379},"end":{"line":268,"column":42,"offset":15420},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"the community contributors","label":"The Community Contributors","referenceType":"shortcut","children":[{"type":"text","value":"The Community Contributors","position":{"start":{"line":269,"column":4,"offset":15424},"end":{"line":269,"column":30,"offset":15450},"indent":[]}}],"position":{"start":{"line":269,"column":3,"offset":15423},"end":{"line":269,"column":31,"offset":15451},"indent":[]}}],"position":{"start":{"line":269,"column":3,"offset":15423},"end":{"line":269,"column":31,"offset":15451},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":15421},"end":{"line":269,"column":31,"offset":15451},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":15379},"end":{"line":269,"column":31,"offset":15451},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Contribute","position":{"start":{"line":271,"column":1,"offset":15453},"end":{"line":271,"column":11,"offset":15463},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":15453},"end":{"line":272,"column":11,"offset":15474},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Contributions to the package are always welcome!","position":{"start":{"line":274,"column":1,"offset":15476},"end":{"line":274,"column":49,"offset":15524},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":15476},"end":{"line":274,"column":49,"offset":15524},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Report any bugs or issues you find on the ","position":{"start":{"line":276,"column":3,"offset":15528},"end":{"line":276,"column":45,"offset":15570},"indent":[]}},{"type":"linkReference","identifier":"issue tracker","label":"issue tracker","referenceType":"shortcut","children":[{"type":"text","value":"issue tracker","position":{"start":{"line":276,"column":46,"offset":15571},"end":{"line":276,"column":59,"offset":15584},"indent":[]}}],"position":{"start":{"line":276,"column":45,"offset":15570},"end":{"line":276,"column":60,"offset":15585},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":276,"column":60,"offset":15585},"end":{"line":276,"column":61,"offset":15586},"indent":[]}}],"position":{"start":{"line":276,"column":3,"offset":15528},"end":{"line":276,"column":61,"offset":15586},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":15526},"end":{"line":276,"column":61,"offset":15586},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can grab the source code at the package's ","position":{"start":{"line":277,"column":3,"offset":15589},"end":{"line":277,"column":49,"offset":15635},"indent":[]}},{"type":"linkReference","identifier":"git repository","label":"Git repository","referenceType":"shortcut","children":[{"type":"text","value":"Git repository","position":{"start":{"line":277,"column":50,"offset":15636},"end":{"line":277,"column":64,"offset":15650},"indent":[]}}],"position":{"start":{"line":277,"column":49,"offset":15635},"end":{"line":277,"column":65,"offset":15651},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":277,"column":65,"offset":15651},"end":{"line":277,"column":66,"offset":15652},"indent":[]}}],"position":{"start":{"line":277,"column":3,"offset":15589},"end":{"line":277,"column":66,"offset":15652},"indent":[]}}],"position":{"start":{"line":277,"column":1,"offset":15587},"end":{"line":277,"column":66,"offset":15652},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":15526},"end":{"line":277,"column":66,"offset":15652},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"License","position":{"start":{"line":279,"column":1,"offset":15654},"end":{"line":279,"column":8,"offset":15661},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":15654},"end":{"line":280,"column":8,"offset":15669},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"All contents of this package are licensed under the ","position":{"start":{"line":282,"column":1,"offset":15671},"end":{"line":282,"column":53,"offset":15723},"indent":[]}},{"type":"linkReference","identifier":"mit license","label":"MIT license","referenceType":"shortcut","children":[{"type":"text","value":"MIT license","position":{"start":{"line":282,"column":54,"offset":15724},"end":{"line":282,"column":65,"offset":15735},"indent":[]}}],"position":{"start":{"line":282,"column":53,"offset":15723},"end":{"line":282,"column":66,"offset":15736},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":282,"column":66,"offset":15736},"end":{"line":282,"column":67,"offset":15737},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":15671},"end":{"line":282,"column":67,"offset":15737},"indent":[]}},{"type":"definition","identifier":"beberlei/assert","label":"beberlei/assert","title":null,"url":"https://github.com/beberlei/assert","position":{"start":{"line":284,"column":1,"offset":15739},"end":{"line":284,"column":54,"offset":15792},"indent":[]}},{"type":"definition","identifier":"assert package","label":"assert package","title":null,"url":"https://github.com/beberlei/assert","position":{"start":{"line":285,"column":1,"offset":15793},"end":{"line":285,"column":53,"offset":15845},"indent":[]}},{"type":"definition","identifier":"composer","label":"Composer","title":null,"url":"https://getcomposer.org","position":{"start":{"line":286,"column":1,"offset":15846},"end":{"line":286,"column":36,"offset":15881},"indent":[]}},{"type":"definition","identifier":"bernhard schussek","label":"Bernhard Schussek","title":null,"url":"https://webmozarts.com","position":{"start":{"line":287,"column":1,"offset":15882},"end":{"line":287,"column":44,"offset":15925},"indent":[]}},{"type":"definition","identifier":"the community contributors","label":"The Community Contributors","title":null,"url":"https://github.com/webmozart/assert/graphs/contributors","position":{"start":{"line":288,"column":1,"offset":15926},"end":{"line":288,"column":86,"offset":16011},"indent":[]}},{"type":"definition","identifier":"issue tracker","label":"issue tracker","title":null,"url":"https://github.com/webmozart/assert/issues","position":{"start":{"line":289,"column":1,"offset":16012},"end":{"line":289,"column":60,"offset":16071},"indent":[]}},{"type":"definition","identifier":"git repository","label":"Git repository","title":null,"url":"https://github.com/webmozart/assert","position":{"start":{"line":290,"column":1,"offset":16072},"end":{"line":290,"column":54,"offset":16125},"indent":[]}},{"type":"definition","identifier":"@webmozart","label":"@webmozart","title":null,"url":"https://twitter.com/webmozart","position":{"start":{"line":291,"column":1,"offset":16126},"end":{"line":291,"column":44,"offset":16169},"indent":[]}},{"type":"definition","identifier":"mit license","label":"MIT license","title":null,"url":"LICENSE","position":{"start":{"line":292,"column":1,"offset":16170},"end":{"line":292,"column":23,"offset":16192},"indent":[]}},{"type":"definition","identifier":"`assert`","label":"`Assert`","title":null,"url":"src/Assert.php","position":{"start":{"line":293,"column":1,"offset":16193},"end":{"line":293,"column":27,"offset":16219},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":296,"column":1,"offset":16222},"end":{"line":296,"column":31,"offset":16252},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":296,"column":31,"offset":16252}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"webmozart-assert\"\n    }}>{`Webmozart Assert`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/webmozart/assert\"\n      }}><img alt=\"Latest Stable Version\" src=\"https://poser.pugx.org/webmozart/assert/v/stable.svg\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/webmozart/assert\"\n      }}><img alt=\"Total Downloads\" src=\"https://poser.pugx.org/webmozart/assert/downloads.svg\" /></a></p>\n    <p>{`This library contains efficient assertions to test the input and output of\nyour methods. With these assertions, you can greatly reduce the amount of coding\nneeded to write a safe implementation.`}</p>\n    <p>{`All assertions in the `}<a parentName=\"p\" {...{\n        \"href\": \"src/Assert.php\"\n      }}><inlineCode parentName=\"a\">{`Assert`}</inlineCode></a>{` class throw an `}<inlineCode parentName=\"p\">{`Webmozart\\\\Assert\\\\InvalidArgumentException`}</inlineCode>{` if\nthey fail.`}</p>\n    <h2 {...{\n      \"id\": \"faq\"\n    }}>{`FAQ`}</h2>\n    <p><strong parentName=\"p\">{`What's the difference to `}<a parentName=\"strong\" {...{\n          \"href\": \"https://github.com/beberlei/assert\"\n        }}>{`beberlei/assert`}</a>{`?`}</strong></p>\n    <p>{`This library is heavily inspired by Benjamin Eberlei's wonderful `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/beberlei/assert\"\n      }}>{`assert package`}</a>{`,\nbut fixes a usability issue with error messages that can't be fixed there without\nbreaking backwards compatibility.`}</p>\n    <p>{`This package features usable error messages by default. However, you can also\neasily write custom error messages:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Assert::string($path, 'The path is expected to be a string. Got: %s');\n`}</code></pre>\n    <p>{`In `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/beberlei/assert\"\n      }}>{`beberlei/assert`}</a>{`, the ordering of the `}<inlineCode parentName=\"p\">{`%s`}</inlineCode>{` placeholders is different for\nevery assertion. This package, on the contrary, provides consistent placeholder\nordering for all assertions:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`%s`}</inlineCode>{`: The tested value as string, e.g. `}<inlineCode parentName=\"li\">{`\"/foo/bar\"`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`%2$s`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`%3$s`}</inlineCode>{`, ...: Additional assertion-specific values, e.g. the\nminimum/maximum length, allowed values, etc.`}</li>\n    </ul>\n    <p>{`Check the source code of the assertions to find out details about the additional\navailable placeholders.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`Use `}<a parentName=\"p\" {...{\n        \"href\": \"https://getcomposer.org\"\n      }}>{`Composer`}</a>{` to install the package:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`composer require webmozart/assert\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Webmozart\\\\Assert\\\\Assert;\n\nclass Employee\n{\n    public function __construct($id)\n    {\n        Assert::integer($id, 'The employee ID must be an integer. Got: %s');\n        Assert::greaterThan($id, 0, 'The employee ID must be a positive integer. Got: %s');\n    }\n}\n`}</code></pre>\n    <p>{`If you create an employee with an invalid ID, an exception is thrown:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`new Employee('foobar');\n// => Webmozart\\\\Assert\\\\InvalidArgumentException:\n//    The employee ID must be an integer. Got: string\n\nnew Employee(-10);\n// => Webmozart\\\\Assert\\\\InvalidArgumentException:\n//    The employee ID must be a positive integer. Got: -10\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"assertions\"\n    }}>{`Assertions`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"src/Assert.php\"\n      }}><inlineCode parentName=\"a\">{`Assert`}</inlineCode></a>{` class provides the following assertions:`}</p>\n    <h3 {...{\n      \"id\": \"type-assertions\"\n    }}>{`Type Assertions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a string`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`stringNotEmpty($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a non-empty string`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`integer($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an integer`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`integerish($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value casts to an integer`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`positiveInteger($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a positive (non-zero) integer`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`float($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a float`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`numeric($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is numeric`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`natural($value, $message= ''')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a non-negative integer`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a boolean`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`scalar($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a scalar`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an object`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`resource($value, $type = null, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a resource`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isCallable($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a callable`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isArray($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an array`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isTraversable($value, $message = '')`}</inlineCode>{`  (deprecated)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an array or a `}<inlineCode parentName=\"td\">{`\\\\Traversable`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isIterable($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an array or a `}<inlineCode parentName=\"td\">{`\\\\Traversable`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isCountable($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an array or a `}<inlineCode parentName=\"td\">{`\\\\Countable`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isInstanceOf($value, $class, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an `}<inlineCode parentName=\"td\">{`instanceof`}</inlineCode>{` a class`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isInstanceOfAny($value, array $classes, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an `}<inlineCode parentName=\"td\">{`instanceof`}</inlineCode>{` at least one class on the array of classes`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notInstanceOf($value, $class, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is not an `}<inlineCode parentName=\"td\">{`instanceof`}</inlineCode>{` a class`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isAOf($value, $class, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is of the class or has one of its parents`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isAnyOf($value, array $classes, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is of at least one of the classes or has one of its parents`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isNotA($value, $class, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is not of the class or has not one of its parents`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isArrayAccessible($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value can be accessed as an array`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`uniqueValues($values, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that the given array contains unique values`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"comparison-assertions\"\n    }}>{`Comparison Assertions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is `}<inlineCode parentName=\"td\">{`true`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notFalse($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is not `}<inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`null($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is `}<inlineCode parentName=\"td\">{`null`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notNull($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is not `}<inlineCode parentName=\"td\">{`null`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isEmpty($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is `}<inlineCode parentName=\"td\">{`empty()`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notEmpty($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is not `}<inlineCode parentName=\"td\">{`empty()`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`eq($value, $value2, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value equals another (`}<inlineCode parentName=\"td\">{`==`}</inlineCode>{`)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notEq($value, $value2, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value does not equal another (`}<inlineCode parentName=\"td\">{`!=`}</inlineCode>{`)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`same($value, $value2, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is identical to another (`}<inlineCode parentName=\"td\">{`===`}</inlineCode>{`)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notSame($value, $value2, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is not identical to another (`}<inlineCode parentName=\"td\">{`!==`}</inlineCode>{`)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`greaterThan($value, $value2, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is greater than another`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`greaterThanEq($value, $value2, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is greater than or equal to another`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`lessThan($value, $value2, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is less than another`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`lessThanEq($value, $value2, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is less than or equal to another`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`range($value, $min, $max, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is within a range`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`inArray($value, array $values, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is one of a list of values`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`oneOf($value, array $values, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is one of a list of values (alias of `}<inlineCode parentName=\"td\">{`inArray`}</inlineCode>{`)`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"string-assertions\"\n    }}>{`String Assertions`}</h3>\n    <p>{`You should check that a value is a string with `}<inlineCode parentName=\"p\">{`Assert::string()`}</inlineCode>{` before making\nany of the following assertions.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`contains($value, $subString, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string contains a substring`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notContains($value, $subString, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string does not contain a substring`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`startsWith($value, $prefix, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string has a prefix`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notStartsWith($value, $prefix, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string does not have a prefix`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`startsWithLetter($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string starts with a letter`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`endsWith($value, $suffix, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string has a suffix`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notEndsWith($value, $suffix, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string does not have a suffix`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`regex($value, $pattern, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string matches a regular expression`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notRegex($value, $pattern, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string does not match a regular expression`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`unicodeLetters($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string contains Unicode letters only`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`alpha($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string contains letters only`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`digits($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string contains digits only`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`alnum($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string contains letters and digits only`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`lower($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string contains lowercase characters only`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`upper($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string contains uppercase characters only`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`length($value, $length, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string has a certain number of characters`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`minLength($value, $min, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string has at least a certain number of characters`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`maxLength($value, $max, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string has at most a certain number of characters`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`lengthBetween($value, $min, $max, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string has a length in the given range`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`uuid($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string is a valid UUID`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ip($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string is a valid IP (either IPv4 or IPv6)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ipv4($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string is a valid IPv4`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ipv6($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string is a valid IPv6`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`email($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string is a valid e-mail address`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`notWhitespaceOnly($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a string contains at least one non-whitespace character`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"file-assertions\"\n    }}>{`File Assertions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`fileExists($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an existing path`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`file($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an existing file`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`directory($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an existing directory`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`readable($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a readable path`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`writable($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a writable path`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"object-assertions\"\n    }}>{`Object Assertions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`classExists($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an existing class name`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`subclassOf($value, $class, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a class is a subclass of another`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`interfaceExists($value, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is an existing interface name`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`implementsInterface($value, $class, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a class implements an interface`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`propertyExists($value, $property, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a property exists in a class/object`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`propertyNotExists($value, $property, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a property does not exist in a class/object`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`methodExists($value, $method, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a method exists in a class/object`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`methodNotExists($value, $method, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a method does not exist in a class/object`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"array-assertions\"\n    }}>{`Array Assertions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`keyExists($array, $key, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a key exists in an array`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`keyNotExists($array, $key, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a key does not exist in an array`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`validArrayKey($key, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a value is a valid array key (int or string)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`count($array, $number, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that an array contains a specific number of elements`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`minCount($array, $min, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that an array contains at least a certain number of elements`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`maxCount($array, $max, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that an array contains at most a certain number of elements`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`countBetween($array, $min, $max, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that an array has a count in the given range`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isList($array, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that an array is a non-associative list`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isNonEmptyList($array, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that an array is a non-associative list, and not empty`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isMap($array, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that an array is associative and has strings as keys`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isNonEmptyMap($array, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that an array is associative and has strings as keys, and is not empty`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"function-assertions\"\n    }}>{`Function Assertions`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`throws($closure, $class, $message = '')`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Check that a function throws a certain exception. Subclasses of the exception class will be accepted.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"collection-assertions\"\n    }}>{`Collection Assertions`}</h3>\n    <p>{`All of the above assertions can be prefixed with `}<inlineCode parentName=\"p\">{`all*()`}</inlineCode>{` to test the contents\nof an array or a `}<inlineCode parentName=\"p\">{`\\\\Traversable`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`Assert::allIsInstanceOf($employees, 'Acme\\\\Employee');\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"nullable-assertions\"\n    }}>{`Nullable Assertions`}</h3>\n    <p>{`All of the above assertions can be prefixed with `}<inlineCode parentName=\"p\">{`nullOr*()`}</inlineCode>{` to run the\nassertion only if it the value is not `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`Assert::nullOrString($middleName, 'The middle name must be a string or null. Got: %s');\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"extending-assert\"\n    }}>{`Extending Assert`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Assert`}</inlineCode>{` class comes with a few methods, which can be overridden to change the class behaviour. You can also extend it to\nadd your own assertions.`}</p>\n    <h4 {...{\n      \"id\": \"overriding-methods\"\n    }}>{`Overriding methods`}</h4>\n    <p>{`Overriding the following methods in your assertion class allows you to change the behaviour of the assertions:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`public static function __callStatic($name, $arguments)`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This method is used to 'create' the `}<inlineCode parentName=\"li\">{`nullOr`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`all`}</inlineCode>{` versions of the assertions.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`protected static function valueToString($value)`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This method is used for error messages, to convert the value to a string value for displaying. You could use this for representing a value object with a `}<inlineCode parentName=\"li\">{`__toString`}</inlineCode>{` method for example.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`protected static function typeToString($value)`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This method is used for error messages, to convert the a value to a string representing its type.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`protected static function strlen($value)`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This method is used to calculate string length for relevant methods, using the `}<inlineCode parentName=\"li\">{`mb_strlen`}</inlineCode>{` if available and useful.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`protected static function reportInvalidArgument($message)`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This method is called when an assertion fails, with the specified error message. Here you can throw your own exception, or log something.`}</li>\n        </ul>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"static-analysis-support\"\n    }}>{`Static analysis support`}</h2>\n    <p>{`Where applicable, assertion functions are annotated to support Psalm's\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://psalm.dev/docs/annotating_code/assertion_syntax/\"\n      }}>{`Assertion syntax`}</a>{`.\nA dedicated `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/phpstan/phpstan-webmozart-assert\"\n      }}>{`PHPStan Plugin`}</a>{` is\nrequired for proper type support.`}</p>\n    <h2 {...{\n      \"id\": \"authors\"\n    }}>{`Authors`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://webmozarts.com\"\n        }}>{`Bernhard Schussek`}</a>{` a.k.a. `}<a parentName=\"li\" {...{\n          \"href\": \"https://twitter.com/webmozart\"\n        }}>{`@webmozart`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/webmozart/assert/graphs/contributors\"\n        }}>{`The Community Contributors`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"contribute\"\n    }}>{`Contribute`}</h2>\n    <p>{`Contributions to the package are always welcome!`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Report any bugs or issues you find on the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/webmozart/assert/issues\"\n        }}>{`issue tracker`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`You can grab the source code at the package's `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/webmozart/assert\"\n        }}>{`Git repository`}</a>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"license\"\n    }}>{`License`}</h2>\n    <p>{`All contents of this package are licensed under the `}<a parentName=\"p\" {...{\n        \"href\": \"LICENSE\"\n      }}>{`MIT license`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}