{"expireTime":9007200985218040000,"key":"gatsby-plugin-mdx-entire-payload-3377c8e0af719fdabdb1f1fc23d589f7-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Guzzle Upgrade Guide","position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":21,"offset":162},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":8,"column":21,"offset":183},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6.0 to 7.0","position":{"start":{"line":10,"column":1,"offset":185},"end":{"line":10,"column":11,"offset":195},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":185},"end":{"line":11,"column":11,"offset":206},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"In order to take advantage of the new features of PHP, Guzzle dropped the support\nof PHP 5. The minimum supported PHP version is now PHP 7.2. Type hints and return\ntypes for functions and methods have been added wherever possible. ","position":{"start":{"line":13,"column":1,"offset":208},"end":{"line":15,"column":68,"offset":439},"indent":[1,1]}}],"position":{"start":{"line":13,"column":1,"offset":208},"end":{"line":15,"column":68,"offset":439},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Please make sure:","position":{"start":{"line":17,"column":1,"offset":441},"end":{"line":17,"column":18,"offset":458},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":441},"end":{"line":17,"column":18,"offset":458},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You are calling a function or a method with the correct type.","position":{"start":{"line":18,"column":3,"offset":461},"end":{"line":18,"column":64,"offset":522},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":461},"end":{"line":18,"column":64,"offset":522},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":459},"end":{"line":18,"column":64,"offset":522},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If you extend a class of Guzzle; update all signatures on methods you override.","position":{"start":{"line":19,"column":3,"offset":525},"end":{"line":19,"column":82,"offset":604},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":525},"end":{"line":19,"column":82,"offset":604},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":523},"end":{"line":19,"column":82,"offset":604},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":459},"end":{"line":19,"column":82,"offset":604},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Other backwards compatibility breaking changes","position":{"start":{"line":21,"column":6,"offset":611},"end":{"line":21,"column":52,"offset":657},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":606},"end":{"line":21,"column":52,"offset":657},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Class ","position":{"start":{"line":23,"column":3,"offset":661},"end":{"line":23,"column":9,"offset":667},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\UriTemplate","position":{"start":{"line":23,"column":9,"offset":667},"end":{"line":23,"column":33,"offset":691},"indent":[]}},{"type":"text","value":" is removed.","position":{"start":{"line":23,"column":33,"offset":691},"end":{"line":23,"column":45,"offset":703},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":661},"end":{"line":23,"column":45,"offset":703},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":659},"end":{"line":23,"column":45,"offset":703},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Class ","position":{"start":{"line":24,"column":3,"offset":706},"end":{"line":24,"column":9,"offset":712},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\SeekException","position":{"start":{"line":24,"column":9,"offset":712},"end":{"line":24,"column":45,"offset":748},"indent":[]}},{"type":"text","value":" is removed.","position":{"start":{"line":24,"column":45,"offset":748},"end":{"line":24,"column":57,"offset":760},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":706},"end":{"line":24,"column":57,"offset":760},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":704},"end":{"line":24,"column":57,"offset":760},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Classes ","position":{"start":{"line":25,"column":3,"offset":763},"end":{"line":25,"column":11,"offset":771},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\BadResponseException","position":{"start":{"line":25,"column":11,"offset":771},"end":{"line":25,"column":54,"offset":814},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":25,"column":54,"offset":814},"end":{"line":25,"column":56,"offset":816},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\ClientException","position":{"start":{"line":25,"column":56,"offset":816},"end":{"line":25,"column":94,"offset":854},"indent":[]}},{"type":"text","value":", \n","position":{"start":{"line":25,"column":94,"offset":854},"end":{"line":26,"column":3,"offset":859},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\ServerException","position":{"start":{"line":26,"column":3,"offset":859},"end":{"line":26,"column":41,"offset":897},"indent":[]}},{"type":"text","value":" can no longer be initialized with an empty\nResponse as argument.","position":{"start":{"line":26,"column":41,"offset":897},"end":{"line":27,"column":24,"offset":964},"indent":[3]}}],"position":{"start":{"line":25,"column":3,"offset":763},"end":{"line":27,"column":24,"offset":964},"indent":[3,3]}}],"position":{"start":{"line":25,"column":1,"offset":761},"end":{"line":27,"column":24,"offset":964},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Class ","position":{"start":{"line":28,"column":3,"offset":967},"end":{"line":28,"column":9,"offset":973},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\ConnectException","position":{"start":{"line":28,"column":9,"offset":973},"end":{"line":28,"column":48,"offset":1012},"indent":[]}},{"type":"text","value":" now extends ","position":{"start":{"line":28,"column":48,"offset":1012},"end":{"line":28,"column":61,"offset":1025},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\TransferException","position":{"start":{"line":28,"column":61,"offset":1025},"end":{"line":28,"column":101,"offset":1065},"indent":[]}},{"type":"text","value":"\ninstead of ","position":{"start":{"line":28,"column":101,"offset":1065},"end":{"line":29,"column":14,"offset":1079},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\RequestException","position":{"start":{"line":29,"column":14,"offset":1079},"end":{"line":29,"column":53,"offset":1118},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":29,"column":53,"offset":1118},"end":{"line":29,"column":54,"offset":1119},"indent":[]}}],"position":{"start":{"line":28,"column":3,"offset":967},"end":{"line":29,"column":54,"offset":1119},"indent":[3]}}],"position":{"start":{"line":28,"column":1,"offset":965},"end":{"line":29,"column":54,"offset":1119},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Function ","position":{"start":{"line":30,"column":3,"offset":1122},"end":{"line":30,"column":12,"offset":1131},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\ConnectException::getResponse()","position":{"start":{"line":30,"column":12,"offset":1131},"end":{"line":30,"column":66,"offset":1185},"indent":[]}},{"type":"text","value":" is removed.","position":{"start":{"line":30,"column":66,"offset":1185},"end":{"line":30,"column":78,"offset":1197},"indent":[]}}],"position":{"start":{"line":30,"column":3,"offset":1122},"end":{"line":30,"column":78,"offset":1197},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1120},"end":{"line":30,"column":78,"offset":1197},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Function ","position":{"start":{"line":31,"column":3,"offset":1200},"end":{"line":31,"column":12,"offset":1209},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\ConnectException::hasResponse()","position":{"start":{"line":31,"column":12,"offset":1209},"end":{"line":31,"column":66,"offset":1263},"indent":[]}},{"type":"text","value":" is removed.","position":{"start":{"line":31,"column":66,"offset":1263},"end":{"line":31,"column":78,"offset":1275},"indent":[]}}],"position":{"start":{"line":31,"column":3,"offset":1200},"end":{"line":31,"column":78,"offset":1275},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1198},"end":{"line":31,"column":78,"offset":1275},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Constant ","position":{"start":{"line":32,"column":3,"offset":1278},"end":{"line":32,"column":12,"offset":1287},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\ClientInterface::VERSION","position":{"start":{"line":32,"column":12,"offset":1287},"end":{"line":32,"column":49,"offset":1324},"indent":[]}},{"type":"text","value":" is removed. Added ","position":{"start":{"line":32,"column":49,"offset":1324},"end":{"line":32,"column":68,"offset":1343},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\ClientInterface::MAJOR_VERSION","position":{"start":{"line":32,"column":68,"offset":1343},"end":{"line":32,"column":111,"offset":1386},"indent":[]}},{"type":"text","value":" instead.","position":{"start":{"line":32,"column":111,"offset":1386},"end":{"line":32,"column":120,"offset":1395},"indent":[]}}],"position":{"start":{"line":32,"column":3,"offset":1278},"end":{"line":32,"column":120,"offset":1395},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1276},"end":{"line":32,"column":120,"offset":1395},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Function ","position":{"start":{"line":33,"column":3,"offset":1398},"end":{"line":33,"column":12,"offset":1407},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\RequestException::getResponseBodySummary","position":{"start":{"line":33,"column":12,"offset":1407},"end":{"line":33,"column":75,"offset":1470},"indent":[]}},{"type":"text","value":" is removed.\nUse ","position":{"start":{"line":33,"column":75,"offset":1470},"end":{"line":34,"column":7,"offset":1489},"indent":[3]}},{"type":"inlineCode","value":"\\GuzzleHttp\\Psr7\\get_message_body_summary","position":{"start":{"line":34,"column":7,"offset":1489},"end":{"line":34,"column":50,"offset":1532},"indent":[]}},{"type":"text","value":" as an alternative.","position":{"start":{"line":34,"column":50,"offset":1532},"end":{"line":34,"column":69,"offset":1551},"indent":[]}}],"position":{"start":{"line":33,"column":3,"offset":1398},"end":{"line":34,"column":69,"offset":1551},"indent":[3]}}],"position":{"start":{"line":33,"column":1,"offset":1396},"end":{"line":34,"column":69,"offset":1551},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Function ","position":{"start":{"line":35,"column":3,"offset":1554},"end":{"line":35,"column":12,"offset":1563},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Cookie\\CookieJar::getCookieValue","position":{"start":{"line":35,"column":12,"offset":1563},"end":{"line":35,"column":57,"offset":1608},"indent":[]}},{"type":"text","value":" is removed.","position":{"start":{"line":35,"column":57,"offset":1608},"end":{"line":35,"column":69,"offset":1620},"indent":[]}}],"position":{"start":{"line":35,"column":3,"offset":1554},"end":{"line":35,"column":69,"offset":1620},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1552},"end":{"line":35,"column":69,"offset":1620},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Request option ","position":{"start":{"line":36,"column":3,"offset":1623},"end":{"line":36,"column":18,"offset":1638},"indent":[]}},{"type":"inlineCode","value":"exceptions","position":{"start":{"line":36,"column":18,"offset":1638},"end":{"line":36,"column":30,"offset":1650},"indent":[]}},{"type":"text","value":" is removed. Please use ","position":{"start":{"line":36,"column":30,"offset":1650},"end":{"line":36,"column":54,"offset":1674},"indent":[]}},{"type":"inlineCode","value":"http_errors","position":{"start":{"line":36,"column":54,"offset":1674},"end":{"line":36,"column":67,"offset":1687},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":36,"column":67,"offset":1687},"end":{"line":36,"column":68,"offset":1688},"indent":[]}}],"position":{"start":{"line":36,"column":3,"offset":1623},"end":{"line":36,"column":68,"offset":1688},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1621},"end":{"line":36,"column":68,"offset":1688},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Request option ","position":{"start":{"line":37,"column":3,"offset":1691},"end":{"line":37,"column":18,"offset":1706},"indent":[]}},{"type":"inlineCode","value":"save_to","position":{"start":{"line":37,"column":18,"offset":1706},"end":{"line":37,"column":27,"offset":1715},"indent":[]}},{"type":"text","value":" is removed. Please use ","position":{"start":{"line":37,"column":27,"offset":1715},"end":{"line":37,"column":51,"offset":1739},"indent":[]}},{"type":"inlineCode","value":"sink","position":{"start":{"line":37,"column":51,"offset":1739},"end":{"line":37,"column":57,"offset":1745},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":37,"column":57,"offset":1745},"end":{"line":37,"column":58,"offset":1746},"indent":[]}}],"position":{"start":{"line":37,"column":3,"offset":1691},"end":{"line":37,"column":58,"offset":1746},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1689},"end":{"line":37,"column":58,"offset":1746},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Pool option ","position":{"start":{"line":38,"column":3,"offset":1749},"end":{"line":38,"column":15,"offset":1761},"indent":[]}},{"type":"inlineCode","value":"pool_size","position":{"start":{"line":38,"column":15,"offset":1761},"end":{"line":38,"column":26,"offset":1772},"indent":[]}},{"type":"text","value":" is removed. Please use ","position":{"start":{"line":38,"column":26,"offset":1772},"end":{"line":38,"column":50,"offset":1796},"indent":[]}},{"type":"inlineCode","value":"concurrency","position":{"start":{"line":38,"column":50,"offset":1796},"end":{"line":38,"column":63,"offset":1809},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":38,"column":63,"offset":1809},"end":{"line":38,"column":64,"offset":1810},"indent":[]}}],"position":{"start":{"line":38,"column":3,"offset":1749},"end":{"line":38,"column":64,"offset":1810},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1747},"end":{"line":38,"column":64,"offset":1810},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"We now look for environment variables in the ","position":{"start":{"line":39,"column":3,"offset":1813},"end":{"line":39,"column":48,"offset":1858},"indent":[]}},{"type":"inlineCode","value":"$_SERVER","position":{"start":{"line":39,"column":48,"offset":1858},"end":{"line":39,"column":58,"offset":1868},"indent":[]}},{"type":"text","value":" super global, due to thread safety issues with ","position":{"start":{"line":39,"column":58,"offset":1868},"end":{"line":39,"column":106,"offset":1916},"indent":[]}},{"type":"inlineCode","value":"getenv","position":{"start":{"line":39,"column":106,"offset":1916},"end":{"line":39,"column":114,"offset":1924},"indent":[]}},{"type":"text","value":". We continue to fallback to ","position":{"start":{"line":39,"column":114,"offset":1924},"end":{"line":39,"column":143,"offset":1953},"indent":[]}},{"type":"inlineCode","value":"getenv","position":{"start":{"line":39,"column":143,"offset":1953},"end":{"line":39,"column":151,"offset":1961},"indent":[]}},{"type":"text","value":" in CLI environments, for maximum compatibility.","position":{"start":{"line":39,"column":151,"offset":1961},"end":{"line":39,"column":199,"offset":2009},"indent":[]}}],"position":{"start":{"line":39,"column":3,"offset":1813},"end":{"line":39,"column":199,"offset":2009},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1811},"end":{"line":39,"column":199,"offset":2009},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":40,"column":3,"offset":2012},"end":{"line":40,"column":7,"offset":2016},"indent":[]}},{"type":"inlineCode","value":"get","position":{"start":{"line":40,"column":7,"offset":2016},"end":{"line":40,"column":12,"offset":2021},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":12,"offset":2021},"end":{"line":40,"column":14,"offset":2023},"indent":[]}},{"type":"inlineCode","value":"head","position":{"start":{"line":40,"column":14,"offset":2023},"end":{"line":40,"column":20,"offset":2029},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":20,"offset":2029},"end":{"line":40,"column":22,"offset":2031},"indent":[]}},{"type":"inlineCode","value":"put","position":{"start":{"line":40,"column":22,"offset":2031},"end":{"line":40,"column":27,"offset":2036},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":27,"offset":2036},"end":{"line":40,"column":29,"offset":2038},"indent":[]}},{"type":"inlineCode","value":"post","position":{"start":{"line":40,"column":29,"offset":2038},"end":{"line":40,"column":35,"offset":2044},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":35,"offset":2044},"end":{"line":40,"column":37,"offset":2046},"indent":[]}},{"type":"inlineCode","value":"patch","position":{"start":{"line":40,"column":37,"offset":2046},"end":{"line":40,"column":44,"offset":2053},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":44,"offset":2053},"end":{"line":40,"column":46,"offset":2055},"indent":[]}},{"type":"inlineCode","value":"delete","position":{"start":{"line":40,"column":46,"offset":2055},"end":{"line":40,"column":54,"offset":2063},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":54,"offset":2063},"end":{"line":40,"column":56,"offset":2065},"indent":[]}},{"type":"inlineCode","value":"getAsync","position":{"start":{"line":40,"column":56,"offset":2065},"end":{"line":40,"column":66,"offset":2075},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":66,"offset":2075},"end":{"line":40,"column":68,"offset":2077},"indent":[]}},{"type":"inlineCode","value":"headAsync","position":{"start":{"line":40,"column":68,"offset":2077},"end":{"line":40,"column":79,"offset":2088},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":79,"offset":2088},"end":{"line":40,"column":81,"offset":2090},"indent":[]}},{"type":"inlineCode","value":"putAsync","position":{"start":{"line":40,"column":81,"offset":2090},"end":{"line":40,"column":91,"offset":2100},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":91,"offset":2100},"end":{"line":40,"column":93,"offset":2102},"indent":[]}},{"type":"inlineCode","value":"postAsync","position":{"start":{"line":40,"column":93,"offset":2102},"end":{"line":40,"column":104,"offset":2113},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":40,"column":104,"offset":2113},"end":{"line":40,"column":106,"offset":2115},"indent":[]}},{"type":"inlineCode","value":"patchAsync","position":{"start":{"line":40,"column":106,"offset":2115},"end":{"line":40,"column":118,"offset":2127},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":40,"column":118,"offset":2127},"end":{"line":40,"column":124,"offset":2133},"indent":[]}},{"type":"inlineCode","value":"deleteAsync","position":{"start":{"line":40,"column":124,"offset":2133},"end":{"line":40,"column":137,"offset":2146},"indent":[]}},{"type":"text","value":" methods are now implemented as genuine methods on ","position":{"start":{"line":40,"column":137,"offset":2146},"end":{"line":40,"column":188,"offset":2197},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Client","position":{"start":{"line":40,"column":188,"offset":2197},"end":{"line":40,"column":207,"offset":2216},"indent":[]}},{"type":"text","value":", with strong typing. The original ","position":{"start":{"line":40,"column":207,"offset":2216},"end":{"line":40,"column":242,"offset":2251},"indent":[]}},{"type":"inlineCode","value":"__call","position":{"start":{"line":40,"column":242,"offset":2251},"end":{"line":40,"column":250,"offset":2259},"indent":[]}},{"type":"text","value":" implementation remains unchanged for now, for maximum backwards compatibility, but won't be invoked under normal operation.","position":{"start":{"line":40,"column":250,"offset":2259},"end":{"line":40,"column":374,"offset":2383},"indent":[]}}],"position":{"start":{"line":40,"column":3,"offset":2012},"end":{"line":40,"column":374,"offset":2383},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":2010},"end":{"line":40,"column":374,"offset":2383},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":41,"column":3,"offset":2386},"end":{"line":41,"column":7,"offset":2390},"indent":[]}},{"type":"inlineCode","value":"log","position":{"start":{"line":41,"column":7,"offset":2390},"end":{"line":41,"column":12,"offset":2395},"indent":[]}},{"type":"text","value":" middleware will log the errors with level ","position":{"start":{"line":41,"column":12,"offset":2395},"end":{"line":41,"column":55,"offset":2438},"indent":[]}},{"type":"inlineCode","value":"error","position":{"start":{"line":41,"column":55,"offset":2438},"end":{"line":41,"column":62,"offset":2445},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":41,"column":62,"offset":2445},"end":{"line":41,"column":74,"offset":2457},"indent":[]}},{"type":"inlineCode","value":"notice","position":{"start":{"line":41,"column":74,"offset":2457},"end":{"line":41,"column":82,"offset":2465},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":41,"column":82,"offset":2465},"end":{"line":41,"column":83,"offset":2466},"indent":[]}}],"position":{"start":{"line":41,"column":3,"offset":2386},"end":{"line":41,"column":83,"offset":2466},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2384},"end":{"line":41,"column":83,"offset":2466},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Support for international domain names (IDN) is now disabled by default, and enabling it requires installing ext-intl, linked against a modern version of the C library (ICU 4.6 or higher).","position":{"start":{"line":42,"column":3,"offset":2469},"end":{"line":42,"column":191,"offset":2657},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":2469},"end":{"line":42,"column":191,"offset":2657},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":2467},"end":{"line":42,"column":191,"offset":2657},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":659},"end":{"line":42,"column":191,"offset":2657},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Native functions calls","position":{"start":{"line":44,"column":6,"offset":2664},"end":{"line":44,"column":28,"offset":2686},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":2659},"end":{"line":44,"column":28,"offset":2686},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"All internal native functions calls of Guzzle are now prefixed with a slash. This\nchange makes it impossible for method overloading by other libraries or applications.\nExample:","position":{"start":{"line":46,"column":1,"offset":2688},"end":{"line":48,"column":9,"offset":2864},"indent":[1,1]}}],"position":{"start":{"line":46,"column":1,"offset":2688},"end":{"line":48,"column":9,"offset":2864},"indent":[1,1]}},{"type":"code","lang":"php","meta":null,"value":"// Before:\ncurl_version();\n\n// After:\n\\curl_version();","position":{"start":{"line":50,"column":1,"offset":2866},"end":{"line":56,"column":4,"offset":2931},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For the full diff you can check ","position":{"start":{"line":58,"column":1,"offset":2933},"end":{"line":58,"column":33,"offset":2965},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/guzzle/guzzle/compare/6.5.4..master","children":[{"type":"text","value":"here","position":{"start":{"line":58,"column":34,"offset":2966},"end":{"line":58,"column":38,"offset":2970},"indent":[]}}],"position":{"start":{"line":58,"column":33,"offset":2965},"end":{"line":58,"column":95,"offset":3027},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":58,"column":95,"offset":3027},"end":{"line":58,"column":96,"offset":3028},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":2933},"end":{"line":58,"column":96,"offset":3028},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"5.0 to 6.0","position":{"start":{"line":60,"column":1,"offset":3030},"end":{"line":60,"column":11,"offset":3040},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":3030},"end":{"line":61,"column":11,"offset":3051},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Guzzle now uses ","position":{"start":{"line":63,"column":1,"offset":3053},"end":{"line":63,"column":17,"offset":3069},"indent":[]}},{"type":"link","title":null,"url":"https://www.php-fig.org/psr/psr-7/","children":[{"type":"text","value":"PSR-7","position":{"start":{"line":63,"column":18,"offset":3070},"end":{"line":63,"column":23,"offset":3075},"indent":[]}}],"position":{"start":{"line":63,"column":17,"offset":3069},"end":{"line":63,"column":60,"offset":3112},"indent":[]}},{"type":"text","value":" for HTTP messages.\nDue to the fact that these messages are immutable, this prompted a refactoring\nof Guzzle to use a middleware based system rather than an event system. Any\nHTTP message interaction (e.g., ","position":{"start":{"line":63,"column":60,"offset":3112},"end":{"line":66,"column":33,"offset":3319},"indent":[1,1,1]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\Request","position":{"start":{"line":66,"column":33,"offset":3319},"end":{"line":66,"column":61,"offset":3347},"indent":[]}},{"type":"text","value":") need to be\nupdated to work with the new immutable PSR-7 request and response objects. Any\nevent listeners or subscribers need to be updated to become middleware\nfunctions that wrap handlers (or are injected into a\n","position":{"start":{"line":66,"column":61,"offset":3347},"end":{"line":70,"column":1,"offset":3563},"indent":[1,1,1,1]}},{"type":"inlineCode","value":"GuzzleHttp\\HandlerStack","position":{"start":{"line":70,"column":1,"offset":3563},"end":{"line":70,"column":26,"offset":3588},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":70,"column":26,"offset":3588},"end":{"line":70,"column":28,"offset":3590},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":3053},"end":{"line":70,"column":28,"offset":3590},"indent":[1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":72,"column":3,"offset":3594},"end":{"line":72,"column":11,"offset":3602},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\BatchResults","position":{"start":{"line":72,"column":11,"offset":3602},"end":{"line":72,"column":36,"offset":3627},"indent":[]}}],"position":{"start":{"line":72,"column":3,"offset":3594},"end":{"line":72,"column":36,"offset":3627},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":3592},"end":{"line":72,"column":36,"offset":3627},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":73,"column":3,"offset":3630},"end":{"line":73,"column":11,"offset":3638},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Collection","position":{"start":{"line":73,"column":11,"offset":3638},"end":{"line":73,"column":34,"offset":3661},"indent":[]}}],"position":{"start":{"line":73,"column":3,"offset":3630},"end":{"line":73,"column":34,"offset":3661},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":3628},"end":{"line":73,"column":34,"offset":3661},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":74,"column":3,"offset":3664},"end":{"line":74,"column":11,"offset":3672},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\HasDataTrait","position":{"start":{"line":74,"column":11,"offset":3672},"end":{"line":74,"column":36,"offset":3697},"indent":[]}}],"position":{"start":{"line":74,"column":3,"offset":3664},"end":{"line":74,"column":36,"offset":3697},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":3662},"end":{"line":74,"column":36,"offset":3697},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":75,"column":3,"offset":3700},"end":{"line":75,"column":11,"offset":3708},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\ToArrayInterface","position":{"start":{"line":75,"column":11,"offset":3708},"end":{"line":75,"column":40,"offset":3737},"indent":[]}}],"position":{"start":{"line":75,"column":3,"offset":3700},"end":{"line":75,"column":40,"offset":3737},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":3698},"end":{"line":75,"column":40,"offset":3737},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":76,"column":3,"offset":3740},"end":{"line":76,"column":7,"offset":3744},"indent":[]}},{"type":"inlineCode","value":"guzzlehttp/streams","position":{"start":{"line":76,"column":7,"offset":3744},"end":{"line":76,"column":27,"offset":3764},"indent":[]}},{"type":"text","value":" dependency has been removed. Stream functionality\nis now present in the ","position":{"start":{"line":76,"column":27,"offset":3764},"end":{"line":77,"column":25,"offset":3839},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Psr7","position":{"start":{"line":77,"column":25,"offset":3839},"end":{"line":77,"column":42,"offset":3856},"indent":[]}},{"type":"text","value":" namespace provided by the\n","position":{"start":{"line":77,"column":42,"offset":3856},"end":{"line":78,"column":3,"offset":3885},"indent":[3]}},{"type":"inlineCode","value":"guzzlehttp/psr7","position":{"start":{"line":78,"column":3,"offset":3885},"end":{"line":78,"column":20,"offset":3902},"indent":[]}},{"type":"text","value":" package.","position":{"start":{"line":78,"column":20,"offset":3902},"end":{"line":78,"column":29,"offset":3911},"indent":[]}}],"position":{"start":{"line":76,"column":3,"offset":3740},"end":{"line":78,"column":29,"offset":3911},"indent":[3,3]}}],"position":{"start":{"line":76,"column":1,"offset":3738},"end":{"line":78,"column":29,"offset":3911},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Guzzle no longer uses ReactPHP promises and now uses the\n","position":{"start":{"line":79,"column":3,"offset":3914},"end":{"line":80,"column":3,"offset":3973},"indent":[3]}},{"type":"inlineCode","value":"guzzlehttp/promises","position":{"start":{"line":80,"column":3,"offset":3973},"end":{"line":80,"column":24,"offset":3994},"indent":[]}},{"type":"text","value":" library. We use a custom promise library for three\nsignificant reasons:","position":{"start":{"line":80,"column":24,"offset":3994},"end":{"line":81,"column":23,"offset":4068},"indent":[3]}}],"position":{"start":{"line":79,"column":3,"offset":3914},"end":{"line":81,"column":23,"offset":4068},"indent":[3,3]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"React promises (at the time of writing this) are recursive. Promise\nchaining and promise resolution will eventually blow the stack. Guzzle\npromises are not recursive as they use a sort of trampolining technique.\nNote: there has been movement in the React project to modify promises to\nno longer utilize recursion.","position":{"start":{"line":82,"column":6,"offset":4074},"end":{"line":86,"column":34,"offset":4407},"indent":[6,6,6,6]}}],"position":{"start":{"line":82,"column":6,"offset":4074},"end":{"line":86,"column":34,"offset":4407},"indent":[6,6,6,6]}}],"position":{"start":{"line":82,"column":3,"offset":4071},"end":{"line":86,"column":34,"offset":4407},"indent":[3,3,3,3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Guzzle needs to have the ability to synchronously block on a promise to\nwait for a result. Guzzle promises allows this functionality (and does\nnot require the use of recursion).","position":{"start":{"line":87,"column":6,"offset":4413},"end":{"line":89,"column":40,"offset":4600},"indent":[6,6]}}],"position":{"start":{"line":87,"column":6,"offset":4413},"end":{"line":89,"column":40,"offset":4600},"indent":[6,6]}}],"position":{"start":{"line":87,"column":3,"offset":4410},"end":{"line":89,"column":40,"offset":4600},"indent":[3,3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Because we need to be able to wait on a result, doing so using React\npromises requires wrapping react promises with RingPHP futures. This\noverhead is no longer needed, reducing stack sizes, reducing complexity,\nand improving performance.","position":{"start":{"line":90,"column":6,"offset":4606},"end":{"line":93,"column":32,"offset":4858},"indent":[6,6,6]}}],"position":{"start":{"line":90,"column":6,"offset":4606},"end":{"line":93,"column":32,"offset":4858},"indent":[6,6,6]}}],"position":{"start":{"line":90,"column":3,"offset":4603},"end":{"line":93,"column":32,"offset":4858},"indent":[3,3,3]}}],"position":{"start":{"line":82,"column":3,"offset":4071},"end":{"line":93,"column":32,"offset":4858},"indent":[3,3,3,3,3,3,3,3,3,3,3]}}],"position":{"start":{"line":79,"column":1,"offset":3912},"end":{"line":93,"column":32,"offset":4858},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Mimetypes","position":{"start":{"line":94,"column":3,"offset":4861},"end":{"line":94,"column":25,"offset":4883},"indent":[]}},{"type":"text","value":" has been moved to a function in\n","position":{"start":{"line":94,"column":25,"offset":4883},"end":{"line":95,"column":3,"offset":4918},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Psr7\\mimetype_from_extension","position":{"start":{"line":95,"column":3,"offset":4918},"end":{"line":95,"column":44,"offset":4959},"indent":[]}},{"type":"text","value":" and\n","position":{"start":{"line":95,"column":44,"offset":4959},"end":{"line":96,"column":3,"offset":4966},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Psr7\\mimetype_from_filename","position":{"start":{"line":96,"column":3,"offset":4966},"end":{"line":96,"column":43,"offset":5006},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":96,"column":43,"offset":5006},"end":{"line":96,"column":44,"offset":5007},"indent":[]}}],"position":{"start":{"line":94,"column":3,"offset":4861},"end":{"line":96,"column":44,"offset":5007},"indent":[3,3]}}],"position":{"start":{"line":94,"column":1,"offset":4859},"end":{"line":96,"column":44,"offset":5007},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Query","position":{"start":{"line":97,"column":3,"offset":5010},"end":{"line":97,"column":21,"offset":5028},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":97,"column":21,"offset":5028},"end":{"line":97,"column":26,"offset":5033},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\QueryParser","position":{"start":{"line":97,"column":26,"offset":5033},"end":{"line":97,"column":50,"offset":5057},"indent":[]}},{"type":"text","value":" have been removed. Query\nstrings must now be passed into request objects as strings, or provided to\nthe ","position":{"start":{"line":97,"column":50,"offset":5057},"end":{"line":99,"column":7,"offset":5166},"indent":[3,3]}},{"type":"inlineCode","value":"query","position":{"start":{"line":99,"column":7,"offset":5166},"end":{"line":99,"column":14,"offset":5173},"indent":[]}},{"type":"text","value":" request option when creating requests with clients. The ","position":{"start":{"line":99,"column":14,"offset":5173},"end":{"line":99,"column":71,"offset":5230},"indent":[]}},{"type":"inlineCode","value":"query","position":{"start":{"line":99,"column":71,"offset":5230},"end":{"line":99,"column":78,"offset":5237},"indent":[]}},{"type":"text","value":"\noption uses PHP's ","position":{"start":{"line":99,"column":78,"offset":5237},"end":{"line":100,"column":21,"offset":5258},"indent":[3]}},{"type":"inlineCode","value":"http_build_query","position":{"start":{"line":100,"column":21,"offset":5258},"end":{"line":100,"column":39,"offset":5276},"indent":[]}},{"type":"text","value":" to convert an array to a string. If you\nneed a different serialization technique, you will need to pass the query\nstring in as a string. There are a couple helper functions that will make\nworking with query strings easier: ","position":{"start":{"line":100,"column":39,"offset":5276},"end":{"line":103,"column":38,"offset":5506},"indent":[3,3,3]}},{"type":"inlineCode","value":"GuzzleHttp\\Psr7\\parse_query","position":{"start":{"line":103,"column":38,"offset":5506},"end":{"line":103,"column":67,"offset":5535},"indent":[]}},{"type":"text","value":" and\n","position":{"start":{"line":103,"column":67,"offset":5535},"end":{"line":104,"column":3,"offset":5542},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Psr7\\build_query","position":{"start":{"line":104,"column":3,"offset":5542},"end":{"line":104,"column":32,"offset":5571},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":104,"column":32,"offset":5571},"end":{"line":104,"column":33,"offset":5572},"indent":[]}}],"position":{"start":{"line":97,"column":3,"offset":5010},"end":{"line":104,"column":33,"offset":5572},"indent":[3,3,3,3,3,3,3]}}],"position":{"start":{"line":97,"column":1,"offset":5008},"end":{"line":104,"column":33,"offset":5572},"indent":[1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Guzzle no longer has a dependency on RingPHP. Due to the use of a middleware\nsystem based on PSR-7, using RingPHP and it's middleware system as well adds\nmore complexity than the benefits it provides. All HTTP handlers that were\npresent in RingPHP have been modified to work directly with PSR-7 messages\nand placed in the ","position":{"start":{"line":105,"column":3,"offset":5575},"end":{"line":109,"column":21,"offset":5905},"indent":[3,3,3,3]}},{"type":"inlineCode","value":"GuzzleHttp\\Handler","position":{"start":{"line":109,"column":21,"offset":5905},"end":{"line":109,"column":41,"offset":5925},"indent":[]}},{"type":"text","value":" namespace. This significantly reduces\ncomplexity in Guzzle, removes a dependency, and improves performance. RingPHP\nwill be maintained for Guzzle 5 support, but will no longer be a part of\nGuzzle 6.","position":{"start":{"line":109,"column":41,"offset":5925},"end":{"line":112,"column":12,"offset":6130},"indent":[3,3,3]}}],"position":{"start":{"line":105,"column":3,"offset":5575},"end":{"line":112,"column":12,"offset":6130},"indent":[3,3,3,3,3,3,3]}}],"position":{"start":{"line":105,"column":1,"offset":5573},"end":{"line":112,"column":12,"offset":6130},"indent":[1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"As Guzzle now uses a middleware based systems the event system and RingPHP\nintegration has been removed. Note: while the event system has been removed,\nit is possible to add your own type of event system that is powered by the\nmiddleware system.","position":{"start":{"line":113,"column":3,"offset":6133},"end":{"line":116,"column":21,"offset":6384},"indent":[3,3,3]}}],"position":{"start":{"line":113,"column":3,"offset":6133},"end":{"line":116,"column":21,"offset":6384},"indent":[3,3,3]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed the ","position":{"start":{"line":117,"column":5,"offset":6389},"end":{"line":117,"column":17,"offset":6401},"indent":[]}},{"type":"inlineCode","value":"Event","position":{"start":{"line":117,"column":17,"offset":6401},"end":{"line":117,"column":24,"offset":6408},"indent":[]}},{"type":"text","value":" namespace.","position":{"start":{"line":117,"column":24,"offset":6408},"end":{"line":117,"column":35,"offset":6419},"indent":[]}}],"position":{"start":{"line":117,"column":5,"offset":6389},"end":{"line":117,"column":35,"offset":6419},"indent":[]}}],"position":{"start":{"line":117,"column":3,"offset":6387},"end":{"line":117,"column":35,"offset":6419},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed the ","position":{"start":{"line":118,"column":5,"offset":6424},"end":{"line":118,"column":17,"offset":6436},"indent":[]}},{"type":"inlineCode","value":"Subscriber","position":{"start":{"line":118,"column":17,"offset":6436},"end":{"line":118,"column":29,"offset":6448},"indent":[]}},{"type":"text","value":" namespace.","position":{"start":{"line":118,"column":29,"offset":6448},"end":{"line":118,"column":40,"offset":6459},"indent":[]}}],"position":{"start":{"line":118,"column":5,"offset":6424},"end":{"line":118,"column":40,"offset":6459},"indent":[]}}],"position":{"start":{"line":118,"column":3,"offset":6422},"end":{"line":118,"column":40,"offset":6459},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":119,"column":5,"offset":6464},"end":{"line":119,"column":13,"offset":6472},"indent":[]}},{"type":"inlineCode","value":"Transaction","position":{"start":{"line":119,"column":13,"offset":6472},"end":{"line":119,"column":26,"offset":6485},"indent":[]}},{"type":"text","value":" class","position":{"start":{"line":119,"column":26,"offset":6485},"end":{"line":119,"column":32,"offset":6491},"indent":[]}}],"position":{"start":{"line":119,"column":5,"offset":6464},"end":{"line":119,"column":32,"offset":6491},"indent":[]}}],"position":{"start":{"line":119,"column":3,"offset":6462},"end":{"line":119,"column":32,"offset":6491},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":120,"column":5,"offset":6496},"end":{"line":120,"column":13,"offset":6504},"indent":[]}},{"type":"inlineCode","value":"RequestFsm","position":{"start":{"line":120,"column":13,"offset":6504},"end":{"line":120,"column":25,"offset":6516},"indent":[]}}],"position":{"start":{"line":120,"column":5,"offset":6496},"end":{"line":120,"column":25,"offset":6516},"indent":[]}}],"position":{"start":{"line":120,"column":3,"offset":6494},"end":{"line":120,"column":25,"offset":6516},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":121,"column":5,"offset":6521},"end":{"line":121,"column":13,"offset":6529},"indent":[]}},{"type":"inlineCode","value":"RingBridge","position":{"start":{"line":121,"column":13,"offset":6529},"end":{"line":121,"column":25,"offset":6541},"indent":[]}}],"position":{"start":{"line":121,"column":5,"offset":6521},"end":{"line":121,"column":25,"offset":6541},"indent":[]}}],"position":{"start":{"line":121,"column":3,"offset":6519},"end":{"line":121,"column":25,"offset":6541},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\Cookie","position":{"start":{"line":122,"column":5,"offset":6546},"end":{"line":122,"column":35,"offset":6576},"indent":[]}},{"type":"text","value":" is now provided by\n","position":{"start":{"line":122,"column":35,"offset":6576},"end":{"line":123,"column":5,"offset":6600},"indent":[5]}},{"type":"inlineCode","value":"GuzzleHttp\\Middleware::cookies","position":{"start":{"line":123,"column":5,"offset":6600},"end":{"line":123,"column":37,"offset":6632},"indent":[]}}],"position":{"start":{"line":122,"column":5,"offset":6546},"end":{"line":123,"column":37,"offset":6632},"indent":[5]}}],"position":{"start":{"line":122,"column":3,"offset":6544},"end":{"line":123,"column":37,"offset":6632},"indent":[3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\HttpError","position":{"start":{"line":124,"column":5,"offset":6637},"end":{"line":124,"column":38,"offset":6670},"indent":[]}},{"type":"text","value":" is now provided by\n","position":{"start":{"line":124,"column":38,"offset":6670},"end":{"line":125,"column":5,"offset":6694},"indent":[5]}},{"type":"inlineCode","value":"GuzzleHttp\\Middleware::httpError","position":{"start":{"line":125,"column":5,"offset":6694},"end":{"line":125,"column":39,"offset":6728},"indent":[]}}],"position":{"start":{"line":124,"column":5,"offset":6637},"end":{"line":125,"column":39,"offset":6728},"indent":[5]}}],"position":{"start":{"line":124,"column":3,"offset":6635},"end":{"line":125,"column":39,"offset":6728},"indent":[3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\History","position":{"start":{"line":126,"column":5,"offset":6733},"end":{"line":126,"column":36,"offset":6764},"indent":[]}},{"type":"text","value":" is now provided by\n","position":{"start":{"line":126,"column":36,"offset":6764},"end":{"line":127,"column":5,"offset":6788},"indent":[5]}},{"type":"inlineCode","value":"GuzzleHttp\\Middleware::history","position":{"start":{"line":127,"column":5,"offset":6788},"end":{"line":127,"column":37,"offset":6820},"indent":[]}}],"position":{"start":{"line":126,"column":5,"offset":6733},"end":{"line":127,"column":37,"offset":6820},"indent":[5]}}],"position":{"start":{"line":126,"column":3,"offset":6731},"end":{"line":127,"column":37,"offset":6820},"indent":[3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\Mock","position":{"start":{"line":128,"column":5,"offset":6825},"end":{"line":128,"column":33,"offset":6853},"indent":[]}},{"type":"text","value":" is now provided by\n","position":{"start":{"line":128,"column":33,"offset":6853},"end":{"line":129,"column":5,"offset":6877},"indent":[5]}},{"type":"inlineCode","value":"GuzzleHttp\\Handler\\MockHandler","position":{"start":{"line":129,"column":5,"offset":6877},"end":{"line":129,"column":37,"offset":6909},"indent":[]}}],"position":{"start":{"line":128,"column":5,"offset":6825},"end":{"line":129,"column":37,"offset":6909},"indent":[5]}}],"position":{"start":{"line":128,"column":3,"offset":6823},"end":{"line":129,"column":37,"offset":6909},"indent":[3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\Prepare","position":{"start":{"line":130,"column":5,"offset":6914},"end":{"line":130,"column":36,"offset":6945},"indent":[]}},{"type":"text","value":" is now provided by\n","position":{"start":{"line":130,"column":36,"offset":6945},"end":{"line":131,"column":5,"offset":6969},"indent":[5]}},{"type":"inlineCode","value":"GuzzleHttp\\PrepareBodyMiddleware","position":{"start":{"line":131,"column":5,"offset":6969},"end":{"line":131,"column":39,"offset":7003},"indent":[]}}],"position":{"start":{"line":130,"column":5,"offset":6914},"end":{"line":131,"column":39,"offset":7003},"indent":[5]}}],"position":{"start":{"line":130,"column":3,"offset":6912},"end":{"line":131,"column":39,"offset":7003},"indent":[3]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\Redirect","position":{"start":{"line":132,"column":5,"offset":7008},"end":{"line":132,"column":37,"offset":7040},"indent":[]}},{"type":"text","value":" is now provided by\n","position":{"start":{"line":132,"column":37,"offset":7040},"end":{"line":133,"column":5,"offset":7064},"indent":[5]}},{"type":"inlineCode","value":"GuzzleHttp\\RedirectMiddleware","position":{"start":{"line":133,"column":5,"offset":7064},"end":{"line":133,"column":36,"offset":7095},"indent":[]}}],"position":{"start":{"line":132,"column":5,"offset":7008},"end":{"line":133,"column":36,"offset":7095},"indent":[5]}}],"position":{"start":{"line":132,"column":3,"offset":7006},"end":{"line":133,"column":36,"offset":7095},"indent":[3]}}],"position":{"start":{"line":117,"column":3,"offset":6387},"end":{"line":133,"column":36,"offset":7095},"indent":[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]}}],"position":{"start":{"line":113,"column":1,"offset":6131},"end":{"line":133,"column":36,"offset":7095},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Guzzle now uses ","position":{"start":{"line":134,"column":3,"offset":7098},"end":{"line":134,"column":19,"offset":7114},"indent":[]}},{"type":"inlineCode","value":"Psr\\Http\\Message\\UriInterface","position":{"start":{"line":134,"column":19,"offset":7114},"end":{"line":134,"column":50,"offset":7145},"indent":[]}},{"type":"text","value":" (implements in\n","position":{"start":{"line":134,"column":50,"offset":7145},"end":{"line":135,"column":3,"offset":7163},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Psr7\\Uri","position":{"start":{"line":135,"column":3,"offset":7163},"end":{"line":135,"column":24,"offset":7184},"indent":[]}},{"type":"text","value":") for URI support. ","position":{"start":{"line":135,"column":24,"offset":7184},"end":{"line":135,"column":43,"offset":7203},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Url","position":{"start":{"line":135,"column":43,"offset":7203},"end":{"line":135,"column":59,"offset":7219},"indent":[]}},{"type":"text","value":" is now gone.","position":{"start":{"line":135,"column":59,"offset":7219},"end":{"line":135,"column":72,"offset":7232},"indent":[]}}],"position":{"start":{"line":134,"column":3,"offset":7098},"end":{"line":135,"column":72,"offset":7232},"indent":[3]}}],"position":{"start":{"line":134,"column":1,"offset":7096},"end":{"line":135,"column":72,"offset":7232},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Static functions in ","position":{"start":{"line":136,"column":3,"offset":7235},"end":{"line":136,"column":23,"offset":7255},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Utils","position":{"start":{"line":136,"column":23,"offset":7255},"end":{"line":136,"column":41,"offset":7273},"indent":[]}},{"type":"text","value":" have been moved to namespaced\nfunctions under the ","position":{"start":{"line":136,"column":41,"offset":7273},"end":{"line":137,"column":23,"offset":7326},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp","position":{"start":{"line":137,"column":23,"offset":7326},"end":{"line":137,"column":35,"offset":7338},"indent":[]}},{"type":"text","value":" namespace. This requires either a Composer\nbased autoloader or you to include functions.php.","position":{"start":{"line":137,"column":35,"offset":7338},"end":{"line":138,"column":52,"offset":7433},"indent":[3]}}],"position":{"start":{"line":136,"column":3,"offset":7235},"end":{"line":138,"column":52,"offset":7433},"indent":[3,3]}}],"position":{"start":{"line":136,"column":1,"offset":7233},"end":{"line":138,"column":52,"offset":7433},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\ClientInterface::getDefaultOption","position":{"start":{"line":139,"column":3,"offset":7436},"end":{"line":139,"column":49,"offset":7482},"indent":[]}},{"type":"text","value":" has been renamed to\n","position":{"start":{"line":139,"column":49,"offset":7482},"end":{"line":140,"column":3,"offset":7505},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\ClientInterface::getConfig","position":{"start":{"line":140,"column":3,"offset":7505},"end":{"line":140,"column":42,"offset":7544},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":140,"column":42,"offset":7544},"end":{"line":140,"column":43,"offset":7545},"indent":[]}}],"position":{"start":{"line":139,"column":3,"offset":7436},"end":{"line":140,"column":43,"offset":7545},"indent":[3]}}],"position":{"start":{"line":139,"column":1,"offset":7434},"end":{"line":140,"column":43,"offset":7545},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\ClientInterface::setDefaultOption","position":{"start":{"line":141,"column":3,"offset":7548},"end":{"line":141,"column":49,"offset":7594},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":141,"column":49,"offset":7594},"end":{"line":141,"column":67,"offset":7612},"indent":[]}}],"position":{"start":{"line":141,"column":3,"offset":7548},"end":{"line":141,"column":67,"offset":7612},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":7546},"end":{"line":141,"column":67,"offset":7612},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":142,"column":3,"offset":7615},"end":{"line":142,"column":7,"offset":7619},"indent":[]}},{"type":"inlineCode","value":"json","position":{"start":{"line":142,"column":7,"offset":7619},"end":{"line":142,"column":13,"offset":7625},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":142,"column":13,"offset":7625},"end":{"line":142,"column":18,"offset":7630},"indent":[]}},{"type":"inlineCode","value":"xml","position":{"start":{"line":142,"column":18,"offset":7630},"end":{"line":142,"column":23,"offset":7635},"indent":[]}},{"type":"text","value":" methods of response objects has been removed. With the\nmigration to strictly adhering to PSR-7 as the interface for Guzzle messages,\nadding methods to message interfaces would actually require Guzzle messages\nto extend from PSR-7 messages rather then work with them directly.","position":{"start":{"line":142,"column":23,"offset":7635},"end":{"line":145,"column":69,"offset":7917},"indent":[3,3,3]}}],"position":{"start":{"line":142,"column":3,"offset":7615},"end":{"line":145,"column":69,"offset":7917},"indent":[3,3,3]}}],"position":{"start":{"line":142,"column":1,"offset":7613},"end":{"line":145,"column":69,"offset":7917},"indent":[1,1,1]}}],"position":{"start":{"line":72,"column":1,"offset":3592},"end":{"line":145,"column":69,"offset":7917},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Migrating to middleware","position":{"start":{"line":147,"column":4,"offset":7922},"end":{"line":147,"column":27,"offset":7945},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":7919},"end":{"line":147,"column":27,"offset":7945},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The change to PSR-7 unfortunately required significant refactoring to Guzzle\ndue to the fact that PSR-7 messages are immutable. Guzzle 5 relied on an event\nsystem from plugins. The event system relied on mutability of HTTP messages and\nside effects in order to work. With immutable messages, you have to change your\nworkflow to become more about either returning a value (e.g., functional\nmiddlewares) or setting a value on an object. Guzzle v6 has chosen the\nfunctional middleware approach.","position":{"start":{"line":149,"column":1,"offset":7947},"end":{"line":155,"column":32,"offset":8438},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":149,"column":1,"offset":7947},"end":{"line":155,"column":32,"offset":8438},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of using the event system to listen for things like the ","position":{"start":{"line":157,"column":1,"offset":8440},"end":{"line":157,"column":65,"offset":8504},"indent":[]}},{"type":"inlineCode","value":"before","position":{"start":{"line":157,"column":65,"offset":8504},"end":{"line":157,"column":73,"offset":8512},"indent":[]}},{"type":"text","value":" event,\nyou now create a stack based middleware function that intercepts a request on\nthe way in and the promise of the response on the way out. This is a much\nsimpler and more predictable approach than the event system and works nicely\nwith PSR-7 middleware. Due to the use of promises, the middleware system is\nalso asynchronous.","position":{"start":{"line":157,"column":73,"offset":8512},"end":{"line":162,"column":19,"offset":8843},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":157,"column":1,"offset":8440},"end":{"line":162,"column":19,"offset":8843},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"v5:","position":{"start":{"line":164,"column":1,"offset":8845},"end":{"line":164,"column":4,"offset":8848},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":8845},"end":{"line":164,"column":4,"offset":8848},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use GuzzleHttp\\Event\\BeforeEvent;\n$client = new GuzzleHttp\\Client();\n// Get the emitter and listen to the before event.\n$client->getEmitter()->on('before', function (BeforeEvent $e) {\n    // Guzzle v5 events relied on mutation\n    $e->getRequest()->setHeader('X-Foo', 'Bar');\n});","position":{"start":{"line":166,"column":1,"offset":8850},"end":{"line":174,"column":4,"offset":9140},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"v6:","position":{"start":{"line":176,"column":1,"offset":9142},"end":{"line":176,"column":4,"offset":9145},"indent":[]}}],"position":{"start":{"line":176,"column":1,"offset":9142},"end":{"line":176,"column":4,"offset":9145},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In v6, you can modify the request before it is sent using the ","position":{"start":{"line":178,"column":1,"offset":9147},"end":{"line":178,"column":63,"offset":9209},"indent":[]}},{"type":"inlineCode","value":"mapRequest","position":{"start":{"line":178,"column":63,"offset":9209},"end":{"line":178,"column":75,"offset":9221},"indent":[]}},{"type":"text","value":"\nmiddleware. The idiomatic way in v6 to modify the request/response lifecycle is\nto setup a handler middleware stack up front and inject the handler into a\nclient.","position":{"start":{"line":178,"column":75,"offset":9221},"end":{"line":181,"column":8,"offset":9384},"indent":[1,1,1]}}],"position":{"start":{"line":178,"column":1,"offset":9147},"end":{"line":181,"column":8,"offset":9384},"indent":[1,1,1]}},{"type":"code","lang":"php","meta":null,"value":"use GuzzleHttp\\Middleware;\n// Create a handler stack that has all of the default middlewares attached\n$handler = GuzzleHttp\\HandlerStack::create();\n// Push the handler onto the handler stack\n$handler->push(Middleware::mapRequest(function (RequestInterface $request) {\n    // Notice that we have to return a request object\n    return $request->withHeader('X-Foo', 'Bar');\n}));\n// Inject the handler into the client\n$client = new GuzzleHttp\\Client(['handler' => $handler]);","position":{"start":{"line":183,"column":1,"offset":9386},"end":{"line":194,"column":4,"offset":9868},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"POST Requests","position":{"start":{"line":196,"column":4,"offset":9873},"end":{"line":196,"column":17,"offset":9886},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":9870},"end":{"line":196,"column":17,"offset":9886},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This version added the ","position":{"start":{"line":198,"column":1,"offset":9888},"end":{"line":198,"column":24,"offset":9911},"indent":[]}},{"type":"link","title":null,"url":"https://docs.guzzlephp.org/en/latest/request-options.html#form_params","children":[{"type":"inlineCode","value":"form_params","position":{"start":{"line":198,"column":25,"offset":9912},"end":{"line":198,"column":38,"offset":9925},"indent":[]}}],"position":{"start":{"line":198,"column":24,"offset":9911},"end":{"line":198,"column":110,"offset":9997},"indent":[]}},{"type":"text","value":"\nand ","position":{"start":{"line":198,"column":110,"offset":9997},"end":{"line":199,"column":5,"offset":10002},"indent":[1]}},{"type":"inlineCode","value":"multipart","position":{"start":{"line":199,"column":5,"offset":10002},"end":{"line":199,"column":16,"offset":10013},"indent":[]}},{"type":"text","value":" request options. ","position":{"start":{"line":199,"column":16,"offset":10013},"end":{"line":199,"column":34,"offset":10031},"indent":[]}},{"type":"inlineCode","value":"form_params","position":{"start":{"line":199,"column":34,"offset":10031},"end":{"line":199,"column":47,"offset":10044},"indent":[]}},{"type":"text","value":" is an associative array of\nstrings or array of strings and is used to serialize an\n","position":{"start":{"line":199,"column":47,"offset":10044},"end":{"line":201,"column":1,"offset":10128},"indent":[1,1]}},{"type":"inlineCode","value":"application/x-www-form-urlencoded","position":{"start":{"line":201,"column":1,"offset":10128},"end":{"line":201,"column":36,"offset":10163},"indent":[]}},{"type":"text","value":" POST request. The\n","position":{"start":{"line":201,"column":36,"offset":10163},"end":{"line":202,"column":1,"offset":10182},"indent":[1]}},{"type":"link","title":null,"url":"https://docs.guzzlephp.org/en/latest/request-options.html#multipart","children":[{"type":"inlineCode","value":"multipart","position":{"start":{"line":202,"column":2,"offset":10183},"end":{"line":202,"column":13,"offset":10194},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":10182},"end":{"line":202,"column":83,"offset":10264},"indent":[]}},{"type":"text","value":"\noption is now used to send a multipart/form-data POST request.","position":{"start":{"line":202,"column":83,"offset":10264},"end":{"line":203,"column":63,"offset":10327},"indent":[1]}}],"position":{"start":{"line":198,"column":1,"offset":9888},"end":{"line":203,"column":63,"offset":10327},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Post\\PostFile","position":{"start":{"line":205,"column":1,"offset":10329},"end":{"line":205,"column":27,"offset":10355},"indent":[]}},{"type":"text","value":" has been removed. Use the ","position":{"start":{"line":205,"column":27,"offset":10355},"end":{"line":205,"column":54,"offset":10382},"indent":[]}},{"type":"inlineCode","value":"multipart","position":{"start":{"line":205,"column":54,"offset":10382},"end":{"line":205,"column":65,"offset":10393},"indent":[]}},{"type":"text","value":" option to add\nPOST files to a multipart/form-data request.","position":{"start":{"line":205,"column":65,"offset":10393},"end":{"line":206,"column":45,"offset":10452},"indent":[1]}}],"position":{"start":{"line":205,"column":1,"offset":10329},"end":{"line":206,"column":45,"offset":10452},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":208,"column":1,"offset":10454},"end":{"line":208,"column":5,"offset":10458},"indent":[]}},{"type":"inlineCode","value":"body","position":{"start":{"line":208,"column":5,"offset":10458},"end":{"line":208,"column":11,"offset":10464},"indent":[]}},{"type":"text","value":" option no longer accepts an array to send POST requests. Please use\n","position":{"start":{"line":208,"column":11,"offset":10464},"end":{"line":209,"column":1,"offset":10533},"indent":[1]}},{"type":"inlineCode","value":"multipart","position":{"start":{"line":209,"column":1,"offset":10533},"end":{"line":209,"column":12,"offset":10544},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":209,"column":12,"offset":10544},"end":{"line":209,"column":16,"offset":10548},"indent":[]}},{"type":"inlineCode","value":"form_params","position":{"start":{"line":209,"column":16,"offset":10548},"end":{"line":209,"column":29,"offset":10561},"indent":[]}},{"type":"text","value":" instead.","position":{"start":{"line":209,"column":29,"offset":10561},"end":{"line":209,"column":38,"offset":10570},"indent":[]}}],"position":{"start":{"line":208,"column":1,"offset":10454},"end":{"line":209,"column":38,"offset":10570},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":211,"column":1,"offset":10572},"end":{"line":211,"column":5,"offset":10576},"indent":[]}},{"type":"inlineCode","value":"base_url","position":{"start":{"line":211,"column":5,"offset":10576},"end":{"line":211,"column":15,"offset":10586},"indent":[]}},{"type":"text","value":" option has been renamed to ","position":{"start":{"line":211,"column":15,"offset":10586},"end":{"line":211,"column":43,"offset":10614},"indent":[]}},{"type":"inlineCode","value":"base_uri","position":{"start":{"line":211,"column":43,"offset":10614},"end":{"line":211,"column":53,"offset":10624},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":211,"column":53,"offset":10624},"end":{"line":211,"column":54,"offset":10625},"indent":[]}}],"position":{"start":{"line":211,"column":1,"offset":10572},"end":{"line":211,"column":54,"offset":10625},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"4.x to 5.0","position":{"start":{"line":213,"column":1,"offset":10627},"end":{"line":213,"column":11,"offset":10637},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":10627},"end":{"line":214,"column":11,"offset":10648},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Rewritten Adapter Layer","position":{"start":{"line":216,"column":4,"offset":10653},"end":{"line":216,"column":27,"offset":10676},"indent":[]}}],"position":{"start":{"line":216,"column":1,"offset":10650},"end":{"line":216,"column":27,"offset":10676},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Guzzle now uses ","position":{"start":{"line":218,"column":1,"offset":10678},"end":{"line":218,"column":17,"offset":10694},"indent":[]}},{"type":"link","title":null,"url":"https://ringphp.readthedocs.org/en/latest","children":[{"type":"text","value":"RingPHP","position":{"start":{"line":218,"column":18,"offset":10695},"end":{"line":218,"column":25,"offset":10702},"indent":[]}}],"position":{"start":{"line":218,"column":17,"offset":10694},"end":{"line":218,"column":69,"offset":10746},"indent":[]}},{"type":"text","value":" to send\nHTTP requests. The ","position":{"start":{"line":218,"column":69,"offset":10746},"end":{"line":219,"column":20,"offset":10774},"indent":[1]}},{"type":"inlineCode","value":"adapter","position":{"start":{"line":219,"column":20,"offset":10774},"end":{"line":219,"column":29,"offset":10783},"indent":[]}},{"type":"text","value":" option in a ","position":{"start":{"line":219,"column":29,"offset":10783},"end":{"line":219,"column":42,"offset":10796},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Client","position":{"start":{"line":219,"column":42,"offset":10796},"end":{"line":219,"column":61,"offset":10815},"indent":[]}},{"type":"text","value":" constructor\nis still supported, but it has now been renamed to ","position":{"start":{"line":219,"column":61,"offset":10815},"end":{"line":220,"column":52,"offset":10879},"indent":[1]}},{"type":"inlineCode","value":"handler","position":{"start":{"line":220,"column":52,"offset":10879},"end":{"line":220,"column":61,"offset":10888},"indent":[]}},{"type":"text","value":". Instead of\npassing a ","position":{"start":{"line":220,"column":61,"offset":10888},"end":{"line":221,"column":11,"offset":10911},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Adapter\\AdapterInterface","position":{"start":{"line":221,"column":11,"offset":10911},"end":{"line":221,"column":48,"offset":10948},"indent":[]}},{"type":"text","value":", you must now pass a PHP\n","position":{"start":{"line":221,"column":48,"offset":10948},"end":{"line":222,"column":1,"offset":10974},"indent":[1]}},{"type":"inlineCode","value":"callable","position":{"start":{"line":222,"column":1,"offset":10974},"end":{"line":222,"column":11,"offset":10984},"indent":[]}},{"type":"text","value":" that follows the RingPHP specification.","position":{"start":{"line":222,"column":11,"offset":10984},"end":{"line":222,"column":51,"offset":11024},"indent":[]}}],"position":{"start":{"line":218,"column":1,"offset":10678},"end":{"line":222,"column":51,"offset":11024},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Removed Fluent Interfaces","position":{"start":{"line":224,"column":4,"offset":11029},"end":{"line":224,"column":29,"offset":11054},"indent":[]}}],"position":{"start":{"line":224,"column":1,"offset":11026},"end":{"line":224,"column":29,"offset":11054},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://ocramius.github.io/blog/fluent-interfaces-are-evil/","children":[{"type":"text","value":"Fluent interfaces were removed","position":{"start":{"line":226,"column":2,"offset":11057},"end":{"line":226,"column":32,"offset":11087},"indent":[]}}],"position":{"start":{"line":226,"column":1,"offset":11056},"end":{"line":226,"column":94,"offset":11149},"indent":[]}},{"type":"text","value":"\nfrom the following classes:","position":{"start":{"line":226,"column":94,"offset":11149},"end":{"line":227,"column":28,"offset":11177},"indent":[1]}}],"position":{"start":{"line":226,"column":1,"offset":11056},"end":{"line":227,"column":28,"offset":11177},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Collection","position":{"start":{"line":229,"column":3,"offset":11181},"end":{"line":229,"column":26,"offset":11204},"indent":[]}}],"position":{"start":{"line":229,"column":3,"offset":11181},"end":{"line":229,"column":26,"offset":11204},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":11179},"end":{"line":229,"column":26,"offset":11204},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Url","position":{"start":{"line":230,"column":3,"offset":11207},"end":{"line":230,"column":19,"offset":11223},"indent":[]}}],"position":{"start":{"line":230,"column":3,"offset":11207},"end":{"line":230,"column":19,"offset":11223},"indent":[]}}],"position":{"start":{"line":230,"column":1,"offset":11205},"end":{"line":230,"column":19,"offset":11223},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Query","position":{"start":{"line":231,"column":3,"offset":11226},"end":{"line":231,"column":21,"offset":11244},"indent":[]}}],"position":{"start":{"line":231,"column":3,"offset":11226},"end":{"line":231,"column":21,"offset":11244},"indent":[]}}],"position":{"start":{"line":231,"column":1,"offset":11224},"end":{"line":231,"column":21,"offset":11244},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Post\\PostBody","position":{"start":{"line":232,"column":3,"offset":11247},"end":{"line":232,"column":29,"offset":11273},"indent":[]}}],"position":{"start":{"line":232,"column":3,"offset":11247},"end":{"line":232,"column":29,"offset":11273},"indent":[]}}],"position":{"start":{"line":232,"column":1,"offset":11245},"end":{"line":232,"column":29,"offset":11273},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Cookie\\SetCookie","position":{"start":{"line":233,"column":3,"offset":11276},"end":{"line":233,"column":32,"offset":11305},"indent":[]}}],"position":{"start":{"line":233,"column":3,"offset":11276},"end":{"line":233,"column":32,"offset":11305},"indent":[]}}],"position":{"start":{"line":233,"column":1,"offset":11274},"end":{"line":233,"column":32,"offset":11305},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":11179},"end":{"line":233,"column":32,"offset":11305},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Removed functions.php","position":{"start":{"line":235,"column":4,"offset":11310},"end":{"line":235,"column":25,"offset":11331},"indent":[]}}],"position":{"start":{"line":235,"column":1,"offset":11307},"end":{"line":235,"column":25,"offset":11331},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Removed \"functions.php\", so that Guzzle is truly PSR-4 compliant. The following\nfunctions can be used as replacements.","position":{"start":{"line":237,"column":1,"offset":11333},"end":{"line":238,"column":39,"offset":11451},"indent":[1]}}],"position":{"start":{"line":237,"column":1,"offset":11333},"end":{"line":238,"column":39,"offset":11451},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\json_decode","position":{"start":{"line":240,"column":3,"offset":11455},"end":{"line":240,"column":27,"offset":11479},"indent":[]}},{"type":"text","value":" -> ","position":{"start":{"line":240,"column":27,"offset":11479},"end":{"line":240,"column":31,"offset":11483},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Utils::jsonDecode","position":{"start":{"line":240,"column":31,"offset":11483},"end":{"line":240,"column":61,"offset":11513},"indent":[]}}],"position":{"start":{"line":240,"column":3,"offset":11455},"end":{"line":240,"column":61,"offset":11513},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":11453},"end":{"line":240,"column":61,"offset":11513},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\get_path","position":{"start":{"line":241,"column":3,"offset":11516},"end":{"line":241,"column":24,"offset":11537},"indent":[]}},{"type":"text","value":" -> ","position":{"start":{"line":241,"column":24,"offset":11537},"end":{"line":241,"column":28,"offset":11541},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Utils::getPath","position":{"start":{"line":241,"column":28,"offset":11541},"end":{"line":241,"column":55,"offset":11568},"indent":[]}}],"position":{"start":{"line":241,"column":3,"offset":11516},"end":{"line":241,"column":55,"offset":11568},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":11514},"end":{"line":241,"column":55,"offset":11568},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Utils::setPath","position":{"start":{"line":242,"column":3,"offset":11571},"end":{"line":242,"column":30,"offset":11598},"indent":[]}},{"type":"text","value":" -> ","position":{"start":{"line":242,"column":30,"offset":11598},"end":{"line":242,"column":34,"offset":11602},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\set_path","position":{"start":{"line":242,"column":34,"offset":11602},"end":{"line":242,"column":55,"offset":11623},"indent":[]}}],"position":{"start":{"line":242,"column":3,"offset":11571},"end":{"line":242,"column":55,"offset":11623},"indent":[]}}],"position":{"start":{"line":242,"column":1,"offset":11569},"end":{"line":242,"column":55,"offset":11623},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Pool::batch","position":{"start":{"line":243,"column":3,"offset":11626},"end":{"line":243,"column":27,"offset":11650},"indent":[]}},{"type":"text","value":" -> ","position":{"start":{"line":243,"column":27,"offset":11650},"end":{"line":243,"column":31,"offset":11654},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\batch","position":{"start":{"line":243,"column":31,"offset":11654},"end":{"line":243,"column":49,"offset":11672},"indent":[]}},{"type":"text","value":". This function is, however,\ndeprecated in favor of using ","position":{"start":{"line":243,"column":49,"offset":11672},"end":{"line":244,"column":32,"offset":11732},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Pool::batch()","position":{"start":{"line":244,"column":32,"offset":11732},"end":{"line":244,"column":58,"offset":11758},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":244,"column":58,"offset":11758},"end":{"line":244,"column":59,"offset":11759},"indent":[]}}],"position":{"start":{"line":243,"column":3,"offset":11626},"end":{"line":244,"column":59,"offset":11759},"indent":[3]}}],"position":{"start":{"line":243,"column":1,"offset":11624},"end":{"line":244,"column":59,"offset":11759},"indent":[1]}}],"position":{"start":{"line":240,"column":1,"offset":11453},"end":{"line":244,"column":59,"offset":11759},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The \"procedural\" global client has been removed with no replacement (e.g.,\n","position":{"start":{"line":246,"column":1,"offset":11761},"end":{"line":247,"column":1,"offset":11836},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\get()","position":{"start":{"line":247,"column":1,"offset":11836},"end":{"line":247,"column":19,"offset":11854},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":247,"column":19,"offset":11854},"end":{"line":247,"column":21,"offset":11856},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\post()","position":{"start":{"line":247,"column":21,"offset":11856},"end":{"line":247,"column":40,"offset":11875},"indent":[]}},{"type":"text","value":", etc.). Use a ","position":{"start":{"line":247,"column":40,"offset":11875},"end":{"line":247,"column":55,"offset":11890},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Client","position":{"start":{"line":247,"column":55,"offset":11890},"end":{"line":247,"column":74,"offset":11909},"indent":[]}},{"type":"text","value":"\nobject as a replacement.","position":{"start":{"line":247,"column":74,"offset":11909},"end":{"line":248,"column":25,"offset":11934},"indent":[1]}}],"position":{"start":{"line":246,"column":1,"offset":11761},"end":{"line":248,"column":25,"offset":11934},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"throwImmediately","position":{"start":{"line":250,"column":4,"offset":11939},"end":{"line":250,"column":22,"offset":11957},"indent":[]}},{"type":"text","value":" has been removed","position":{"start":{"line":250,"column":22,"offset":11957},"end":{"line":250,"column":39,"offset":11974},"indent":[]}}],"position":{"start":{"line":250,"column":1,"offset":11936},"end":{"line":250,"column":39,"offset":11974},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The concept of \"throwImmediately\" has been removed from exceptions and error\nevents. This control mechanism was used to stop a transfer of concurrent\nrequests from completing. This can now be handled by throwing the exception or\nby cancelling a pool of requests or each outstanding future request\nindividually.","position":{"start":{"line":252,"column":1,"offset":11976},"end":{"line":256,"column":14,"offset":12286},"indent":[1,1,1,1]}}],"position":{"start":{"line":252,"column":1,"offset":11976},"end":{"line":256,"column":14,"offset":12286},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"headers event has been removed","position":{"start":{"line":258,"column":4,"offset":12291},"end":{"line":258,"column":34,"offset":12321},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":12288},"end":{"line":258,"column":34,"offset":12321},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Removed the \"headers\" event. This event was only useful for changing the\nbody a response once the headers of the response were known. You can implement\na similar behavior in a number of ways. One example might be to use a\nFnStream that has access to the transaction being sent. For example, when the\nfirst byte is written, you could check if the response headers match your\nexpectations, and if so, change the actual stream body that is being\nwritten to.","position":{"start":{"line":260,"column":1,"offset":12323},"end":{"line":266,"column":12,"offset":12777},"indent":[1,1,1,1,1,1]}}],"position":{"start":{"line":260,"column":1,"offset":12323},"end":{"line":266,"column":12,"offset":12777},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Updates to HTTP Messages","position":{"start":{"line":268,"column":4,"offset":12782},"end":{"line":268,"column":28,"offset":12806},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":12779},"end":{"line":268,"column":28,"offset":12806},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Removed the ","position":{"start":{"line":270,"column":1,"offset":12808},"end":{"line":270,"column":13,"offset":12820},"indent":[]}},{"type":"inlineCode","value":"asArray","position":{"start":{"line":270,"column":13,"offset":12820},"end":{"line":270,"column":22,"offset":12829},"indent":[]}},{"type":"text","value":" parameter from\n","position":{"start":{"line":270,"column":22,"offset":12829},"end":{"line":271,"column":1,"offset":12845},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\MessageInterface::getHeader","position":{"start":{"line":271,"column":1,"offset":12845},"end":{"line":271,"column":49,"offset":12893},"indent":[]}},{"type":"text","value":". If you want to get a header\nvalue as an array, then use the newly added ","position":{"start":{"line":271,"column":49,"offset":12893},"end":{"line":272,"column":45,"offset":12967},"indent":[1]}},{"type":"inlineCode","value":"getHeaderAsArray()","position":{"start":{"line":272,"column":45,"offset":12967},"end":{"line":272,"column":65,"offset":12987},"indent":[]}},{"type":"text","value":" method of\n","position":{"start":{"line":272,"column":65,"offset":12987},"end":{"line":273,"column":1,"offset":12998},"indent":[1]}},{"type":"inlineCode","value":"MessageInterface","position":{"start":{"line":273,"column":1,"offset":12998},"end":{"line":273,"column":19,"offset":13016},"indent":[]}},{"type":"text","value":". This change makes the Guzzle interfaces compatible with\nthe PSR-7 interfaces.","position":{"start":{"line":273,"column":19,"offset":13016},"end":{"line":274,"column":22,"offset":13095},"indent":[1]}}],"position":{"start":{"line":270,"column":1,"offset":12808},"end":{"line":274,"column":22,"offset":13095},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.x to 4.0","position":{"start":{"line":276,"column":1,"offset":13097},"end":{"line":276,"column":11,"offset":13107},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":13097},"end":{"line":277,"column":11,"offset":13118},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Overarching changes:","position":{"start":{"line":279,"column":4,"offset":13123},"end":{"line":279,"column":24,"offset":13143},"indent":[]}}],"position":{"start":{"line":279,"column":1,"offset":13120},"end":{"line":279,"column":24,"offset":13143},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Now requires PHP 5.4 or greater.","position":{"start":{"line":281,"column":3,"offset":13147},"end":{"line":281,"column":35,"offset":13179},"indent":[]}}],"position":{"start":{"line":281,"column":3,"offset":13147},"end":{"line":281,"column":35,"offset":13179},"indent":[]}}],"position":{"start":{"line":281,"column":1,"offset":13145},"end":{"line":281,"column":35,"offset":13179},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No longer requires cURL to send requests.","position":{"start":{"line":282,"column":3,"offset":13182},"end":{"line":282,"column":44,"offset":13223},"indent":[]}}],"position":{"start":{"line":282,"column":3,"offset":13182},"end":{"line":282,"column":44,"offset":13223},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":13180},"end":{"line":282,"column":44,"offset":13223},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Guzzle no longer wraps every exception it throws. Only exceptions that are\nrecoverable are now wrapped by Guzzle.","position":{"start":{"line":283,"column":3,"offset":13226},"end":{"line":284,"column":41,"offset":13341},"indent":[3]}}],"position":{"start":{"line":283,"column":3,"offset":13226},"end":{"line":284,"column":41,"offset":13341},"indent":[3]}}],"position":{"start":{"line":283,"column":1,"offset":13224},"end":{"line":284,"column":41,"offset":13341},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Various namespaces have been removed or renamed.","position":{"start":{"line":285,"column":3,"offset":13344},"end":{"line":285,"column":51,"offset":13392},"indent":[]}}],"position":{"start":{"line":285,"column":3,"offset":13344},"end":{"line":285,"column":51,"offset":13392},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":13342},"end":{"line":285,"column":51,"offset":13392},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"No longer requiring the Symfony EventDispatcher. A custom event dispatcher\nbased on the Symfony EventDispatcher is\nnow utilized in ","position":{"start":{"line":286,"column":3,"offset":13395},"end":{"line":288,"column":19,"offset":13530},"indent":[3,3]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\EmitterInterface","position":{"start":{"line":288,"column":19,"offset":13530},"end":{"line":288,"column":54,"offset":13565},"indent":[]}},{"type":"text","value":" (resulting in significant\nspeed and functionality improvements).","position":{"start":{"line":288,"column":54,"offset":13565},"end":{"line":289,"column":41,"offset":13632},"indent":[3]}}],"position":{"start":{"line":286,"column":3,"offset":13395},"end":{"line":289,"column":41,"offset":13632},"indent":[3,3,3]}}],"position":{"start":{"line":286,"column":1,"offset":13393},"end":{"line":289,"column":41,"offset":13632},"indent":[1,1,1]}}],"position":{"start":{"line":281,"column":1,"offset":13145},"end":{"line":289,"column":41,"offset":13632},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Changes per Guzzle 3.x namespace are described below.","position":{"start":{"line":291,"column":1,"offset":13634},"end":{"line":291,"column":54,"offset":13687},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":13634},"end":{"line":291,"column":54,"offset":13687},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Batch","position":{"start":{"line":293,"column":4,"offset":13692},"end":{"line":293,"column":9,"offset":13697},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":13689},"end":{"line":293,"column":9,"offset":13697},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":295,"column":1,"offset":13699},"end":{"line":295,"column":5,"offset":13703},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Batch","position":{"start":{"line":295,"column":5,"offset":13703},"end":{"line":295,"column":19,"offset":13717},"indent":[]}},{"type":"text","value":" namespace has been removed. This is best left to\nthird-parties to implement on top of Guzzle's core HTTP library.","position":{"start":{"line":295,"column":19,"offset":13717},"end":{"line":296,"column":65,"offset":13831},"indent":[1]}}],"position":{"start":{"line":295,"column":1,"offset":13699},"end":{"line":296,"column":65,"offset":13831},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Cache","position":{"start":{"line":298,"column":4,"offset":13836},"end":{"line":298,"column":9,"offset":13841},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":13833},"end":{"line":298,"column":9,"offset":13841},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":300,"column":1,"offset":13843},"end":{"line":300,"column":5,"offset":13847},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Cache","position":{"start":{"line":300,"column":5,"offset":13847},"end":{"line":300,"column":19,"offset":13861},"indent":[]}},{"type":"text","value":" namespace has been removed. (Todo: No suitable replacement\nhas been implemented yet, but hoping to utilize a PSR cache interface).","position":{"start":{"line":300,"column":19,"offset":13861},"end":{"line":301,"column":72,"offset":13992},"indent":[1]}}],"position":{"start":{"line":300,"column":1,"offset":13843},"end":{"line":301,"column":72,"offset":13992},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Common","position":{"start":{"line":303,"column":4,"offset":13997},"end":{"line":303,"column":10,"offset":14003},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":13994},"end":{"line":303,"column":10,"offset":14003},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed all of the wrapped exceptions. It's better to use the standard PHP\nlibrary for unrecoverable exceptions.","position":{"start":{"line":305,"column":3,"offset":14007},"end":{"line":306,"column":40,"offset":14121},"indent":[3]}}],"position":{"start":{"line":305,"column":3,"offset":14007},"end":{"line":306,"column":40,"offset":14121},"indent":[3]}}],"position":{"start":{"line":305,"column":1,"offset":14005},"end":{"line":306,"column":40,"offset":14121},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"FromConfigInterface","position":{"start":{"line":307,"column":3,"offset":14124},"end":{"line":307,"column":24,"offset":14145},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":307,"column":24,"offset":14145},"end":{"line":307,"column":42,"offset":14163},"indent":[]}}],"position":{"start":{"line":307,"column":3,"offset":14124},"end":{"line":307,"column":42,"offset":14163},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":14122},"end":{"line":307,"column":42,"offset":14163},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Common\\Version","position":{"start":{"line":308,"column":3,"offset":14166},"end":{"line":308,"column":26,"offset":14189},"indent":[]}},{"type":"text","value":" has been removed. The VERSION constant can be found\nat ","position":{"start":{"line":308,"column":26,"offset":14189},"end":{"line":309,"column":6,"offset":14247},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\ClientInterface::VERSION","position":{"start":{"line":309,"column":6,"offset":14247},"end":{"line":309,"column":43,"offset":14284},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":309,"column":43,"offset":14284},"end":{"line":309,"column":44,"offset":14285},"indent":[]}}],"position":{"start":{"line":308,"column":3,"offset":14166},"end":{"line":309,"column":44,"offset":14285},"indent":[3]}}],"position":{"start":{"line":308,"column":1,"offset":14164},"end":{"line":309,"column":44,"offset":14285},"indent":[1]}}],"position":{"start":{"line":305,"column":1,"offset":14005},"end":{"line":309,"column":44,"offset":14285},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Collection","position":{"start":{"line":311,"column":5,"offset":14291},"end":{"line":311,"column":15,"offset":14301},"indent":[]}}],"position":{"start":{"line":311,"column":1,"offset":14287},"end":{"line":311,"column":15,"offset":14301},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"getAll","position":{"start":{"line":313,"column":3,"offset":14305},"end":{"line":313,"column":11,"offset":14313},"indent":[]}},{"type":"text","value":" has been removed. Use ","position":{"start":{"line":313,"column":11,"offset":14313},"end":{"line":313,"column":34,"offset":14336},"indent":[]}},{"type":"inlineCode","value":"toArray","position":{"start":{"line":313,"column":34,"offset":14336},"end":{"line":313,"column":43,"offset":14345},"indent":[]}},{"type":"text","value":" to convert a collection to an array.","position":{"start":{"line":313,"column":43,"offset":14345},"end":{"line":313,"column":80,"offset":14382},"indent":[]}}],"position":{"start":{"line":313,"column":3,"offset":14305},"end":{"line":313,"column":80,"offset":14382},"indent":[]}}],"position":{"start":{"line":313,"column":1,"offset":14303},"end":{"line":313,"column":80,"offset":14382},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"inject","position":{"start":{"line":314,"column":3,"offset":14385},"end":{"line":314,"column":11,"offset":14393},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":314,"column":11,"offset":14393},"end":{"line":314,"column":29,"offset":14411},"indent":[]}}],"position":{"start":{"line":314,"column":3,"offset":14385},"end":{"line":314,"column":29,"offset":14411},"indent":[]}}],"position":{"start":{"line":314,"column":1,"offset":14383},"end":{"line":314,"column":29,"offset":14411},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"keySearch","position":{"start":{"line":315,"column":3,"offset":14414},"end":{"line":315,"column":14,"offset":14425},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":315,"column":14,"offset":14425},"end":{"line":315,"column":32,"offset":14443},"indent":[]}}],"position":{"start":{"line":315,"column":3,"offset":14414},"end":{"line":315,"column":32,"offset":14443},"indent":[]}}],"position":{"start":{"line":315,"column":1,"offset":14412},"end":{"line":315,"column":32,"offset":14443},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"getPath","position":{"start":{"line":316,"column":3,"offset":14446},"end":{"line":316,"column":12,"offset":14455},"indent":[]}},{"type":"text","value":" no longer supports wildcard expressions. Use something better like\nJMESPath for this.","position":{"start":{"line":316,"column":12,"offset":14455},"end":{"line":317,"column":21,"offset":14543},"indent":[3]}}],"position":{"start":{"line":316,"column":3,"offset":14446},"end":{"line":317,"column":21,"offset":14543},"indent":[3]}}],"position":{"start":{"line":316,"column":1,"offset":14444},"end":{"line":317,"column":21,"offset":14543},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"setPath","position":{"start":{"line":318,"column":3,"offset":14546},"end":{"line":318,"column":12,"offset":14555},"indent":[]}},{"type":"text","value":" now supports appending to an existing array via the ","position":{"start":{"line":318,"column":12,"offset":14555},"end":{"line":318,"column":65,"offset":14608},"indent":[]}},{"type":"inlineCode","value":"[]","position":{"start":{"line":318,"column":65,"offset":14608},"end":{"line":318,"column":69,"offset":14612},"indent":[]}},{"type":"text","value":" notation.","position":{"start":{"line":318,"column":69,"offset":14612},"end":{"line":318,"column":79,"offset":14622},"indent":[]}}],"position":{"start":{"line":318,"column":3,"offset":14546},"end":{"line":318,"column":79,"offset":14622},"indent":[]}}],"position":{"start":{"line":318,"column":1,"offset":14544},"end":{"line":318,"column":79,"offset":14622},"indent":[]}}],"position":{"start":{"line":313,"column":1,"offset":14303},"end":{"line":318,"column":79,"offset":14622},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Events","position":{"start":{"line":320,"column":5,"offset":14628},"end":{"line":320,"column":11,"offset":14634},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":14624},"end":{"line":320,"column":11,"offset":14634},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Guzzle no longer requires Symfony's EventDispatcher component. Guzzle now uses\n","position":{"start":{"line":322,"column":1,"offset":14636},"end":{"line":323,"column":1,"offset":14715},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\Emitter","position":{"start":{"line":323,"column":1,"offset":14715},"end":{"line":323,"column":27,"offset":14741},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":323,"column":27,"offset":14741},"end":{"line":323,"column":28,"offset":14742},"indent":[]}}],"position":{"start":{"line":322,"column":1,"offset":14636},"end":{"line":323,"column":28,"offset":14742},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Symfony\\Component\\EventDispatcher\\EventDispatcherInterface","position":{"start":{"line":325,"column":3,"offset":14746},"end":{"line":325,"column":63,"offset":14806},"indent":[]}},{"type":"text","value":" is replaced by\n","position":{"start":{"line":325,"column":63,"offset":14806},"end":{"line":326,"column":3,"offset":14824},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\EmitterInterface","position":{"start":{"line":326,"column":3,"offset":14824},"end":{"line":326,"column":38,"offset":14859},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":326,"column":38,"offset":14859},"end":{"line":326,"column":39,"offset":14860},"indent":[]}}],"position":{"start":{"line":325,"column":3,"offset":14746},"end":{"line":326,"column":39,"offset":14860},"indent":[3]}}],"position":{"start":{"line":325,"column":1,"offset":14744},"end":{"line":326,"column":39,"offset":14860},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Symfony\\Component\\EventDispatcher\\EventDispatcher","position":{"start":{"line":327,"column":3,"offset":14863},"end":{"line":327,"column":54,"offset":14914},"indent":[]}},{"type":"text","value":" is replaced by\n","position":{"start":{"line":327,"column":54,"offset":14914},"end":{"line":328,"column":3,"offset":14932},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\Emitter","position":{"start":{"line":328,"column":3,"offset":14932},"end":{"line":328,"column":29,"offset":14958},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":328,"column":29,"offset":14958},"end":{"line":328,"column":30,"offset":14959},"indent":[]}}],"position":{"start":{"line":327,"column":3,"offset":14863},"end":{"line":328,"column":30,"offset":14959},"indent":[3]}}],"position":{"start":{"line":327,"column":1,"offset":14861},"end":{"line":328,"column":30,"offset":14959},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Symfony\\Component\\EventDispatcher\\Event","position":{"start":{"line":329,"column":3,"offset":14962},"end":{"line":329,"column":44,"offset":15003},"indent":[]}},{"type":"text","value":" is replaced by\n","position":{"start":{"line":329,"column":44,"offset":15003},"end":{"line":330,"column":3,"offset":15021},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\Event","position":{"start":{"line":330,"column":3,"offset":15021},"end":{"line":330,"column":27,"offset":15045},"indent":[]}},{"type":"text","value":", and Guzzle now has an EventInterface in\n","position":{"start":{"line":330,"column":27,"offset":15045},"end":{"line":331,"column":3,"offset":15089},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\EventInterface","position":{"start":{"line":331,"column":3,"offset":15089},"end":{"line":331,"column":36,"offset":15122},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":331,"column":36,"offset":15122},"end":{"line":331,"column":37,"offset":15123},"indent":[]}}],"position":{"start":{"line":329,"column":3,"offset":14962},"end":{"line":331,"column":37,"offset":15123},"indent":[3,3]}}],"position":{"start":{"line":329,"column":1,"offset":14960},"end":{"line":331,"column":37,"offset":15123},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"AbstractHasDispatcher","position":{"start":{"line":332,"column":3,"offset":15126},"end":{"line":332,"column":26,"offset":15149},"indent":[]}},{"type":"text","value":" has moved to a trait, ","position":{"start":{"line":332,"column":26,"offset":15149},"end":{"line":332,"column":49,"offset":15172},"indent":[]}},{"type":"inlineCode","value":"HasEmitterTrait","position":{"start":{"line":332,"column":49,"offset":15172},"end":{"line":332,"column":66,"offset":15189},"indent":[]}},{"type":"text","value":", and\n","position":{"start":{"line":332,"column":66,"offset":15189},"end":{"line":333,"column":3,"offset":15197},"indent":[3]}},{"type":"inlineCode","value":"HasDispatcherInterface","position":{"start":{"line":333,"column":3,"offset":15197},"end":{"line":333,"column":27,"offset":15221},"indent":[]}},{"type":"text","value":" has moved to ","position":{"start":{"line":333,"column":27,"offset":15221},"end":{"line":333,"column":41,"offset":15235},"indent":[]}},{"type":"inlineCode","value":"HasEmitterInterface","position":{"start":{"line":333,"column":41,"offset":15235},"end":{"line":333,"column":62,"offset":15256},"indent":[]}},{"type":"text","value":". Retrieving the\nevent emitter of a request, client, etc. now uses the ","position":{"start":{"line":333,"column":62,"offset":15256},"end":{"line":334,"column":57,"offset":15329},"indent":[3]}},{"type":"inlineCode","value":"getEmitter","position":{"start":{"line":334,"column":57,"offset":15329},"end":{"line":334,"column":69,"offset":15341},"indent":[]}},{"type":"text","value":" method\nrather than the ","position":{"start":{"line":334,"column":69,"offset":15341},"end":{"line":335,"column":19,"offset":15367},"indent":[3]}},{"type":"inlineCode","value":"getDispatcher","position":{"start":{"line":335,"column":19,"offset":15367},"end":{"line":335,"column":34,"offset":15382},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":335,"column":34,"offset":15382},"end":{"line":335,"column":42,"offset":15390},"indent":[]}}],"position":{"start":{"line":332,"column":3,"offset":15126},"end":{"line":335,"column":42,"offset":15390},"indent":[3,3,3]}}],"position":{"start":{"line":332,"column":1,"offset":15124},"end":{"line":335,"column":42,"offset":15390},"indent":[1,1,1]}}],"position":{"start":{"line":325,"column":1,"offset":14744},"end":{"line":335,"column":42,"offset":15390},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Emitter","position":{"start":{"line":337,"column":6,"offset":15397},"end":{"line":337,"column":13,"offset":15404},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":15392},"end":{"line":337,"column":13,"offset":15404},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":339,"column":3,"offset":15408},"end":{"line":339,"column":11,"offset":15416},"indent":[]}},{"type":"inlineCode","value":"once()","position":{"start":{"line":339,"column":11,"offset":15416},"end":{"line":339,"column":19,"offset":15424},"indent":[]}},{"type":"text","value":" method to add a listener that automatically removes itself\nthe first time it is invoked.","position":{"start":{"line":339,"column":19,"offset":15424},"end":{"line":340,"column":32,"offset":15515},"indent":[3]}}],"position":{"start":{"line":339,"column":3,"offset":15408},"end":{"line":340,"column":32,"offset":15515},"indent":[3]}}],"position":{"start":{"line":339,"column":1,"offset":15406},"end":{"line":340,"column":32,"offset":15515},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":341,"column":3,"offset":15518},"end":{"line":341,"column":11,"offset":15526},"indent":[]}},{"type":"inlineCode","value":"listeners()","position":{"start":{"line":341,"column":11,"offset":15526},"end":{"line":341,"column":24,"offset":15539},"indent":[]}},{"type":"text","value":" method to retrieve a list of event listeners rather than\nthe ","position":{"start":{"line":341,"column":24,"offset":15539},"end":{"line":342,"column":7,"offset":15603},"indent":[3]}},{"type":"inlineCode","value":"getListeners()","position":{"start":{"line":342,"column":7,"offset":15603},"end":{"line":342,"column":23,"offset":15619},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":342,"column":23,"offset":15619},"end":{"line":342,"column":31,"offset":15627},"indent":[]}}],"position":{"start":{"line":341,"column":3,"offset":15518},"end":{"line":342,"column":31,"offset":15627},"indent":[3]}}],"position":{"start":{"line":341,"column":1,"offset":15516},"end":{"line":342,"column":31,"offset":15627},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":343,"column":3,"offset":15630},"end":{"line":343,"column":7,"offset":15634},"indent":[]}},{"type":"inlineCode","value":"emit()","position":{"start":{"line":343,"column":7,"offset":15634},"end":{"line":343,"column":15,"offset":15642},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":343,"column":15,"offset":15642},"end":{"line":343,"column":27,"offset":15654},"indent":[]}},{"type":"inlineCode","value":"dispatch()","position":{"start":{"line":343,"column":27,"offset":15654},"end":{"line":343,"column":39,"offset":15666},"indent":[]}},{"type":"text","value":" to emit an event from an emitter.","position":{"start":{"line":343,"column":39,"offset":15666},"end":{"line":343,"column":73,"offset":15700},"indent":[]}}],"position":{"start":{"line":343,"column":3,"offset":15630},"end":{"line":343,"column":73,"offset":15700},"indent":[]}}],"position":{"start":{"line":343,"column":1,"offset":15628},"end":{"line":343,"column":73,"offset":15700},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":344,"column":3,"offset":15703},"end":{"line":344,"column":7,"offset":15707},"indent":[]}},{"type":"inlineCode","value":"attach()","position":{"start":{"line":344,"column":7,"offset":15707},"end":{"line":344,"column":17,"offset":15717},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":344,"column":17,"offset":15717},"end":{"line":344,"column":29,"offset":15729},"indent":[]}},{"type":"inlineCode","value":"addSubscriber()","position":{"start":{"line":344,"column":29,"offset":15729},"end":{"line":344,"column":46,"offset":15746},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":344,"column":46,"offset":15746},"end":{"line":344,"column":51,"offset":15751},"indent":[]}},{"type":"inlineCode","value":"detach()","position":{"start":{"line":344,"column":51,"offset":15751},"end":{"line":344,"column":61,"offset":15761},"indent":[]}},{"type":"text","value":" instead of\n","position":{"start":{"line":344,"column":61,"offset":15761},"end":{"line":345,"column":3,"offset":15775},"indent":[3]}},{"type":"inlineCode","value":"removeSubscriber()","position":{"start":{"line":345,"column":3,"offset":15775},"end":{"line":345,"column":23,"offset":15795},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":345,"column":23,"offset":15795},"end":{"line":345,"column":24,"offset":15796},"indent":[]}}],"position":{"start":{"line":344,"column":3,"offset":15703},"end":{"line":345,"column":24,"offset":15796},"indent":[3]}}],"position":{"start":{"line":344,"column":1,"offset":15701},"end":{"line":345,"column":24,"offset":15796},"indent":[1]}}],"position":{"start":{"line":339,"column":1,"offset":15406},"end":{"line":345,"column":24,"offset":15796},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"php","meta":null,"value":"$mock = new Mock();\n// 3.x\n$request->getEventDispatcher()->addSubscriber($mock);\n$request->getEventDispatcher()->removeSubscriber($mock);\n// 4.x\n$request->getEmitter()->attach($mock);\n$request->getEmitter()->detach($mock);","position":{"start":{"line":347,"column":1,"offset":15798},"end":{"line":355,"column":4,"offset":16031},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Use the ","position":{"start":{"line":357,"column":1,"offset":16033},"end":{"line":357,"column":9,"offset":16041},"indent":[]}},{"type":"inlineCode","value":"on()","position":{"start":{"line":357,"column":9,"offset":16041},"end":{"line":357,"column":15,"offset":16047},"indent":[]}},{"type":"text","value":" method to add a listener rather than the ","position":{"start":{"line":357,"column":15,"offset":16047},"end":{"line":357,"column":57,"offset":16089},"indent":[]}},{"type":"inlineCode","value":"addListener()","position":{"start":{"line":357,"column":57,"offset":16089},"end":{"line":357,"column":72,"offset":16104},"indent":[]}},{"type":"text","value":" method.","position":{"start":{"line":357,"column":72,"offset":16104},"end":{"line":357,"column":80,"offset":16112},"indent":[]}}],"position":{"start":{"line":357,"column":1,"offset":16033},"end":{"line":357,"column":80,"offset":16112},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"// 3.x\n$request->getEventDispatcher()->addListener('foo', function (Event $event) { /* ... */ } );\n// 4.x\n$request->getEmitter()->on('foo', function (Event $event, $name) { /* ... */ } );","position":{"start":{"line":359,"column":1,"offset":16114},"end":{"line":364,"column":4,"offset":16312},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Http","position":{"start":{"line":366,"column":4,"offset":16317},"end":{"line":366,"column":8,"offset":16321},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":16314},"end":{"line":366,"column":8,"offset":16321},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"General changes","position":{"start":{"line":368,"column":5,"offset":16327},"end":{"line":368,"column":20,"offset":16342},"indent":[]}}],"position":{"start":{"line":368,"column":1,"offset":16323},"end":{"line":368,"column":20,"offset":16342},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The cacert.pem certificate has been moved to ","position":{"start":{"line":370,"column":3,"offset":16346},"end":{"line":370,"column":48,"offset":16391},"indent":[]}},{"type":"inlineCode","value":"src/cacert.pem","position":{"start":{"line":370,"column":48,"offset":16391},"end":{"line":370,"column":64,"offset":16407},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":370,"column":64,"offset":16407},"end":{"line":370,"column":65,"offset":16408},"indent":[]}}],"position":{"start":{"line":370,"column":3,"offset":16346},"end":{"line":370,"column":65,"offset":16408},"indent":[]}}],"position":{"start":{"line":370,"column":1,"offset":16344},"end":{"line":370,"column":65,"offset":16408},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added the concept of adapters that are used to transfer requests over the\nwire.","position":{"start":{"line":371,"column":3,"offset":16411},"end":{"line":372,"column":8,"offset":16492},"indent":[3]}}],"position":{"start":{"line":371,"column":3,"offset":16411},"end":{"line":372,"column":8,"offset":16492},"indent":[3]}}],"position":{"start":{"line":371,"column":1,"offset":16409},"end":{"line":372,"column":8,"offset":16492},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Simplified the event system.","position":{"start":{"line":373,"column":3,"offset":16495},"end":{"line":373,"column":31,"offset":16523},"indent":[]}}],"position":{"start":{"line":373,"column":3,"offset":16495},"end":{"line":373,"column":31,"offset":16523},"indent":[]}}],"position":{"start":{"line":373,"column":1,"offset":16493},"end":{"line":373,"column":31,"offset":16523},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Sending requests in parallel is still possible, but batching is no longer a\nconcept of the HTTP layer. Instead, you must use the ","position":{"start":{"line":374,"column":3,"offset":16526},"end":{"line":375,"column":56,"offset":16657},"indent":[3]}},{"type":"inlineCode","value":"complete","position":{"start":{"line":375,"column":56,"offset":16657},"end":{"line":375,"column":66,"offset":16667},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":375,"column":66,"offset":16667},"end":{"line":375,"column":71,"offset":16672},"indent":[]}},{"type":"inlineCode","value":"error","position":{"start":{"line":375,"column":71,"offset":16672},"end":{"line":375,"column":78,"offset":16679},"indent":[]}},{"type":"text","value":"\nevents to asynchronously manage parallel request transfers.","position":{"start":{"line":375,"column":78,"offset":16679},"end":{"line":376,"column":62,"offset":16741},"indent":[3]}}],"position":{"start":{"line":374,"column":3,"offset":16526},"end":{"line":376,"column":62,"offset":16741},"indent":[3,3]}}],"position":{"start":{"line":374,"column":1,"offset":16524},"end":{"line":376,"column":62,"offset":16741},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\Url","position":{"start":{"line":377,"column":3,"offset":16744},"end":{"line":377,"column":20,"offset":16761},"indent":[]}},{"type":"text","value":" has moved to ","position":{"start":{"line":377,"column":20,"offset":16761},"end":{"line":377,"column":34,"offset":16775},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Url","position":{"start":{"line":377,"column":34,"offset":16775},"end":{"line":377,"column":50,"offset":16791},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":377,"column":50,"offset":16791},"end":{"line":377,"column":51,"offset":16792},"indent":[]}}],"position":{"start":{"line":377,"column":3,"offset":16744},"end":{"line":377,"column":51,"offset":16792},"indent":[]}}],"position":{"start":{"line":377,"column":1,"offset":16742},"end":{"line":377,"column":51,"offset":16792},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\QueryString","position":{"start":{"line":378,"column":3,"offset":16795},"end":{"line":378,"column":28,"offset":16820},"indent":[]}},{"type":"text","value":" has moved to ","position":{"start":{"line":378,"column":28,"offset":16820},"end":{"line":378,"column":42,"offset":16834},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Query","position":{"start":{"line":378,"column":42,"offset":16834},"end":{"line":378,"column":60,"offset":16852},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":378,"column":60,"offset":16852},"end":{"line":378,"column":61,"offset":16853},"indent":[]}}],"position":{"start":{"line":378,"column":3,"offset":16795},"end":{"line":378,"column":61,"offset":16853},"indent":[]}}],"position":{"start":{"line":378,"column":1,"offset":16793},"end":{"line":378,"column":61,"offset":16853},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"QueryAggregators have been rewritten so that they are simply callable\nfunctions.","position":{"start":{"line":379,"column":3,"offset":16856},"end":{"line":380,"column":13,"offset":16938},"indent":[3]}}],"position":{"start":{"line":379,"column":3,"offset":16856},"end":{"line":380,"column":13,"offset":16938},"indent":[3]}}],"position":{"start":{"line":379,"column":1,"offset":16854},"end":{"line":380,"column":13,"offset":16938},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\StaticClient","position":{"start":{"line":381,"column":3,"offset":16941},"end":{"line":381,"column":28,"offset":16966},"indent":[]}},{"type":"text","value":" has been removed. Use the functions provided in\n","position":{"start":{"line":381,"column":28,"offset":16966},"end":{"line":382,"column":3,"offset":17017},"indent":[3]}},{"type":"inlineCode","value":"functions.php","position":{"start":{"line":382,"column":3,"offset":17017},"end":{"line":382,"column":18,"offset":17032},"indent":[]}},{"type":"text","value":" for an easy to use static client instance.","position":{"start":{"line":382,"column":18,"offset":17032},"end":{"line":382,"column":61,"offset":17075},"indent":[]}}],"position":{"start":{"line":381,"column":3,"offset":16941},"end":{"line":382,"column":61,"offset":17075},"indent":[3]}}],"position":{"start":{"line":381,"column":1,"offset":16939},"end":{"line":382,"column":61,"offset":17075},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Exceptions in ","position":{"start":{"line":383,"column":3,"offset":17078},"end":{"line":383,"column":17,"offset":17092},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception","position":{"start":{"line":383,"column":17,"offset":17092},"end":{"line":383,"column":39,"offset":17114},"indent":[]}},{"type":"text","value":" have been updated to all extend from\n","position":{"start":{"line":383,"column":39,"offset":17114},"end":{"line":384,"column":3,"offset":17154},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Exception\\TransferException","position":{"start":{"line":384,"column":3,"offset":17154},"end":{"line":384,"column":43,"offset":17194},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":384,"column":43,"offset":17194},"end":{"line":384,"column":44,"offset":17195},"indent":[]}}],"position":{"start":{"line":383,"column":3,"offset":17078},"end":{"line":384,"column":44,"offset":17195},"indent":[3]}}],"position":{"start":{"line":383,"column":1,"offset":17076},"end":{"line":384,"column":44,"offset":17195},"indent":[1]}}],"position":{"start":{"line":370,"column":1,"offset":16344},"end":{"line":384,"column":44,"offset":17195},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Client","position":{"start":{"line":386,"column":5,"offset":17201},"end":{"line":386,"column":11,"offset":17207},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":17197},"end":{"line":386,"column":11,"offset":17207},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Calling methods like ","position":{"start":{"line":388,"column":1,"offset":17209},"end":{"line":388,"column":22,"offset":17230},"indent":[]}},{"type":"inlineCode","value":"get()","position":{"start":{"line":388,"column":22,"offset":17230},"end":{"line":388,"column":29,"offset":17237},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":388,"column":29,"offset":17237},"end":{"line":388,"column":31,"offset":17239},"indent":[]}},{"type":"inlineCode","value":"post()","position":{"start":{"line":388,"column":31,"offset":17239},"end":{"line":388,"column":39,"offset":17247},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":388,"column":39,"offset":17247},"end":{"line":388,"column":41,"offset":17249},"indent":[]}},{"type":"inlineCode","value":"head()","position":{"start":{"line":388,"column":41,"offset":17249},"end":{"line":388,"column":49,"offset":17257},"indent":[]}},{"type":"text","value":", etc. no longer create and\nreturn a request, but rather creates a request, sends the request, and returns\nthe response.","position":{"start":{"line":388,"column":49,"offset":17257},"end":{"line":390,"column":14,"offset":17377},"indent":[1,1]}}],"position":{"start":{"line":388,"column":1,"offset":17209},"end":{"line":390,"column":14,"offset":17377},"indent":[1,1]}},{"type":"code","lang":"php","meta":null,"value":"// 3.0\n$request = $client->get('/');\n$response = $request->send();\n\n// 4.0\n$response = $client->get('/');\n\n// or, to mirror the previous behavior\n$request = $client->createRequest('GET', '/');\n$response = $client->send($request);","position":{"start":{"line":392,"column":1,"offset":17379},"end":{"line":403,"column":4,"offset":17619},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\ClientInterface","position":{"start":{"line":405,"column":1,"offset":17621},"end":{"line":405,"column":29,"offset":17649},"indent":[]}},{"type":"text","value":" has changed.","position":{"start":{"line":405,"column":29,"offset":17649},"end":{"line":405,"column":42,"offset":17662},"indent":[]}}],"position":{"start":{"line":405,"column":1,"offset":17621},"end":{"line":405,"column":42,"offset":17662},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":407,"column":3,"offset":17666},"end":{"line":407,"column":7,"offset":17670},"indent":[]}},{"type":"inlineCode","value":"send","position":{"start":{"line":407,"column":7,"offset":17670},"end":{"line":407,"column":13,"offset":17676},"indent":[]}},{"type":"text","value":" method no longer accepts more than one request. Use ","position":{"start":{"line":407,"column":13,"offset":17676},"end":{"line":407,"column":66,"offset":17729},"indent":[]}},{"type":"inlineCode","value":"sendAll","position":{"start":{"line":407,"column":66,"offset":17729},"end":{"line":407,"column":75,"offset":17738},"indent":[]}},{"type":"text","value":" to\nsend multiple requests in parallel.","position":{"start":{"line":407,"column":75,"offset":17738},"end":{"line":408,"column":38,"offset":17779},"indent":[3]}}],"position":{"start":{"line":407,"column":3,"offset":17666},"end":{"line":408,"column":38,"offset":17779},"indent":[3]}}],"position":{"start":{"line":407,"column":1,"offset":17664},"end":{"line":408,"column":38,"offset":17779},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"setUserAgent()","position":{"start":{"line":409,"column":3,"offset":17782},"end":{"line":409,"column":19,"offset":17798},"indent":[]}},{"type":"text","value":" has been removed. Use a default request option instead. You\ncould, for example, do something like:\n","position":{"start":{"line":409,"column":19,"offset":17798},"end":{"line":411,"column":3,"offset":17902},"indent":[3,3]}},{"type":"inlineCode","value":"$client->setConfig('defaults/headers/User-Agent', 'Foo/Bar ' . $client::getDefaultUserAgent())","position":{"start":{"line":411,"column":3,"offset":17902},"end":{"line":411,"column":99,"offset":17998},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":411,"column":99,"offset":17998},"end":{"line":411,"column":100,"offset":17999},"indent":[]}}],"position":{"start":{"line":409,"column":3,"offset":17782},"end":{"line":411,"column":100,"offset":17999},"indent":[3,3]}}],"position":{"start":{"line":409,"column":1,"offset":17780},"end":{"line":411,"column":100,"offset":17999},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"setSslVerification()","position":{"start":{"line":412,"column":3,"offset":18002},"end":{"line":412,"column":25,"offset":18024},"indent":[]}},{"type":"text","value":" has been removed. Use default request options instead,\nlike ","position":{"start":{"line":412,"column":25,"offset":18024},"end":{"line":413,"column":8,"offset":18087},"indent":[3]}},{"type":"inlineCode","value":"$client->setConfig('defaults/verify', true)","position":{"start":{"line":413,"column":8,"offset":18087},"end":{"line":413,"column":53,"offset":18132},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":413,"column":53,"offset":18132},"end":{"line":413,"column":54,"offset":18133},"indent":[]}}],"position":{"start":{"line":412,"column":3,"offset":18002},"end":{"line":413,"column":54,"offset":18133},"indent":[3]}}],"position":{"start":{"line":412,"column":1,"offset":18000},"end":{"line":413,"column":54,"offset":18133},"indent":[1]}}],"position":{"start":{"line":407,"column":1,"offset":17664},"end":{"line":413,"column":54,"offset":18133},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Client","position":{"start":{"line":415,"column":1,"offset":18135},"end":{"line":415,"column":20,"offset":18154},"indent":[]}},{"type":"text","value":" has changed.","position":{"start":{"line":415,"column":20,"offset":18154},"end":{"line":415,"column":33,"offset":18167},"indent":[]}}],"position":{"start":{"line":415,"column":1,"offset":18135},"end":{"line":415,"column":33,"offset":18167},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The constructor now accepts only an associative array. You can include a\n","position":{"start":{"line":417,"column":3,"offset":18171},"end":{"line":418,"column":3,"offset":18246},"indent":[3]}},{"type":"inlineCode","value":"base_url","position":{"start":{"line":418,"column":3,"offset":18246},"end":{"line":418,"column":13,"offset":18256},"indent":[]}},{"type":"text","value":" string or array to use a URI template as the base URL of a client.\nYou can also specify a ","position":{"start":{"line":418,"column":13,"offset":18256},"end":{"line":419,"column":26,"offset":18349},"indent":[3]}},{"type":"inlineCode","value":"defaults","position":{"start":{"line":419,"column":26,"offset":18349},"end":{"line":419,"column":36,"offset":18359},"indent":[]}},{"type":"text","value":" key that is an associative array of default\nrequest options. You can pass an ","position":{"start":{"line":419,"column":36,"offset":18359},"end":{"line":420,"column":36,"offset":18439},"indent":[3]}},{"type":"inlineCode","value":"adapter","position":{"start":{"line":420,"column":36,"offset":18439},"end":{"line":420,"column":45,"offset":18448},"indent":[]}},{"type":"text","value":" to use a custom adapter,\n","position":{"start":{"line":420,"column":45,"offset":18448},"end":{"line":421,"column":3,"offset":18476},"indent":[3]}},{"type":"inlineCode","value":"batch_adapter","position":{"start":{"line":421,"column":3,"offset":18476},"end":{"line":421,"column":18,"offset":18491},"indent":[]}},{"type":"text","value":" to use a custom adapter for sending requests in parallel, or\na ","position":{"start":{"line":421,"column":18,"offset":18491},"end":{"line":422,"column":5,"offset":18557},"indent":[3]}},{"type":"inlineCode","value":"message_factory","position":{"start":{"line":422,"column":5,"offset":18557},"end":{"line":422,"column":22,"offset":18574},"indent":[]}},{"type":"text","value":" to change the factory used to create HTTP requests and\nresponses.","position":{"start":{"line":422,"column":22,"offset":18574},"end":{"line":423,"column":13,"offset":18642},"indent":[3]}}],"position":{"start":{"line":417,"column":3,"offset":18171},"end":{"line":423,"column":13,"offset":18642},"indent":[3,3,3,3,3,3]}}],"position":{"start":{"line":417,"column":1,"offset":18169},"end":{"line":423,"column":13,"offset":18642},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The client no longer emits a ","position":{"start":{"line":424,"column":3,"offset":18645},"end":{"line":424,"column":32,"offset":18674},"indent":[]}},{"type":"inlineCode","value":"client.create_request","position":{"start":{"line":424,"column":32,"offset":18674},"end":{"line":424,"column":55,"offset":18697},"indent":[]}},{"type":"text","value":" event.","position":{"start":{"line":424,"column":55,"offset":18697},"end":{"line":424,"column":62,"offset":18704},"indent":[]}}],"position":{"start":{"line":424,"column":3,"offset":18645},"end":{"line":424,"column":62,"offset":18704},"indent":[]}}],"position":{"start":{"line":424,"column":1,"offset":18643},"end":{"line":424,"column":62,"offset":18704},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Creating requests with a client no longer automatically utilize a URI\ntemplate. You must pass an array into a creational method (e.g.,\n","position":{"start":{"line":425,"column":3,"offset":18707},"end":{"line":427,"column":3,"offset":18846},"indent":[3,3]}},{"type":"inlineCode","value":"createRequest","position":{"start":{"line":427,"column":3,"offset":18846},"end":{"line":427,"column":18,"offset":18861},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":427,"column":18,"offset":18861},"end":{"line":427,"column":20,"offset":18863},"indent":[]}},{"type":"inlineCode","value":"get","position":{"start":{"line":427,"column":20,"offset":18863},"end":{"line":427,"column":25,"offset":18868},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":427,"column":25,"offset":18868},"end":{"line":427,"column":27,"offset":18870},"indent":[]}},{"type":"inlineCode","value":"put","position":{"start":{"line":427,"column":27,"offset":18870},"end":{"line":427,"column":32,"offset":18875},"indent":[]}},{"type":"text","value":", etc.) in order to expand a URI template.","position":{"start":{"line":427,"column":32,"offset":18875},"end":{"line":427,"column":74,"offset":18917},"indent":[]}}],"position":{"start":{"line":425,"column":3,"offset":18707},"end":{"line":427,"column":74,"offset":18917},"indent":[3,3]}}],"position":{"start":{"line":425,"column":1,"offset":18705},"end":{"line":427,"column":74,"offset":18917},"indent":[1,1]}}],"position":{"start":{"line":417,"column":1,"offset":18169},"end":{"line":427,"column":74,"offset":18917},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Messages","position":{"start":{"line":429,"column":5,"offset":18923},"end":{"line":429,"column":13,"offset":18931},"indent":[]}}],"position":{"start":{"line":429,"column":1,"offset":18919},"end":{"line":429,"column":13,"offset":18931},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Messages no longer have references to their counterparts (i.e., a request no\nlonger has a reference to it's response, and a response no loger has a\nreference to its request). This association is now managed through a\n","position":{"start":{"line":431,"column":1,"offset":18933},"end":{"line":434,"column":1,"offset":19150},"indent":[1,1,1]}},{"type":"inlineCode","value":"GuzzleHttp\\Adapter\\TransactionInterface","position":{"start":{"line":434,"column":1,"offset":19150},"end":{"line":434,"column":42,"offset":19191},"indent":[]}},{"type":"text","value":" object. You can get references to\nthese transaction objects using request events that are emitted over the\nlifecycle of a request.","position":{"start":{"line":434,"column":42,"offset":19191},"end":{"line":436,"column":24,"offset":19322},"indent":[1,1]}}],"position":{"start":{"line":431,"column":1,"offset":18933},"end":{"line":436,"column":24,"offset":19322},"indent":[1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Requests with a body","position":{"start":{"line":438,"column":6,"offset":19329},"end":{"line":438,"column":26,"offset":19349},"indent":[]}}],"position":{"start":{"line":438,"column":1,"offset":19324},"end":{"line":438,"column":26,"offset":19349},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\EntityEnclosingRequest","position":{"start":{"line":440,"column":3,"offset":19353},"end":{"line":440,"column":46,"offset":19396},"indent":[]}},{"type":"text","value":" and\n","position":{"start":{"line":440,"column":46,"offset":19396},"end":{"line":441,"column":3,"offset":19403},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\EntityEnclosingRequestInterface","position":{"start":{"line":441,"column":3,"offset":19403},"end":{"line":441,"column":55,"offset":19455},"indent":[]}},{"type":"text","value":" have been removed. The\nseparation between requests that contain a body and requests that do not\ncontain a body has been removed, and now ","position":{"start":{"line":441,"column":55,"offset":19455},"end":{"line":443,"column":44,"offset":19597},"indent":[3,3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\RequestInterface","position":{"start":{"line":443,"column":44,"offset":19597},"end":{"line":443,"column":81,"offset":19634},"indent":[]}},{"type":"text","value":"\nhandles both use cases.","position":{"start":{"line":443,"column":81,"offset":19634},"end":{"line":444,"column":26,"offset":19660},"indent":[3]}}],"position":{"start":{"line":440,"column":3,"offset":19353},"end":{"line":444,"column":26,"offset":19660},"indent":[3,3,3,3]}}],"position":{"start":{"line":440,"column":1,"offset":19351},"end":{"line":444,"column":26,"offset":19660},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Any method that previously accepts a ","position":{"start":{"line":445,"column":3,"offset":19663},"end":{"line":445,"column":40,"offset":19700},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Response","position":{"start":{"line":445,"column":40,"offset":19700},"end":{"line":445,"column":61,"offset":19721},"indent":[]}},{"type":"text","value":" object now accept a\n","position":{"start":{"line":445,"column":61,"offset":19721},"end":{"line":446,"column":3,"offset":19744},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\ResponseInterface","position":{"start":{"line":446,"column":3,"offset":19744},"end":{"line":446,"column":41,"offset":19782},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":446,"column":41,"offset":19782},"end":{"line":446,"column":42,"offset":19783},"indent":[]}}],"position":{"start":{"line":445,"column":3,"offset":19663},"end":{"line":446,"column":42,"offset":19783},"indent":[3]}}],"position":{"start":{"line":445,"column":1,"offset":19661},"end":{"line":446,"column":42,"offset":19783},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\RequestFactoryInterface","position":{"start":{"line":447,"column":3,"offset":19786},"end":{"line":447,"column":47,"offset":19830},"indent":[]}},{"type":"text","value":" has been renamed to\n","position":{"start":{"line":447,"column":47,"offset":19830},"end":{"line":448,"column":3,"offset":19853},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\MessageFactoryInterface","position":{"start":{"line":448,"column":3,"offset":19853},"end":{"line":448,"column":47,"offset":19897},"indent":[]}},{"type":"text","value":". This interface is used to create\nboth requests and responses and is implemented in\n","position":{"start":{"line":448,"column":47,"offset":19897},"end":{"line":450,"column":3,"offset":19986},"indent":[3,3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\MessageFactory","position":{"start":{"line":450,"column":3,"offset":19986},"end":{"line":450,"column":38,"offset":20021},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":450,"column":38,"offset":20021},"end":{"line":450,"column":39,"offset":20022},"indent":[]}}],"position":{"start":{"line":447,"column":3,"offset":19786},"end":{"line":450,"column":39,"offset":20022},"indent":[3,3,3]}}],"position":{"start":{"line":447,"column":1,"offset":19784},"end":{"line":450,"column":39,"offset":20022},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"POST field and file methods have been removed from the request object. You\nmust now use the methods made available to ","position":{"start":{"line":451,"column":3,"offset":20025},"end":{"line":452,"column":46,"offset":20145},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Post\\PostBodyInterface","position":{"start":{"line":452,"column":46,"offset":20145},"end":{"line":452,"column":81,"offset":20180},"indent":[]}},{"type":"text","value":"\nto control the format of a POST body. Requests that are created using a\nstandard ","position":{"start":{"line":452,"column":81,"offset":20180},"end":{"line":454,"column":12,"offset":20266},"indent":[3,3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\MessageFactoryInterface","position":{"start":{"line":454,"column":12,"offset":20266},"end":{"line":454,"column":56,"offset":20310},"indent":[]}},{"type":"text","value":" will automatically use\na ","position":{"start":{"line":454,"column":56,"offset":20310},"end":{"line":455,"column":5,"offset":20338},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Post\\PostBody","position":{"start":{"line":455,"column":5,"offset":20338},"end":{"line":455,"column":31,"offset":20364},"indent":[]}},{"type":"text","value":" body if the body was passed as an array or if\nthe method is POST and no body is provided.","position":{"start":{"line":455,"column":31,"offset":20364},"end":{"line":456,"column":46,"offset":20456},"indent":[3]}}],"position":{"start":{"line":451,"column":3,"offset":20025},"end":{"line":456,"column":46,"offset":20456},"indent":[3,3,3,3,3]}}],"position":{"start":{"line":451,"column":1,"offset":20023},"end":{"line":456,"column":46,"offset":20456},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":440,"column":1,"offset":19351},"end":{"line":456,"column":46,"offset":20456},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"php","meta":null,"value":"$request = $client->createRequest('POST', '/');\n$request->getBody()->setField('foo', 'bar');\n$request->getBody()->addFile(new PostFile('file_key', fopen('/path/to/content', 'r')));","position":{"start":{"line":458,"column":1,"offset":20458},"end":{"line":462,"column":4,"offset":20649},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Headers","position":{"start":{"line":464,"column":6,"offset":20656},"end":{"line":464,"column":13,"offset":20663},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":20651},"end":{"line":464,"column":13,"offset":20663},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\Header","position":{"start":{"line":466,"column":3,"offset":20667},"end":{"line":466,"column":30,"offset":20694},"indent":[]}},{"type":"text","value":" has been removed. Header values are now simply\nrepresented by an array of values or as a string. Header values are returned\nas a string by default when retrieving a header value from a message. You can\npass an optional argument of ","position":{"start":{"line":466,"column":30,"offset":20694},"end":{"line":469,"column":32,"offset":20932},"indent":[3,3,3]}},{"type":"inlineCode","value":"true","position":{"start":{"line":469,"column":32,"offset":20932},"end":{"line":469,"column":38,"offset":20938},"indent":[]}},{"type":"text","value":" to retrieve a header value as an array\nof strings instead of a single concatenated string.","position":{"start":{"line":469,"column":38,"offset":20938},"end":{"line":470,"column":54,"offset":21031},"indent":[3]}}],"position":{"start":{"line":466,"column":3,"offset":20667},"end":{"line":470,"column":54,"offset":21031},"indent":[3,3,3,3]}}],"position":{"start":{"line":466,"column":1,"offset":20665},"end":{"line":470,"column":54,"offset":21031},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\PostFile","position":{"start":{"line":471,"column":3,"offset":21034},"end":{"line":471,"column":24,"offset":21055},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":471,"column":24,"offset":21055},"end":{"line":471,"column":29,"offset":21060},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\PostFileInterface","position":{"start":{"line":471,"column":29,"offset":21060},"end":{"line":471,"column":59,"offset":21090},"indent":[]}},{"type":"text","value":" have been moved to\n","position":{"start":{"line":471,"column":59,"offset":21090},"end":{"line":472,"column":3,"offset":21112},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Post","position":{"start":{"line":472,"column":3,"offset":21112},"end":{"line":472,"column":20,"offset":21129},"indent":[]}},{"type":"text","value":". This interface has been simplified and now allows the\naddition of arbitrary headers.","position":{"start":{"line":472,"column":20,"offset":21129},"end":{"line":473,"column":33,"offset":21217},"indent":[3]}}],"position":{"start":{"line":471,"column":3,"offset":21034},"end":{"line":473,"column":33,"offset":21217},"indent":[3,3]}}],"position":{"start":{"line":471,"column":1,"offset":21032},"end":{"line":473,"column":33,"offset":21217},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Custom headers like ","position":{"start":{"line":474,"column":3,"offset":21220},"end":{"line":474,"column":23,"offset":21240},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\Header\\Link","position":{"start":{"line":474,"column":23,"offset":21240},"end":{"line":474,"column":55,"offset":21272},"indent":[]}},{"type":"text","value":" have been removed. Most\nof the custom headers are now handled separately in specific\nsubscribers/plugins, and ","position":{"start":{"line":474,"column":55,"offset":21272},"end":{"line":476,"column":28,"offset":21387},"indent":[3,3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\HeaderValues::parseParams()","position":{"start":{"line":476,"column":28,"offset":21387},"end":{"line":476,"column":76,"offset":21435},"indent":[]}},{"type":"text","value":" has\nbeen updated to properly handle headers that contain parameters (like the\n","position":{"start":{"line":476,"column":76,"offset":21435},"end":{"line":478,"column":3,"offset":21518},"indent":[3,3]}},{"type":"inlineCode","value":"Link","position":{"start":{"line":478,"column":3,"offset":21518},"end":{"line":478,"column":9,"offset":21524},"indent":[]}},{"type":"text","value":" header).","position":{"start":{"line":478,"column":9,"offset":21524},"end":{"line":478,"column":18,"offset":21533},"indent":[]}}],"position":{"start":{"line":474,"column":3,"offset":21220},"end":{"line":478,"column":18,"offset":21533},"indent":[3,3,3,3]}}],"position":{"start":{"line":474,"column":1,"offset":21218},"end":{"line":478,"column":18,"offset":21533},"indent":[1,1,1,1]}}],"position":{"start":{"line":466,"column":1,"offset":20665},"end":{"line":478,"column":18,"offset":21533},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Responses","position":{"start":{"line":480,"column":6,"offset":21540},"end":{"line":480,"column":15,"offset":21549},"indent":[]}}],"position":{"start":{"line":480,"column":1,"offset":21535},"end":{"line":480,"column":15,"offset":21549},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\Response::getInfo()","position":{"start":{"line":482,"column":3,"offset":21553},"end":{"line":482,"column":43,"offset":21593},"indent":[]}},{"type":"text","value":" and\n","position":{"start":{"line":482,"column":43,"offset":21593},"end":{"line":483,"column":3,"offset":21600},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\Response::setInfo()","position":{"start":{"line":483,"column":3,"offset":21600},"end":{"line":483,"column":43,"offset":21640},"indent":[]}},{"type":"text","value":" have been removed. Use the event\nsystem to retrieve this type of information.","position":{"start":{"line":483,"column":43,"offset":21640},"end":{"line":484,"column":47,"offset":21720},"indent":[3]}}],"position":{"start":{"line":482,"column":3,"offset":21553},"end":{"line":484,"column":47,"offset":21720},"indent":[3,3]}}],"position":{"start":{"line":482,"column":1,"offset":21551},"end":{"line":484,"column":47,"offset":21720},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\Response::getRawHeaders()","position":{"start":{"line":485,"column":3,"offset":21723},"end":{"line":485,"column":49,"offset":21769},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":485,"column":49,"offset":21769},"end":{"line":485,"column":67,"offset":21787},"indent":[]}}],"position":{"start":{"line":485,"column":3,"offset":21723},"end":{"line":485,"column":67,"offset":21787},"indent":[]}}],"position":{"start":{"line":485,"column":1,"offset":21721},"end":{"line":485,"column":67,"offset":21787},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\Response::getMessage()","position":{"start":{"line":486,"column":3,"offset":21790},"end":{"line":486,"column":46,"offset":21833},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":486,"column":46,"offset":21833},"end":{"line":486,"column":64,"offset":21851},"indent":[]}}],"position":{"start":{"line":486,"column":3,"offset":21790},"end":{"line":486,"column":64,"offset":21851},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":21788},"end":{"line":486,"column":64,"offset":21851},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\Response::calculateAge()","position":{"start":{"line":487,"column":3,"offset":21854},"end":{"line":487,"column":48,"offset":21899},"indent":[]}},{"type":"text","value":" and other cache specific\nmethods have moved to the CacheSubscriber.","position":{"start":{"line":487,"column":48,"offset":21899},"end":{"line":488,"column":45,"offset":21969},"indent":[3]}}],"position":{"start":{"line":487,"column":3,"offset":21854},"end":{"line":488,"column":45,"offset":21969},"indent":[3]}}],"position":{"start":{"line":487,"column":1,"offset":21852},"end":{"line":488,"column":45,"offset":21969},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Header specific helper functions like ","position":{"start":{"line":489,"column":3,"offset":21972},"end":{"line":489,"column":41,"offset":22010},"indent":[]}},{"type":"inlineCode","value":"getContentMd5()","position":{"start":{"line":489,"column":41,"offset":22010},"end":{"line":489,"column":58,"offset":22027},"indent":[]}},{"type":"text","value":" have been removed.\nJust use ","position":{"start":{"line":489,"column":58,"offset":22027},"end":{"line":490,"column":12,"offset":22058},"indent":[3]}},{"type":"inlineCode","value":"getHeader('Content-MD5')","position":{"start":{"line":490,"column":12,"offset":22058},"end":{"line":490,"column":38,"offset":22084},"indent":[]}},{"type":"text","value":" instead.","position":{"start":{"line":490,"column":38,"offset":22084},"end":{"line":490,"column":47,"offset":22093},"indent":[]}}],"position":{"start":{"line":489,"column":3,"offset":21972},"end":{"line":490,"column":47,"offset":22093},"indent":[3]}}],"position":{"start":{"line":489,"column":1,"offset":21970},"end":{"line":490,"column":47,"offset":22093},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\Response::setRequest()","position":{"start":{"line":491,"column":3,"offset":22096},"end":{"line":491,"column":46,"offset":22139},"indent":[]}},{"type":"text","value":" and\n","position":{"start":{"line":491,"column":46,"offset":22139},"end":{"line":492,"column":3,"offset":22146},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\Response::getRequest()","position":{"start":{"line":492,"column":3,"offset":22146},"end":{"line":492,"column":46,"offset":22189},"indent":[]}},{"type":"text","value":" have been removed. Use the event\nsystem to work with request and response objects as a transaction.","position":{"start":{"line":492,"column":46,"offset":22189},"end":{"line":493,"column":69,"offset":22291},"indent":[3]}}],"position":{"start":{"line":491,"column":3,"offset":22096},"end":{"line":493,"column":69,"offset":22291},"indent":[3,3]}}],"position":{"start":{"line":491,"column":1,"offset":22094},"end":{"line":493,"column":69,"offset":22291},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\Response::getRedirectCount()","position":{"start":{"line":494,"column":3,"offset":22294},"end":{"line":494,"column":52,"offset":22343},"indent":[]}},{"type":"text","value":" has been removed. Use the\nRedirect subscriber instead.","position":{"start":{"line":494,"column":52,"offset":22343},"end":{"line":495,"column":31,"offset":22400},"indent":[3]}}],"position":{"start":{"line":494,"column":3,"offset":22294},"end":{"line":495,"column":31,"offset":22400},"indent":[3]}}],"position":{"start":{"line":494,"column":1,"offset":22292},"end":{"line":495,"column":31,"offset":22400},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Message\\Response::isSuccessful()","position":{"start":{"line":496,"column":3,"offset":22403},"end":{"line":496,"column":48,"offset":22448},"indent":[]}},{"type":"text","value":" and other related methods have\nbeen removed. Use ","position":{"start":{"line":496,"column":48,"offset":22448},"end":{"line":497,"column":21,"offset":22500},"indent":[3]}},{"type":"inlineCode","value":"getStatusCode()","position":{"start":{"line":497,"column":21,"offset":22500},"end":{"line":497,"column":38,"offset":22517},"indent":[]}},{"type":"text","value":" instead.","position":{"start":{"line":497,"column":38,"offset":22517},"end":{"line":497,"column":47,"offset":22526},"indent":[]}}],"position":{"start":{"line":496,"column":3,"offset":22403},"end":{"line":497,"column":47,"offset":22526},"indent":[3]}}],"position":{"start":{"line":496,"column":1,"offset":22401},"end":{"line":497,"column":47,"offset":22526},"indent":[1]}}],"position":{"start":{"line":482,"column":1,"offset":21551},"end":{"line":497,"column":47,"offset":22526},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Streaming responses","position":{"start":{"line":499,"column":6,"offset":22533},"end":{"line":499,"column":25,"offset":22552},"indent":[]}}],"position":{"start":{"line":499,"column":1,"offset":22528},"end":{"line":499,"column":25,"offset":22552},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Streaming requests can now be created by a client directly, returning a\n","position":{"start":{"line":501,"column":1,"offset":22554},"end":{"line":502,"column":1,"offset":22626},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\ResponseInterface","position":{"start":{"line":502,"column":1,"offset":22626},"end":{"line":502,"column":39,"offset":22664},"indent":[]}},{"type":"text","value":" object that contains a body stream\nreferencing an open PHP HTTP stream.","position":{"start":{"line":502,"column":39,"offset":22664},"end":{"line":503,"column":37,"offset":22736},"indent":[1]}}],"position":{"start":{"line":501,"column":1,"offset":22554},"end":{"line":503,"column":37,"offset":22736},"indent":[1,1]}},{"type":"code","lang":"php","meta":null,"value":"// 3.0\nuse Guzzle\\Stream\\PhpStreamRequestFactory;\n$request = $client->get('/');\n$factory = new PhpStreamRequestFactory();\n$stream = $factory->fromRequest($request);\n$data = $stream->read(1024);\n\n// 4.0\n$response = $client->get('/', ['stream' => true]);\n// Read some data off of the stream in the response body\n$data = $response->getBody()->read(1024);","position":{"start":{"line":505,"column":1,"offset":22738},"end":{"line":517,"column":4,"offset":23100},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Redirects","position":{"start":{"line":519,"column":6,"offset":23107},"end":{"line":519,"column":15,"offset":23116},"indent":[]}}],"position":{"start":{"line":519,"column":1,"offset":23102},"end":{"line":519,"column":15,"offset":23116},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":521,"column":1,"offset":23118},"end":{"line":521,"column":5,"offset":23122},"indent":[]}},{"type":"inlineCode","value":"configureRedirects()","position":{"start":{"line":521,"column":5,"offset":23122},"end":{"line":521,"column":27,"offset":23144},"indent":[]}},{"type":"text","value":" method has been removed in favor of a\n","position":{"start":{"line":521,"column":27,"offset":23144},"end":{"line":522,"column":1,"offset":23183},"indent":[1]}},{"type":"inlineCode","value":"allow_redirects","position":{"start":{"line":522,"column":1,"offset":23183},"end":{"line":522,"column":18,"offset":23200},"indent":[]}},{"type":"text","value":" request option.","position":{"start":{"line":522,"column":18,"offset":23200},"end":{"line":522,"column":34,"offset":23216},"indent":[]}}],"position":{"start":{"line":521,"column":1,"offset":23118},"end":{"line":522,"column":34,"offset":23216},"indent":[1]}},{"type":"code","lang":"php","meta":null,"value":"// Standard redirects with a default of a max of 5 redirects\n$request = $client->createRequest('GET', '/', ['allow_redirects' => true]);\n\n// Strict redirects with a custom number of redirects\n$request = $client->createRequest('GET', '/', [\n    'allow_redirects' => ['max' => 5, 'strict' => true]\n]);","position":{"start":{"line":524,"column":1,"offset":23218},"end":{"line":532,"column":4,"offset":23528},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"EntityBody","position":{"start":{"line":534,"column":6,"offset":23535},"end":{"line":534,"column":16,"offset":23545},"indent":[]}}],"position":{"start":{"line":534,"column":1,"offset":23530},"end":{"line":534,"column":16,"offset":23545},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"EntityBody interfaces and classes have been removed or moved to\n","position":{"start":{"line":536,"column":1,"offset":23547},"end":{"line":537,"column":1,"offset":23611},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream","position":{"start":{"line":537,"column":1,"offset":23611},"end":{"line":537,"column":20,"offset":23630},"indent":[]}},{"type":"text","value":". All classes and interfaces that once required\n","position":{"start":{"line":537,"column":20,"offset":23630},"end":{"line":538,"column":1,"offset":23678},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\EntityBodyInterface","position":{"start":{"line":538,"column":1,"offset":23678},"end":{"line":538,"column":33,"offset":23710},"indent":[]}},{"type":"text","value":" now require\n","position":{"start":{"line":538,"column":33,"offset":23710},"end":{"line":539,"column":1,"offset":23723},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\StreamInterface","position":{"start":{"line":539,"column":1,"offset":23723},"end":{"line":539,"column":36,"offset":23758},"indent":[]}},{"type":"text","value":". Creating a new body for a request no\nlonger uses ","position":{"start":{"line":539,"column":36,"offset":23758},"end":{"line":540,"column":13,"offset":23809},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\EntityBody::factory","position":{"start":{"line":540,"column":13,"offset":23809},"end":{"line":540,"column":45,"offset":23841},"indent":[]}},{"type":"text","value":" but now uses\n","position":{"start":{"line":540,"column":45,"offset":23841},"end":{"line":541,"column":1,"offset":23855},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\Stream::factory","position":{"start":{"line":541,"column":1,"offset":23855},"end":{"line":541,"column":36,"offset":23890},"indent":[]}},{"type":"text","value":" or even better:\n","position":{"start":{"line":541,"column":36,"offset":23890},"end":{"line":542,"column":1,"offset":23907},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\create()","position":{"start":{"line":542,"column":1,"offset":23907},"end":{"line":542,"column":29,"offset":23935},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":542,"column":29,"offset":23935},"end":{"line":542,"column":30,"offset":23936},"indent":[]}}],"position":{"start":{"line":536,"column":1,"offset":23547},"end":{"line":542,"column":30,"offset":23936},"indent":[1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\EntityBodyInterface","position":{"start":{"line":544,"column":3,"offset":23940},"end":{"line":544,"column":36,"offset":23973},"indent":[]}},{"type":"text","value":" is now ","position":{"start":{"line":544,"column":36,"offset":23973},"end":{"line":544,"column":44,"offset":23981},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\StreamInterface","position":{"start":{"line":544,"column":44,"offset":23981},"end":{"line":544,"column":79,"offset":24016},"indent":[]}}],"position":{"start":{"line":544,"column":3,"offset":23940},"end":{"line":544,"column":79,"offset":24016},"indent":[]}}],"position":{"start":{"line":544,"column":1,"offset":23938},"end":{"line":544,"column":79,"offset":24016},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\EntityBody","position":{"start":{"line":545,"column":3,"offset":24019},"end":{"line":545,"column":27,"offset":24043},"indent":[]}},{"type":"text","value":" is now ","position":{"start":{"line":545,"column":27,"offset":24043},"end":{"line":545,"column":35,"offset":24051},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\Stream","position":{"start":{"line":545,"column":35,"offset":24051},"end":{"line":545,"column":61,"offset":24077},"indent":[]}}],"position":{"start":{"line":545,"column":3,"offset":24019},"end":{"line":545,"column":61,"offset":24077},"indent":[]}}],"position":{"start":{"line":545,"column":1,"offset":24017},"end":{"line":545,"column":61,"offset":24077},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\CachingEntityBody","position":{"start":{"line":546,"column":3,"offset":24080},"end":{"line":546,"column":34,"offset":24111},"indent":[]}},{"type":"text","value":" is now ","position":{"start":{"line":546,"column":34,"offset":24111},"end":{"line":546,"column":42,"offset":24119},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\CachingStream","position":{"start":{"line":546,"column":42,"offset":24119},"end":{"line":546,"column":75,"offset":24152},"indent":[]}}],"position":{"start":{"line":546,"column":3,"offset":24080},"end":{"line":546,"column":75,"offset":24152},"indent":[]}}],"position":{"start":{"line":546,"column":1,"offset":24078},"end":{"line":546,"column":75,"offset":24152},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\ReadLimitEntityBody","position":{"start":{"line":547,"column":3,"offset":24155},"end":{"line":547,"column":36,"offset":24188},"indent":[]}},{"type":"text","value":" is now ","position":{"start":{"line":547,"column":36,"offset":24188},"end":{"line":547,"column":44,"offset":24196},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\LimitStream","position":{"start":{"line":547,"column":44,"offset":24196},"end":{"line":547,"column":75,"offset":24227},"indent":[]}}],"position":{"start":{"line":547,"column":3,"offset":24155},"end":{"line":547,"column":75,"offset":24227},"indent":[]}}],"position":{"start":{"line":547,"column":1,"offset":24153},"end":{"line":547,"column":75,"offset":24227},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\IoEmittyinEntityBody","position":{"start":{"line":548,"column":3,"offset":24230},"end":{"line":548,"column":37,"offset":24264},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":548,"column":37,"offset":24264},"end":{"line":548,"column":55,"offset":24282},"indent":[]}}],"position":{"start":{"line":548,"column":3,"offset":24230},"end":{"line":548,"column":55,"offset":24282},"indent":[]}}],"position":{"start":{"line":548,"column":1,"offset":24228},"end":{"line":548,"column":55,"offset":24282},"indent":[]}}],"position":{"start":{"line":544,"column":1,"offset":23938},"end":{"line":548,"column":55,"offset":24282},"indent":[1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Request lifecycle events","position":{"start":{"line":550,"column":6,"offset":24289},"end":{"line":550,"column":30,"offset":24313},"indent":[]}}],"position":{"start":{"line":550,"column":1,"offset":24284},"end":{"line":550,"column":30,"offset":24313},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Requests previously submitted a large number of requests. The number of events\nemitted over the lifecycle of a request has been significantly reduced to make\nit easier to understand how to extend the behavior of a request. All events\nemitted during the lifecycle of a request now emit a custom\n","position":{"start":{"line":552,"column":1,"offset":24315},"end":{"line":556,"column":1,"offset":24609},"indent":[1,1,1,1]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\EventInterface","position":{"start":{"line":556,"column":1,"offset":24609},"end":{"line":556,"column":34,"offset":24642},"indent":[]}},{"type":"text","value":" object that contains context providing\nmethods and a way in which to modify the transaction at that specific point in\ntime (e.g., intercept the request and set a response on the transaction).","position":{"start":{"line":556,"column":34,"offset":24642},"end":{"line":558,"column":74,"offset":24834},"indent":[1,1]}}],"position":{"start":{"line":552,"column":1,"offset":24315},"end":{"line":558,"column":74,"offset":24834},"indent":[1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"request.before_send","position":{"start":{"line":560,"column":3,"offset":24838},"end":{"line":560,"column":24,"offset":24859},"indent":[]}},{"type":"text","value":" has been renamed to ","position":{"start":{"line":560,"column":24,"offset":24859},"end":{"line":560,"column":45,"offset":24880},"indent":[]}},{"type":"inlineCode","value":"before","position":{"start":{"line":560,"column":45,"offset":24880},"end":{"line":560,"column":53,"offset":24888},"indent":[]}},{"type":"text","value":" and now emits a\n","position":{"start":{"line":560,"column":53,"offset":24888},"end":{"line":561,"column":3,"offset":24907},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\BeforeEvent","position":{"start":{"line":561,"column":3,"offset":24907},"end":{"line":561,"column":33,"offset":24937},"indent":[]}}],"position":{"start":{"line":560,"column":3,"offset":24838},"end":{"line":561,"column":33,"offset":24937},"indent":[3]}}],"position":{"start":{"line":560,"column":1,"offset":24836},"end":{"line":561,"column":33,"offset":24937},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"request.complete","position":{"start":{"line":562,"column":3,"offset":24940},"end":{"line":562,"column":21,"offset":24958},"indent":[]}},{"type":"text","value":" has been renamed to ","position":{"start":{"line":562,"column":21,"offset":24958},"end":{"line":562,"column":42,"offset":24979},"indent":[]}},{"type":"inlineCode","value":"complete","position":{"start":{"line":562,"column":42,"offset":24979},"end":{"line":562,"column":52,"offset":24989},"indent":[]}},{"type":"text","value":" and now emits a\n","position":{"start":{"line":562,"column":52,"offset":24989},"end":{"line":563,"column":3,"offset":25008},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\CompleteEvent","position":{"start":{"line":563,"column":3,"offset":25008},"end":{"line":563,"column":35,"offset":25040},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":563,"column":35,"offset":25040},"end":{"line":563,"column":36,"offset":25041},"indent":[]}}],"position":{"start":{"line":562,"column":3,"offset":24940},"end":{"line":563,"column":36,"offset":25041},"indent":[3]}}],"position":{"start":{"line":562,"column":1,"offset":24938},"end":{"line":563,"column":36,"offset":25041},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"request.sent","position":{"start":{"line":564,"column":3,"offset":25044},"end":{"line":564,"column":17,"offset":25058},"indent":[]}},{"type":"text","value":" has been removed. Use ","position":{"start":{"line":564,"column":17,"offset":25058},"end":{"line":564,"column":40,"offset":25081},"indent":[]}},{"type":"inlineCode","value":"complete","position":{"start":{"line":564,"column":40,"offset":25081},"end":{"line":564,"column":50,"offset":25091},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":564,"column":50,"offset":25091},"end":{"line":564,"column":51,"offset":25092},"indent":[]}}],"position":{"start":{"line":564,"column":3,"offset":25044},"end":{"line":564,"column":51,"offset":25092},"indent":[]}}],"position":{"start":{"line":564,"column":1,"offset":25042},"end":{"line":564,"column":51,"offset":25092},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"request.success","position":{"start":{"line":565,"column":3,"offset":25095},"end":{"line":565,"column":20,"offset":25112},"indent":[]}},{"type":"text","value":" has been removed. Use ","position":{"start":{"line":565,"column":20,"offset":25112},"end":{"line":565,"column":43,"offset":25135},"indent":[]}},{"type":"inlineCode","value":"complete","position":{"start":{"line":565,"column":43,"offset":25135},"end":{"line":565,"column":53,"offset":25145},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":565,"column":53,"offset":25145},"end":{"line":565,"column":54,"offset":25146},"indent":[]}}],"position":{"start":{"line":565,"column":3,"offset":25095},"end":{"line":565,"column":54,"offset":25146},"indent":[]}}],"position":{"start":{"line":565,"column":1,"offset":25093},"end":{"line":565,"column":54,"offset":25146},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"error","position":{"start":{"line":566,"column":3,"offset":25149},"end":{"line":566,"column":10,"offset":25156},"indent":[]}},{"type":"text","value":" is now an event that emits a ","position":{"start":{"line":566,"column":10,"offset":25156},"end":{"line":566,"column":40,"offset":25186},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\ErrorEvent","position":{"start":{"line":566,"column":40,"offset":25186},"end":{"line":566,"column":69,"offset":25215},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":566,"column":69,"offset":25215},"end":{"line":566,"column":70,"offset":25216},"indent":[]}}],"position":{"start":{"line":566,"column":3,"offset":25149},"end":{"line":566,"column":70,"offset":25216},"indent":[]}}],"position":{"start":{"line":566,"column":1,"offset":25147},"end":{"line":566,"column":70,"offset":25216},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"request.exception","position":{"start":{"line":567,"column":3,"offset":25219},"end":{"line":567,"column":22,"offset":25238},"indent":[]}},{"type":"text","value":" has been removed. Use ","position":{"start":{"line":567,"column":22,"offset":25238},"end":{"line":567,"column":45,"offset":25261},"indent":[]}},{"type":"inlineCode","value":"error","position":{"start":{"line":567,"column":45,"offset":25261},"end":{"line":567,"column":52,"offset":25268},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":567,"column":52,"offset":25268},"end":{"line":567,"column":53,"offset":25269},"indent":[]}}],"position":{"start":{"line":567,"column":3,"offset":25219},"end":{"line":567,"column":53,"offset":25269},"indent":[]}}],"position":{"start":{"line":567,"column":1,"offset":25217},"end":{"line":567,"column":53,"offset":25269},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"request.receive.status_line","position":{"start":{"line":568,"column":3,"offset":25272},"end":{"line":568,"column":32,"offset":25301},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":568,"column":32,"offset":25301},"end":{"line":568,"column":50,"offset":25319},"indent":[]}}],"position":{"start":{"line":568,"column":3,"offset":25272},"end":{"line":568,"column":50,"offset":25319},"indent":[]}}],"position":{"start":{"line":568,"column":1,"offset":25270},"end":{"line":568,"column":50,"offset":25319},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"curl.callback.progress","position":{"start":{"line":569,"column":3,"offset":25322},"end":{"line":569,"column":27,"offset":25346},"indent":[]}},{"type":"text","value":" has been removed. Use a custom ","position":{"start":{"line":569,"column":27,"offset":25346},"end":{"line":569,"column":59,"offset":25378},"indent":[]}},{"type":"inlineCode","value":"StreamInterface","position":{"start":{"line":569,"column":59,"offset":25378},"end":{"line":569,"column":76,"offset":25395},"indent":[]}},{"type":"text","value":" to\nmaintain a status update.","position":{"start":{"line":569,"column":76,"offset":25395},"end":{"line":570,"column":28,"offset":25426},"indent":[3]}}],"position":{"start":{"line":569,"column":3,"offset":25322},"end":{"line":570,"column":28,"offset":25426},"indent":[3]}}],"position":{"start":{"line":569,"column":1,"offset":25320},"end":{"line":570,"column":28,"offset":25426},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"curl.callback.write","position":{"start":{"line":571,"column":3,"offset":25429},"end":{"line":571,"column":24,"offset":25450},"indent":[]}},{"type":"text","value":" has been removed. Use a custom ","position":{"start":{"line":571,"column":24,"offset":25450},"end":{"line":571,"column":56,"offset":25482},"indent":[]}},{"type":"inlineCode","value":"StreamInterface","position":{"start":{"line":571,"column":56,"offset":25482},"end":{"line":571,"column":73,"offset":25499},"indent":[]}},{"type":"text","value":" to\nintercept writes.","position":{"start":{"line":571,"column":73,"offset":25499},"end":{"line":572,"column":20,"offset":25522},"indent":[3]}}],"position":{"start":{"line":571,"column":3,"offset":25429},"end":{"line":572,"column":20,"offset":25522},"indent":[3]}}],"position":{"start":{"line":571,"column":1,"offset":25427},"end":{"line":572,"column":20,"offset":25522},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"curl.callback.read","position":{"start":{"line":573,"column":3,"offset":25525},"end":{"line":573,"column":23,"offset":25545},"indent":[]}},{"type":"text","value":" has been removed. Use a custom ","position":{"start":{"line":573,"column":23,"offset":25545},"end":{"line":573,"column":55,"offset":25577},"indent":[]}},{"type":"inlineCode","value":"StreamInterface","position":{"start":{"line":573,"column":55,"offset":25577},"end":{"line":573,"column":72,"offset":25594},"indent":[]}},{"type":"text","value":" to\nintercept reads.","position":{"start":{"line":573,"column":72,"offset":25594},"end":{"line":574,"column":19,"offset":25616},"indent":[3]}}],"position":{"start":{"line":573,"column":3,"offset":25525},"end":{"line":574,"column":19,"offset":25616},"indent":[3]}}],"position":{"start":{"line":573,"column":1,"offset":25523},"end":{"line":574,"column":19,"offset":25616},"indent":[1]}}],"position":{"start":{"line":560,"column":1,"offset":24836},"end":{"line":574,"column":19,"offset":25616},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"headers","position":{"start":{"line":576,"column":1,"offset":25618},"end":{"line":576,"column":10,"offset":25627},"indent":[]}},{"type":"text","value":" is a new event that is emitted after the response headers of a\nrequest have been received before the body of the response is downloaded. This\nevent emits a ","position":{"start":{"line":576,"column":10,"offset":25627},"end":{"line":578,"column":15,"offset":25784},"indent":[1,1]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\HeadersEvent","position":{"start":{"line":578,"column":15,"offset":25784},"end":{"line":578,"column":46,"offset":25815},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":578,"column":46,"offset":25815},"end":{"line":578,"column":47,"offset":25816},"indent":[]}}],"position":{"start":{"line":576,"column":1,"offset":25618},"end":{"line":578,"column":47,"offset":25816},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can intercept a request and inject a response using the ","position":{"start":{"line":580,"column":1,"offset":25818},"end":{"line":580,"column":61,"offset":25878},"indent":[]}},{"type":"inlineCode","value":"intercept()","position":{"start":{"line":580,"column":61,"offset":25878},"end":{"line":580,"column":74,"offset":25891},"indent":[]}},{"type":"text","value":" event\nof a ","position":{"start":{"line":580,"column":74,"offset":25891},"end":{"line":581,"column":6,"offset":25903},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\BeforeEvent","position":{"start":{"line":581,"column":6,"offset":25903},"end":{"line":581,"column":36,"offset":25933},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":581,"column":36,"offset":25933},"end":{"line":581,"column":38,"offset":25935},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\CompleteEvent","position":{"start":{"line":581,"column":38,"offset":25935},"end":{"line":581,"column":70,"offset":25967},"indent":[]}},{"type":"text","value":", and\n","position":{"start":{"line":581,"column":70,"offset":25967},"end":{"line":582,"column":1,"offset":25973},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Event\\ErrorEvent","position":{"start":{"line":582,"column":1,"offset":25973},"end":{"line":582,"column":30,"offset":26002},"indent":[]}},{"type":"text","value":" event.","position":{"start":{"line":582,"column":30,"offset":26002},"end":{"line":582,"column":37,"offset":26009},"indent":[]}}],"position":{"start":{"line":580,"column":1,"offset":25818},"end":{"line":582,"column":37,"offset":26009},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"See: ","position":{"start":{"line":584,"column":1,"offset":26011},"end":{"line":584,"column":6,"offset":26016},"indent":[]}},{"type":"link","title":null,"url":"https://docs.guzzlephp.org/en/latest/events.html","children":[{"type":"text","value":"https://docs.guzzlephp.org/en/latest/events.html","position":{"start":{"line":584,"column":6,"offset":26016},"end":{"line":584,"column":54,"offset":26064},"indent":[]}}],"position":{"start":{"line":584,"column":6,"offset":26016},"end":{"line":584,"column":54,"offset":26064},"indent":[]}}],"position":{"start":{"line":584,"column":1,"offset":26011},"end":{"line":584,"column":54,"offset":26064},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Inflection","position":{"start":{"line":586,"column":4,"offset":26069},"end":{"line":586,"column":14,"offset":26079},"indent":[]}}],"position":{"start":{"line":586,"column":1,"offset":26066},"end":{"line":586,"column":14,"offset":26079},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":588,"column":1,"offset":26081},"end":{"line":588,"column":5,"offset":26085},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Inflection","position":{"start":{"line":588,"column":5,"offset":26085},"end":{"line":588,"column":24,"offset":26104},"indent":[]}},{"type":"text","value":" namespace has been removed. This is not a core concern\nof Guzzle.","position":{"start":{"line":588,"column":24,"offset":26104},"end":{"line":589,"column":11,"offset":26170},"indent":[1]}}],"position":{"start":{"line":588,"column":1,"offset":26081},"end":{"line":589,"column":11,"offset":26170},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Iterator","position":{"start":{"line":591,"column":4,"offset":26175},"end":{"line":591,"column":12,"offset":26183},"indent":[]}}],"position":{"start":{"line":591,"column":1,"offset":26172},"end":{"line":591,"column":12,"offset":26183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":593,"column":1,"offset":26185},"end":{"line":593,"column":5,"offset":26189},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Iterator","position":{"start":{"line":593,"column":5,"offset":26189},"end":{"line":593,"column":22,"offset":26206},"indent":[]}},{"type":"text","value":" namespace has been removed.","position":{"start":{"line":593,"column":22,"offset":26206},"end":{"line":593,"column":50,"offset":26234},"indent":[]}}],"position":{"start":{"line":593,"column":1,"offset":26185},"end":{"line":593,"column":50,"offset":26234},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Iterator\\AppendIterator","position":{"start":{"line":595,"column":3,"offset":26238},"end":{"line":595,"column":35,"offset":26270},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":595,"column":35,"offset":26270},"end":{"line":595,"column":37,"offset":26272},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Iterator\\ChunkedIterator","position":{"start":{"line":595,"column":37,"offset":26272},"end":{"line":595,"column":70,"offset":26305},"indent":[]}},{"type":"text","value":", and\n","position":{"start":{"line":595,"column":70,"offset":26305},"end":{"line":596,"column":3,"offset":26313},"indent":[3]}},{"type":"inlineCode","value":"Guzzle\\Iterator\\MethodProxyIterator","position":{"start":{"line":596,"column":3,"offset":26313},"end":{"line":596,"column":40,"offset":26350},"indent":[]}},{"type":"text","value":" are nice, but not a core requirement of\nGuzzle itself.","position":{"start":{"line":596,"column":40,"offset":26350},"end":{"line":597,"column":17,"offset":26407},"indent":[3]}}],"position":{"start":{"line":595,"column":3,"offset":26238},"end":{"line":597,"column":17,"offset":26407},"indent":[3,3]}}],"position":{"start":{"line":595,"column":1,"offset":26236},"end":{"line":597,"column":17,"offset":26407},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Iterator\\FilterIterator","position":{"start":{"line":598,"column":3,"offset":26410},"end":{"line":598,"column":35,"offset":26442},"indent":[]}},{"type":"text","value":" is no longer needed because an equivalent\nclass is shipped with PHP 5.4.","position":{"start":{"line":598,"column":35,"offset":26442},"end":{"line":599,"column":33,"offset":26517},"indent":[3]}}],"position":{"start":{"line":598,"column":3,"offset":26410},"end":{"line":599,"column":33,"offset":26517},"indent":[3]}}],"position":{"start":{"line":598,"column":1,"offset":26408},"end":{"line":599,"column":33,"offset":26517},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Iterator\\MapIterator","position":{"start":{"line":600,"column":3,"offset":26520},"end":{"line":600,"column":32,"offset":26549},"indent":[]}},{"type":"text","value":" is not really needed when using PHP 5.5 because\nit's easier to just wrap an iterator in a generator that maps values.","position":{"start":{"line":600,"column":32,"offset":26549},"end":{"line":601,"column":72,"offset":26669},"indent":[3]}}],"position":{"start":{"line":600,"column":3,"offset":26520},"end":{"line":601,"column":72,"offset":26669},"indent":[3]}}],"position":{"start":{"line":600,"column":1,"offset":26518},"end":{"line":601,"column":72,"offset":26669},"indent":[1]}}],"position":{"start":{"line":595,"column":1,"offset":26236},"end":{"line":601,"column":72,"offset":26669},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For a replacement of these iterators, see ","position":{"start":{"line":603,"column":1,"offset":26671},"end":{"line":603,"column":43,"offset":26713},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/nikic/iter","children":[{"type":"text","value":"https://github.com/nikic/iter","position":{"start":{"line":603,"column":43,"offset":26713},"end":{"line":603,"column":72,"offset":26742},"indent":[]}}],"position":{"start":{"line":603,"column":43,"offset":26713},"end":{"line":603,"column":72,"offset":26742},"indent":[]}}],"position":{"start":{"line":603,"column":1,"offset":26671},"end":{"line":603,"column":72,"offset":26742},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Log","position":{"start":{"line":605,"column":4,"offset":26747},"end":{"line":605,"column":7,"offset":26750},"indent":[]}}],"position":{"start":{"line":605,"column":1,"offset":26744},"end":{"line":605,"column":7,"offset":26750},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The LogPlugin has moved to ","position":{"start":{"line":607,"column":1,"offset":26752},"end":{"line":607,"column":28,"offset":26779},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/guzzle/log-subscriber","children":[{"type":"text","value":"https://github.com/guzzle/log-subscriber","position":{"start":{"line":607,"column":28,"offset":26779},"end":{"line":607,"column":68,"offset":26819},"indent":[]}}],"position":{"start":{"line":607,"column":28,"offset":26779},"end":{"line":607,"column":68,"offset":26819},"indent":[]}},{"type":"text","value":". The\n","position":{"start":{"line":607,"column":68,"offset":26819},"end":{"line":608,"column":1,"offset":26825},"indent":[1]}},{"type":"inlineCode","value":"Guzzle\\Log","position":{"start":{"line":608,"column":1,"offset":26825},"end":{"line":608,"column":13,"offset":26837},"indent":[]}},{"type":"text","value":" namespace has been removed. Guzzle now relies on\n","position":{"start":{"line":608,"column":13,"offset":26837},"end":{"line":609,"column":1,"offset":26887},"indent":[1]}},{"type":"inlineCode","value":"Psr\\Log\\LoggerInterface","position":{"start":{"line":609,"column":1,"offset":26887},"end":{"line":609,"column":26,"offset":26912},"indent":[]}},{"type":"text","value":" for all logging. The MessageFormatter class has been\nmoved to ","position":{"start":{"line":609,"column":26,"offset":26912},"end":{"line":610,"column":10,"offset":26975},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\Log\\Formatter","position":{"start":{"line":610,"column":10,"offset":26975},"end":{"line":610,"column":47,"offset":27012},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":610,"column":47,"offset":27012},"end":{"line":610,"column":48,"offset":27013},"indent":[]}}],"position":{"start":{"line":607,"column":1,"offset":26752},"end":{"line":610,"column":48,"offset":27013},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Parser","position":{"start":{"line":612,"column":4,"offset":27018},"end":{"line":612,"column":10,"offset":27024},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":27015},"end":{"line":612,"column":10,"offset":27024},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":614,"column":1,"offset":27026},"end":{"line":614,"column":5,"offset":27030},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Parser","position":{"start":{"line":614,"column":5,"offset":27030},"end":{"line":614,"column":20,"offset":27045},"indent":[]}},{"type":"text","value":" namespace has been removed. This was previously used to\nmake it possible to plug in custom parsers for cookies, messages, URI\ntemplates, and URLs; however, this level of complexity is not needed in Guzzle\nso it has been removed.","position":{"start":{"line":614,"column":20,"offset":27045},"end":{"line":617,"column":24,"offset":27274},"indent":[1,1,1]}}],"position":{"start":{"line":614,"column":1,"offset":27026},"end":{"line":617,"column":24,"offset":27274},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Cookie: Cookie parsing logic has been moved to\n","position":{"start":{"line":619,"column":3,"offset":27278},"end":{"line":620,"column":3,"offset":27327},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Cookie\\SetCookie::fromString","position":{"start":{"line":620,"column":3,"offset":27327},"end":{"line":620,"column":44,"offset":27368},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":620,"column":44,"offset":27368},"end":{"line":620,"column":45,"offset":27369},"indent":[]}}],"position":{"start":{"line":619,"column":3,"offset":27278},"end":{"line":620,"column":45,"offset":27369},"indent":[3]}}],"position":{"start":{"line":619,"column":1,"offset":27276},"end":{"line":620,"column":45,"offset":27369},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Message: Message parsing logic for both requests and responses has been moved\nto ","position":{"start":{"line":621,"column":3,"offset":27372},"end":{"line":622,"column":6,"offset":27455},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Message\\MessageFactory::fromMessage","position":{"start":{"line":622,"column":6,"offset":27455},"end":{"line":622,"column":54,"offset":27503},"indent":[]}},{"type":"text","value":". Message parsing is only\nused in debugging or deserializing messages, so it doesn't make sense for\nGuzzle as a library to add this level of complexity to parsing messages.","position":{"start":{"line":622,"column":54,"offset":27503},"end":{"line":624,"column":75,"offset":27679},"indent":[3,3]}}],"position":{"start":{"line":621,"column":3,"offset":27372},"end":{"line":624,"column":75,"offset":27679},"indent":[3,3,3]}}],"position":{"start":{"line":621,"column":1,"offset":27370},"end":{"line":624,"column":75,"offset":27679},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"UriTemplate: URI template parsing has been moved to\n","position":{"start":{"line":625,"column":3,"offset":27682},"end":{"line":626,"column":3,"offset":27736},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\UriTemplate","position":{"start":{"line":626,"column":3,"offset":27736},"end":{"line":626,"column":27,"offset":27760},"indent":[]}},{"type":"text","value":". The Guzzle library will automatically use the PECL\nURI template library if it is installed.","position":{"start":{"line":626,"column":27,"offset":27760},"end":{"line":627,"column":43,"offset":27855},"indent":[3]}}],"position":{"start":{"line":625,"column":3,"offset":27682},"end":{"line":627,"column":43,"offset":27855},"indent":[3,3]}}],"position":{"start":{"line":625,"column":1,"offset":27680},"end":{"line":627,"column":43,"offset":27855},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Url: URL parsing is now performed in ","position":{"start":{"line":628,"column":3,"offset":27858},"end":{"line":628,"column":40,"offset":27895},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Url::fromString","position":{"start":{"line":628,"column":40,"offset":27895},"end":{"line":628,"column":68,"offset":27923},"indent":[]}},{"type":"text","value":" (previously\nit was ","position":{"start":{"line":628,"column":68,"offset":27923},"end":{"line":629,"column":10,"offset":27945},"indent":[3]}},{"type":"inlineCode","value":"Guzzle\\Http\\Url::factory()","position":{"start":{"line":629,"column":10,"offset":27945},"end":{"line":629,"column":38,"offset":27973},"indent":[]}},{"type":"text","value":"). If custom URL parsing is necessary,\nthen developers are free to subclass ","position":{"start":{"line":629,"column":38,"offset":27973},"end":{"line":630,"column":40,"offset":28051},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Url","position":{"start":{"line":630,"column":40,"offset":28051},"end":{"line":630,"column":56,"offset":28067},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":630,"column":56,"offset":28067},"end":{"line":630,"column":57,"offset":28068},"indent":[]}}],"position":{"start":{"line":628,"column":3,"offset":27858},"end":{"line":630,"column":57,"offset":28068},"indent":[3,3]}}],"position":{"start":{"line":628,"column":1,"offset":27856},"end":{"line":630,"column":57,"offset":28068},"indent":[1,1]}}],"position":{"start":{"line":619,"column":1,"offset":27276},"end":{"line":630,"column":57,"offset":28068},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Plugin","position":{"start":{"line":632,"column":4,"offset":28073},"end":{"line":632,"column":10,"offset":28079},"indent":[]}}],"position":{"start":{"line":632,"column":1,"offset":28070},"end":{"line":632,"column":10,"offset":28079},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":634,"column":1,"offset":28081},"end":{"line":634,"column":5,"offset":28085},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Plugin","position":{"start":{"line":634,"column":5,"offset":28085},"end":{"line":634,"column":20,"offset":28100},"indent":[]}},{"type":"text","value":" namespace has been renamed to ","position":{"start":{"line":634,"column":20,"offset":28100},"end":{"line":634,"column":51,"offset":28131},"indent":[]}},{"type":"inlineCode","value":"GuzzleHttp\\Subscriber","position":{"start":{"line":634,"column":51,"offset":28131},"end":{"line":634,"column":74,"offset":28154},"indent":[]}},{"type":"text","value":".\nSeveral plugins are shipping with the core Guzzle library under this namespace.","position":{"start":{"line":634,"column":74,"offset":28154},"end":{"line":635,"column":80,"offset":28235},"indent":[1]}}],"position":{"start":{"line":634,"column":1,"offset":28081},"end":{"line":635,"column":80,"offset":28235},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\Cookie","position":{"start":{"line":637,"column":3,"offset":28239},"end":{"line":637,"column":33,"offset":28269},"indent":[]}},{"type":"text","value":": Replaces the old CookiePlugin. Cookie jar\ncode has moved to ","position":{"start":{"line":637,"column":33,"offset":28269},"end":{"line":638,"column":21,"offset":28333},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Cookie","position":{"start":{"line":638,"column":21,"offset":28333},"end":{"line":638,"column":40,"offset":28352},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":638,"column":40,"offset":28352},"end":{"line":638,"column":41,"offset":28353},"indent":[]}}],"position":{"start":{"line":637,"column":3,"offset":28239},"end":{"line":638,"column":41,"offset":28353},"indent":[3]}}],"position":{"start":{"line":637,"column":1,"offset":28237},"end":{"line":638,"column":41,"offset":28353},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\History","position":{"start":{"line":639,"column":3,"offset":28356},"end":{"line":639,"column":34,"offset":28387},"indent":[]}},{"type":"text","value":": Replaces the old HistoryPlugin.","position":{"start":{"line":639,"column":34,"offset":28387},"end":{"line":639,"column":67,"offset":28420},"indent":[]}}],"position":{"start":{"line":639,"column":3,"offset":28356},"end":{"line":639,"column":67,"offset":28420},"indent":[]}}],"position":{"start":{"line":639,"column":1,"offset":28354},"end":{"line":639,"column":67,"offset":28420},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\HttpError","position":{"start":{"line":640,"column":3,"offset":28423},"end":{"line":640,"column":36,"offset":28456},"indent":[]}},{"type":"text","value":": Throws errors when a bad HTTP response is\nreceived.","position":{"start":{"line":640,"column":36,"offset":28456},"end":{"line":641,"column":12,"offset":28511},"indent":[3]}}],"position":{"start":{"line":640,"column":3,"offset":28423},"end":{"line":641,"column":12,"offset":28511},"indent":[3]}}],"position":{"start":{"line":640,"column":1,"offset":28421},"end":{"line":641,"column":12,"offset":28511},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\Mock","position":{"start":{"line":642,"column":3,"offset":28514},"end":{"line":642,"column":31,"offset":28542},"indent":[]}},{"type":"text","value":": Replaces the old MockPlugin.","position":{"start":{"line":642,"column":31,"offset":28542},"end":{"line":642,"column":61,"offset":28572},"indent":[]}}],"position":{"start":{"line":642,"column":3,"offset":28514},"end":{"line":642,"column":61,"offset":28572},"indent":[]}}],"position":{"start":{"line":642,"column":1,"offset":28512},"end":{"line":642,"column":61,"offset":28572},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\Prepare","position":{"start":{"line":643,"column":3,"offset":28575},"end":{"line":643,"column":34,"offset":28606},"indent":[]}},{"type":"text","value":": Prepares the body of a request just before\nsending. This subscriber is attached to all requests by default.","position":{"start":{"line":643,"column":34,"offset":28606},"end":{"line":644,"column":67,"offset":28717},"indent":[3]}}],"position":{"start":{"line":643,"column":3,"offset":28575},"end":{"line":644,"column":67,"offset":28717},"indent":[3]}}],"position":{"start":{"line":643,"column":1,"offset":28573},"end":{"line":644,"column":67,"offset":28717},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\Redirect","position":{"start":{"line":645,"column":3,"offset":28720},"end":{"line":645,"column":35,"offset":28752},"indent":[]}},{"type":"text","value":": Replaces the RedirectPlugin.","position":{"start":{"line":645,"column":35,"offset":28752},"end":{"line":645,"column":65,"offset":28782},"indent":[]}}],"position":{"start":{"line":645,"column":3,"offset":28720},"end":{"line":645,"column":65,"offset":28782},"indent":[]}}],"position":{"start":{"line":645,"column":1,"offset":28718},"end":{"line":645,"column":65,"offset":28782},"indent":[]}}],"position":{"start":{"line":637,"column":1,"offset":28237},"end":{"line":645,"column":65,"offset":28782},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The following plugins have been removed (third-parties are free to re-implement\nthese if needed):","position":{"start":{"line":647,"column":1,"offset":28784},"end":{"line":648,"column":18,"offset":28881},"indent":[1]}}],"position":{"start":{"line":647,"column":1,"offset":28784},"end":{"line":648,"column":18,"offset":28881},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Plugin\\Async","position":{"start":{"line":650,"column":3,"offset":28885},"end":{"line":650,"column":28,"offset":28910},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":650,"column":28,"offset":28910},"end":{"line":650,"column":46,"offset":28928},"indent":[]}}],"position":{"start":{"line":650,"column":3,"offset":28885},"end":{"line":650,"column":46,"offset":28928},"indent":[]}}],"position":{"start":{"line":650,"column":1,"offset":28883},"end":{"line":650,"column":46,"offset":28928},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Plugin\\CurlAuth","position":{"start":{"line":651,"column":3,"offset":28931},"end":{"line":651,"column":31,"offset":28959},"indent":[]}},{"type":"text","value":" has been removed.","position":{"start":{"line":651,"column":31,"offset":28959},"end":{"line":651,"column":49,"offset":28977},"indent":[]}}],"position":{"start":{"line":651,"column":3,"offset":28931},"end":{"line":651,"column":49,"offset":28977},"indent":[]}}],"position":{"start":{"line":651,"column":1,"offset":28929},"end":{"line":651,"column":49,"offset":28977},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Plugin\\ErrorResponse\\ErrorResponsePlugin","position":{"start":{"line":652,"column":3,"offset":28980},"end":{"line":652,"column":56,"offset":29033},"indent":[]}},{"type":"text","value":" has been removed. This\nfunctionality should instead be implemented with event listeners that occur\nafter normal response parsing occurs in the guzzle/command package.","position":{"start":{"line":652,"column":56,"offset":29033},"end":{"line":654,"column":70,"offset":29204},"indent":[3,3]}}],"position":{"start":{"line":652,"column":3,"offset":28980},"end":{"line":654,"column":70,"offset":29204},"indent":[3,3]}}],"position":{"start":{"line":652,"column":1,"offset":28978},"end":{"line":654,"column":70,"offset":29204},"indent":[1,1]}}],"position":{"start":{"line":650,"column":1,"offset":28883},"end":{"line":654,"column":70,"offset":29204},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The following plugins are not part of the core Guzzle package, but are provided\nin separate repositories:","position":{"start":{"line":656,"column":1,"offset":29206},"end":{"line":657,"column":26,"offset":29311},"indent":[1]}}],"position":{"start":{"line":656,"column":1,"offset":29206},"end":{"line":657,"column":26,"offset":29311},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\Plugin\\BackoffPlugin","position":{"start":{"line":659,"column":3,"offset":29315},"end":{"line":659,"column":37,"offset":29349},"indent":[]}},{"type":"text","value":" has been rewritten to be much simpler\nto build custom retry policies using simple functions rather than various\nchained classes. See: ","position":{"start":{"line":659,"column":37,"offset":29349},"end":{"line":661,"column":25,"offset":29488},"indent":[3,3]}},{"type":"link","title":null,"url":"https://github.com/guzzle/retry-subscriber","children":[{"type":"text","value":"https://github.com/guzzle/retry-subscriber","position":{"start":{"line":661,"column":25,"offset":29488},"end":{"line":661,"column":67,"offset":29530},"indent":[]}}],"position":{"start":{"line":661,"column":25,"offset":29488},"end":{"line":661,"column":67,"offset":29530},"indent":[]}}],"position":{"start":{"line":659,"column":3,"offset":29315},"end":{"line":661,"column":67,"offset":29530},"indent":[3,3]}}],"position":{"start":{"line":659,"column":1,"offset":29313},"end":{"line":661,"column":67,"offset":29530},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\Plugin\\Cache\\CachePlugin","position":{"start":{"line":662,"column":3,"offset":29533},"end":{"line":662,"column":41,"offset":29571},"indent":[]}},{"type":"text","value":" has moved to\n","position":{"start":{"line":662,"column":41,"offset":29571},"end":{"line":663,"column":3,"offset":29587},"indent":[3]}},{"type":"link","title":null,"url":"https://github.com/guzzle/cache-subscriber","children":[{"type":"text","value":"https://github.com/guzzle/cache-subscriber","position":{"start":{"line":663,"column":3,"offset":29587},"end":{"line":663,"column":45,"offset":29629},"indent":[]}}],"position":{"start":{"line":663,"column":3,"offset":29587},"end":{"line":663,"column":45,"offset":29629},"indent":[]}}],"position":{"start":{"line":662,"column":3,"offset":29533},"end":{"line":663,"column":45,"offset":29629},"indent":[3]}}],"position":{"start":{"line":662,"column":1,"offset":29531},"end":{"line":663,"column":45,"offset":29629},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\Plugin\\Log\\LogPlugin","position":{"start":{"line":664,"column":3,"offset":29632},"end":{"line":664,"column":37,"offset":29666},"indent":[]}},{"type":"text","value":" has moved to\n","position":{"start":{"line":664,"column":37,"offset":29666},"end":{"line":665,"column":3,"offset":29682},"indent":[3]}},{"type":"link","title":null,"url":"https://github.com/guzzle/log-subscriber","children":[{"type":"text","value":"https://github.com/guzzle/log-subscriber","position":{"start":{"line":665,"column":3,"offset":29682},"end":{"line":665,"column":43,"offset":29722},"indent":[]}}],"position":{"start":{"line":665,"column":3,"offset":29682},"end":{"line":665,"column":43,"offset":29722},"indent":[]}}],"position":{"start":{"line":664,"column":3,"offset":29632},"end":{"line":665,"column":43,"offset":29722},"indent":[3]}}],"position":{"start":{"line":664,"column":1,"offset":29630},"end":{"line":665,"column":43,"offset":29722},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\Plugin\\Md5\\Md5Plugin","position":{"start":{"line":666,"column":3,"offset":29725},"end":{"line":666,"column":37,"offset":29759},"indent":[]}},{"type":"text","value":" has moved to\n","position":{"start":{"line":666,"column":37,"offset":29759},"end":{"line":667,"column":3,"offset":29775},"indent":[3]}},{"type":"link","title":null,"url":"https://github.com/guzzle/message-integrity-subscriber","children":[{"type":"text","value":"https://github.com/guzzle/message-integrity-subscriber","position":{"start":{"line":667,"column":3,"offset":29775},"end":{"line":667,"column":57,"offset":29829},"indent":[]}}],"position":{"start":{"line":667,"column":3,"offset":29775},"end":{"line":667,"column":57,"offset":29829},"indent":[]}}],"position":{"start":{"line":666,"column":3,"offset":29725},"end":{"line":667,"column":57,"offset":29829},"indent":[3]}}],"position":{"start":{"line":666,"column":1,"offset":29723},"end":{"line":667,"column":57,"offset":29829},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\Plugin\\Mock\\MockPlugin","position":{"start":{"line":668,"column":3,"offset":29832},"end":{"line":668,"column":39,"offset":29868},"indent":[]}},{"type":"text","value":" has moved to\n","position":{"start":{"line":668,"column":39,"offset":29868},"end":{"line":669,"column":3,"offset":29884},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Subscriber\\MockSubscriber","position":{"start":{"line":669,"column":3,"offset":29884},"end":{"line":669,"column":41,"offset":29922},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":669,"column":41,"offset":29922},"end":{"line":669,"column":42,"offset":29923},"indent":[]}}],"position":{"start":{"line":668,"column":3,"offset":29832},"end":{"line":669,"column":42,"offset":29923},"indent":[3]}}],"position":{"start":{"line":668,"column":1,"offset":29830},"end":{"line":669,"column":42,"offset":29923},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\Plugin\\Oauth\\OauthPlugin","position":{"start":{"line":670,"column":3,"offset":29926},"end":{"line":670,"column":41,"offset":29964},"indent":[]}},{"type":"text","value":" has moved to\n","position":{"start":{"line":670,"column":41,"offset":29964},"end":{"line":671,"column":3,"offset":29980},"indent":[3]}},{"type":"link","title":null,"url":"https://github.com/guzzle/oauth-subscriber","children":[{"type":"text","value":"https://github.com/guzzle/oauth-subscriber","position":{"start":{"line":671,"column":3,"offset":29980},"end":{"line":671,"column":45,"offset":30022},"indent":[]}}],"position":{"start":{"line":671,"column":3,"offset":29980},"end":{"line":671,"column":45,"offset":30022},"indent":[]}}],"position":{"start":{"line":670,"column":3,"offset":29926},"end":{"line":671,"column":45,"offset":30022},"indent":[3]}}],"position":{"start":{"line":670,"column":1,"offset":29924},"end":{"line":671,"column":45,"offset":30022},"indent":[1]}}],"position":{"start":{"line":659,"column":1,"offset":29313},"end":{"line":671,"column":45,"offset":30022},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Service","position":{"start":{"line":673,"column":4,"offset":30027},"end":{"line":673,"column":11,"offset":30034},"indent":[]}}],"position":{"start":{"line":673,"column":1,"offset":30024},"end":{"line":673,"column":11,"offset":30034},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The service description layer of Guzzle has moved into two separate packages:","position":{"start":{"line":675,"column":1,"offset":30036},"end":{"line":675,"column":78,"offset":30113},"indent":[]}}],"position":{"start":{"line":675,"column":1,"offset":30036},"end":{"line":675,"column":78,"offset":30113},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/guzzle/command","children":[{"type":"text","value":"https://github.com/guzzle/command","position":{"start":{"line":677,"column":3,"offset":30117},"end":{"line":677,"column":36,"offset":30150},"indent":[]}}],"position":{"start":{"line":677,"column":3,"offset":30117},"end":{"line":677,"column":36,"offset":30150},"indent":[]}},{"type":"text","value":" Provides a high level abstraction over web\nservices by representing web service operations using commands.","position":{"start":{"line":677,"column":36,"offset":30150},"end":{"line":678,"column":66,"offset":30259},"indent":[3]}}],"position":{"start":{"line":677,"column":3,"offset":30117},"end":{"line":678,"column":66,"offset":30259},"indent":[3]}}],"position":{"start":{"line":677,"column":1,"offset":30115},"end":{"line":678,"column":66,"offset":30259},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/guzzle/guzzle-services","children":[{"type":"text","value":"https://github.com/guzzle/guzzle-services","position":{"start":{"line":679,"column":3,"offset":30262},"end":{"line":679,"column":44,"offset":30303},"indent":[]}}],"position":{"start":{"line":679,"column":3,"offset":30262},"end":{"line":679,"column":44,"offset":30303},"indent":[]}},{"type":"text","value":" Provides an implementation of\nguzzle/command that provides request serialization and response parsing using\nGuzzle service descriptions.","position":{"start":{"line":679,"column":44,"offset":30303},"end":{"line":681,"column":31,"offset":30444},"indent":[3,3]}}],"position":{"start":{"line":679,"column":3,"offset":30262},"end":{"line":681,"column":31,"offset":30444},"indent":[3,3]}}],"position":{"start":{"line":679,"column":1,"offset":30260},"end":{"line":681,"column":31,"offset":30444},"indent":[1,1]}}],"position":{"start":{"line":677,"column":1,"offset":30115},"end":{"line":681,"column":31,"offset":30444},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Stream","position":{"start":{"line":683,"column":4,"offset":30449},"end":{"line":683,"column":10,"offset":30455},"indent":[]}}],"position":{"start":{"line":683,"column":1,"offset":30446},"end":{"line":683,"column":10,"offset":30455},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Stream have moved to a separate package available at\n","position":{"start":{"line":685,"column":1,"offset":30457},"end":{"line":686,"column":1,"offset":30510},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/guzzle/streams","children":[{"type":"text","value":"https://github.com/guzzle/streams","position":{"start":{"line":686,"column":1,"offset":30510},"end":{"line":686,"column":34,"offset":30543},"indent":[]}}],"position":{"start":{"line":686,"column":1,"offset":30510},"end":{"line":686,"column":34,"offset":30543},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":686,"column":34,"offset":30543},"end":{"line":686,"column":35,"offset":30544},"indent":[]}}],"position":{"start":{"line":685,"column":1,"offset":30457},"end":{"line":686,"column":35,"offset":30544},"indent":[1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Stream\\StreamInterface","position":{"start":{"line":688,"column":1,"offset":30546},"end":{"line":688,"column":32,"offset":30577},"indent":[]}},{"type":"text","value":" has been given a large update to cleanly take\non the responsibilities of ","position":{"start":{"line":688,"column":32,"offset":30577},"end":{"line":689,"column":28,"offset":30651},"indent":[1]}},{"type":"inlineCode","value":"Guzzle\\Http\\EntityBody","position":{"start":{"line":689,"column":28,"offset":30651},"end":{"line":689,"column":52,"offset":30675},"indent":[]}},{"type":"text","value":" and\n","position":{"start":{"line":689,"column":52,"offset":30675},"end":{"line":690,"column":1,"offset":30680},"indent":[1]}},{"type":"inlineCode","value":"Guzzle\\Http\\EntityBodyInterface","position":{"start":{"line":690,"column":1,"offset":30680},"end":{"line":690,"column":34,"offset":30713},"indent":[]}},{"type":"text","value":" now that they have been removed. The number\nof methods implemented by the ","position":{"start":{"line":690,"column":34,"offset":30713},"end":{"line":691,"column":31,"offset":30788},"indent":[1]}},{"type":"inlineCode","value":"StreamInterface","position":{"start":{"line":691,"column":31,"offset":30788},"end":{"line":691,"column":48,"offset":30805},"indent":[]}},{"type":"text","value":" has been drastically reduced to\nallow developers to more easily extend and decorate stream behavior.","position":{"start":{"line":691,"column":48,"offset":30805},"end":{"line":692,"column":69,"offset":30906},"indent":[1]}}],"position":{"start":{"line":688,"column":1,"offset":30546},"end":{"line":692,"column":69,"offset":30906},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Removed methods from StreamInterface","position":{"start":{"line":694,"column":4,"offset":30911},"end":{"line":694,"column":40,"offset":30947},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":30908},"end":{"line":694,"column":40,"offset":30947},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"getStream","position":{"start":{"line":696,"column":3,"offset":30951},"end":{"line":696,"column":14,"offset":30962},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":696,"column":14,"offset":30962},"end":{"line":696,"column":19,"offset":30967},"indent":[]}},{"type":"inlineCode","value":"setStream","position":{"start":{"line":696,"column":19,"offset":30967},"end":{"line":696,"column":30,"offset":30978},"indent":[]}},{"type":"text","value":" have been removed to better encapsulate streams.","position":{"start":{"line":696,"column":30,"offset":30978},"end":{"line":696,"column":79,"offset":31027},"indent":[]}}],"position":{"start":{"line":696,"column":3,"offset":30951},"end":{"line":696,"column":79,"offset":31027},"indent":[]}}],"position":{"start":{"line":696,"column":1,"offset":30949},"end":{"line":696,"column":79,"offset":31027},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"getMetadata","position":{"start":{"line":697,"column":3,"offset":31030},"end":{"line":697,"column":16,"offset":31043},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":697,"column":16,"offset":31043},"end":{"line":697,"column":21,"offset":31048},"indent":[]}},{"type":"inlineCode","value":"setMetadata","position":{"start":{"line":697,"column":21,"offset":31048},"end":{"line":697,"column":34,"offset":31061},"indent":[]}},{"type":"text","value":" have been removed in favor of\n","position":{"start":{"line":697,"column":34,"offset":31061},"end":{"line":698,"column":3,"offset":31094},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\MetadataStreamInterface","position":{"start":{"line":698,"column":3,"offset":31094},"end":{"line":698,"column":46,"offset":31137},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":698,"column":46,"offset":31137},"end":{"line":698,"column":47,"offset":31138},"indent":[]}}],"position":{"start":{"line":697,"column":3,"offset":31030},"end":{"line":698,"column":47,"offset":31138},"indent":[3]}}],"position":{"start":{"line":697,"column":1,"offset":31028},"end":{"line":698,"column":47,"offset":31138},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"getWrapper","position":{"start":{"line":699,"column":3,"offset":31141},"end":{"line":699,"column":15,"offset":31153},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":699,"column":15,"offset":31153},"end":{"line":699,"column":17,"offset":31155},"indent":[]}},{"type":"inlineCode","value":"getWrapperData","position":{"start":{"line":699,"column":17,"offset":31155},"end":{"line":699,"column":33,"offset":31171},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":699,"column":33,"offset":31171},"end":{"line":699,"column":35,"offset":31173},"indent":[]}},{"type":"inlineCode","value":"getStreamType","position":{"start":{"line":699,"column":35,"offset":31173},"end":{"line":699,"column":50,"offset":31188},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":699,"column":50,"offset":31188},"end":{"line":699,"column":56,"offset":31194},"indent":[]}},{"type":"inlineCode","value":"getUri","position":{"start":{"line":699,"column":56,"offset":31194},"end":{"line":699,"column":64,"offset":31202},"indent":[]}},{"type":"text","value":" have all been\nremoved. This data is accessible when\nusing streams that implement ","position":{"start":{"line":699,"column":64,"offset":31202},"end":{"line":701,"column":32,"offset":31288},"indent":[3,3]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\MetadataStreamInterface","position":{"start":{"line":701,"column":32,"offset":31288},"end":{"line":701,"column":75,"offset":31331},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":701,"column":75,"offset":31331},"end":{"line":701,"column":76,"offset":31332},"indent":[]}}],"position":{"start":{"line":699,"column":3,"offset":31141},"end":{"line":701,"column":76,"offset":31332},"indent":[3,3]}}],"position":{"start":{"line":699,"column":1,"offset":31139},"end":{"line":701,"column":76,"offset":31332},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"rewind","position":{"start":{"line":702,"column":3,"offset":31335},"end":{"line":702,"column":11,"offset":31343},"indent":[]}},{"type":"text","value":" has been removed. Use ","position":{"start":{"line":702,"column":11,"offset":31343},"end":{"line":702,"column":34,"offset":31366},"indent":[]}},{"type":"inlineCode","value":"seek(0)","position":{"start":{"line":702,"column":34,"offset":31366},"end":{"line":702,"column":43,"offset":31375},"indent":[]}},{"type":"text","value":" for a similar behavior.","position":{"start":{"line":702,"column":43,"offset":31375},"end":{"line":702,"column":67,"offset":31399},"indent":[]}}],"position":{"start":{"line":702,"column":3,"offset":31335},"end":{"line":702,"column":67,"offset":31399},"indent":[]}}],"position":{"start":{"line":702,"column":1,"offset":31333},"end":{"line":702,"column":67,"offset":31399},"indent":[]}}],"position":{"start":{"line":696,"column":1,"offset":30949},"end":{"line":702,"column":67,"offset":31399},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Renamed methods","position":{"start":{"line":704,"column":4,"offset":31404},"end":{"line":704,"column":19,"offset":31419},"indent":[]}}],"position":{"start":{"line":704,"column":1,"offset":31401},"end":{"line":704,"column":19,"offset":31419},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"detachStream","position":{"start":{"line":706,"column":3,"offset":31423},"end":{"line":706,"column":17,"offset":31437},"indent":[]}},{"type":"text","value":" has been renamed to ","position":{"start":{"line":706,"column":17,"offset":31437},"end":{"line":706,"column":38,"offset":31458},"indent":[]}},{"type":"inlineCode","value":"detach","position":{"start":{"line":706,"column":38,"offset":31458},"end":{"line":706,"column":46,"offset":31466},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":706,"column":46,"offset":31466},"end":{"line":706,"column":47,"offset":31467},"indent":[]}}],"position":{"start":{"line":706,"column":3,"offset":31423},"end":{"line":706,"column":47,"offset":31467},"indent":[]}}],"position":{"start":{"line":706,"column":1,"offset":31421},"end":{"line":706,"column":47,"offset":31467},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"feof","position":{"start":{"line":707,"column":3,"offset":31470},"end":{"line":707,"column":9,"offset":31476},"indent":[]}},{"type":"text","value":" has been renamed to ","position":{"start":{"line":707,"column":9,"offset":31476},"end":{"line":707,"column":30,"offset":31497},"indent":[]}},{"type":"inlineCode","value":"eof","position":{"start":{"line":707,"column":30,"offset":31497},"end":{"line":707,"column":35,"offset":31502},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":707,"column":35,"offset":31502},"end":{"line":707,"column":36,"offset":31503},"indent":[]}}],"position":{"start":{"line":707,"column":3,"offset":31470},"end":{"line":707,"column":36,"offset":31503},"indent":[]}}],"position":{"start":{"line":707,"column":1,"offset":31468},"end":{"line":707,"column":36,"offset":31503},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"ftell","position":{"start":{"line":708,"column":3,"offset":31506},"end":{"line":708,"column":10,"offset":31513},"indent":[]}},{"type":"text","value":" has been renamed to ","position":{"start":{"line":708,"column":10,"offset":31513},"end":{"line":708,"column":31,"offset":31534},"indent":[]}},{"type":"inlineCode","value":"tell","position":{"start":{"line":708,"column":31,"offset":31534},"end":{"line":708,"column":37,"offset":31540},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":708,"column":37,"offset":31540},"end":{"line":708,"column":38,"offset":31541},"indent":[]}}],"position":{"start":{"line":708,"column":3,"offset":31506},"end":{"line":708,"column":38,"offset":31541},"indent":[]}}],"position":{"start":{"line":708,"column":1,"offset":31504},"end":{"line":708,"column":38,"offset":31541},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"readLine","position":{"start":{"line":709,"column":3,"offset":31544},"end":{"line":709,"column":13,"offset":31554},"indent":[]}},{"type":"text","value":" has moved from an instance method to a static class method of\n","position":{"start":{"line":709,"column":13,"offset":31554},"end":{"line":710,"column":3,"offset":31619},"indent":[3]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\Stream","position":{"start":{"line":710,"column":3,"offset":31619},"end":{"line":710,"column":29,"offset":31645},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":710,"column":29,"offset":31645},"end":{"line":710,"column":30,"offset":31646},"indent":[]}}],"position":{"start":{"line":709,"column":3,"offset":31544},"end":{"line":710,"column":30,"offset":31646},"indent":[3]}}],"position":{"start":{"line":709,"column":1,"offset":31542},"end":{"line":710,"column":30,"offset":31646},"indent":[1]}}],"position":{"start":{"line":706,"column":1,"offset":31421},"end":{"line":710,"column":30,"offset":31646},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Metadata streams","position":{"start":{"line":712,"column":4,"offset":31651},"end":{"line":712,"column":20,"offset":31667},"indent":[]}}],"position":{"start":{"line":712,"column":1,"offset":31648},"end":{"line":712,"column":20,"offset":31667},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"GuzzleHttp\\Stream\\MetadataStreamInterface","position":{"start":{"line":714,"column":1,"offset":31669},"end":{"line":714,"column":44,"offset":31712},"indent":[]}},{"type":"text","value":" has been added to denote streams\nthat contain additional metadata accessible via ","position":{"start":{"line":714,"column":44,"offset":31712},"end":{"line":715,"column":49,"offset":31794},"indent":[1]}},{"type":"inlineCode","value":"getMetadata()","position":{"start":{"line":715,"column":49,"offset":31794},"end":{"line":715,"column":64,"offset":31809},"indent":[]}},{"type":"text","value":".\n","position":{"start":{"line":715,"column":64,"offset":31809},"end":{"line":716,"column":1,"offset":31811},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\StreamInterface::getMetadata","position":{"start":{"line":716,"column":1,"offset":31811},"end":{"line":716,"column":49,"offset":31859},"indent":[]}},{"type":"text","value":" and\n","position":{"start":{"line":716,"column":49,"offset":31859},"end":{"line":717,"column":1,"offset":31864},"indent":[1]}},{"type":"inlineCode","value":"GuzzleHttp\\Stream\\StreamInterface::setMetadata","position":{"start":{"line":717,"column":1,"offset":31864},"end":{"line":717,"column":49,"offset":31912},"indent":[]}},{"type":"text","value":" have been removed.","position":{"start":{"line":717,"column":49,"offset":31912},"end":{"line":717,"column":68,"offset":31931},"indent":[]}}],"position":{"start":{"line":714,"column":1,"offset":31669},"end":{"line":717,"column":68,"offset":31931},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"StreamRequestFactory","position":{"start":{"line":719,"column":4,"offset":31936},"end":{"line":719,"column":24,"offset":31956},"indent":[]}}],"position":{"start":{"line":719,"column":1,"offset":31933},"end":{"line":719,"column":24,"offset":31956},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The entire concept of the StreamRequestFactory has been removed. The way this\nwas used in Guzzle 3 broke the actual interface of sending streaming requests\n(instead of getting back a Response, you got a StreamInterface). Streaming\nPHP requests are now implemented through the ","position":{"start":{"line":721,"column":1,"offset":31958},"end":{"line":724,"column":46,"offset":32234},"indent":[1,1,1]}},{"type":"inlineCode","value":"GuzzleHttp\\Adapter\\StreamAdapter","position":{"start":{"line":724,"column":46,"offset":32234},"end":{"line":724,"column":80,"offset":32268},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":724,"column":80,"offset":32268},"end":{"line":724,"column":81,"offset":32269},"indent":[]}}],"position":{"start":{"line":721,"column":1,"offset":31958},"end":{"line":724,"column":81,"offset":32269},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.6 to 3.7","position":{"start":{"line":726,"column":1,"offset":32271},"end":{"line":726,"column":11,"offset":32281},"indent":[]}}],"position":{"start":{"line":726,"column":1,"offset":32271},"end":{"line":727,"column":11,"offset":32292},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Deprecations","position":{"start":{"line":729,"column":5,"offset":32298},"end":{"line":729,"column":17,"offset":32310},"indent":[]}}],"position":{"start":{"line":729,"column":1,"offset":32294},"end":{"line":729,"column":17,"offset":32310},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can now enable E_USER_DEPRECATED warnings to see if you are using any deprecated methods.:","position":{"start":{"line":731,"column":3,"offset":32314},"end":{"line":731,"column":97,"offset":32408},"indent":[]}}],"position":{"start":{"line":731,"column":3,"offset":32314},"end":{"line":731,"column":97,"offset":32408},"indent":[]}}],"position":{"start":{"line":731,"column":1,"offset":32312},"end":{"line":731,"column":97,"offset":32408},"indent":[]}}],"position":{"start":{"line":731,"column":1,"offset":32312},"end":{"line":731,"column":97,"offset":32408},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"\\Guzzle\\Common\\Version::$emitWarnings = true;","position":{"start":{"line":733,"column":1,"offset":32410},"end":{"line":735,"column":4,"offset":32466},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The following APIs and options have been marked as deprecated:","position":{"start":{"line":737,"column":1,"offset":32468},"end":{"line":737,"column":63,"offset":32530},"indent":[]}}],"position":{"start":{"line":737,"column":1,"offset":32468},"end":{"line":737,"column":63,"offset":32530},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":739,"column":3,"offset":32534},"end":{"line":739,"column":10,"offset":32541},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\Request::isResponseBodyRepeatable()","position":{"start":{"line":739,"column":10,"offset":32541},"end":{"line":739,"column":67,"offset":32598},"indent":[]}},{"type":"text","value":" as deprecated. Use ","position":{"start":{"line":739,"column":67,"offset":32598},"end":{"line":739,"column":87,"offset":32618},"indent":[]}},{"type":"inlineCode","value":"$request->getResponseBody()->isRepeatable()","position":{"start":{"line":739,"column":87,"offset":32618},"end":{"line":739,"column":132,"offset":32663},"indent":[]}},{"type":"text","value":" instead.","position":{"start":{"line":739,"column":132,"offset":32663},"end":{"line":739,"column":141,"offset":32672},"indent":[]}}],"position":{"start":{"line":739,"column":3,"offset":32534},"end":{"line":739,"column":141,"offset":32672},"indent":[]}}],"position":{"start":{"line":739,"column":1,"offset":32532},"end":{"line":739,"column":141,"offset":32672},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":740,"column":3,"offset":32675},"end":{"line":740,"column":10,"offset":32682},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\Request::canCache()","position":{"start":{"line":740,"column":10,"offset":32682},"end":{"line":740,"column":51,"offset":32723},"indent":[]}},{"type":"text","value":" as deprecated. Use ","position":{"start":{"line":740,"column":51,"offset":32723},"end":{"line":740,"column":71,"offset":32743},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Plugin\\Cache\\DefaultCanCacheStrategy->canCacheRequest()","position":{"start":{"line":740,"column":71,"offset":32743},"end":{"line":740,"column":135,"offset":32807},"indent":[]}},{"type":"text","value":" instead.","position":{"start":{"line":740,"column":135,"offset":32807},"end":{"line":740,"column":144,"offset":32816},"indent":[]}}],"position":{"start":{"line":740,"column":3,"offset":32675},"end":{"line":740,"column":144,"offset":32816},"indent":[]}}],"position":{"start":{"line":740,"column":1,"offset":32673},"end":{"line":740,"column":144,"offset":32816},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":741,"column":3,"offset":32819},"end":{"line":741,"column":10,"offset":32826},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\Request::canCache()","position":{"start":{"line":741,"column":10,"offset":32826},"end":{"line":741,"column":51,"offset":32867},"indent":[]}},{"type":"text","value":" as deprecated. Use ","position":{"start":{"line":741,"column":51,"offset":32867},"end":{"line":741,"column":71,"offset":32887},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Plugin\\Cache\\DefaultCanCacheStrategy->canCacheRequest()","position":{"start":{"line":741,"column":71,"offset":32887},"end":{"line":741,"column":135,"offset":32951},"indent":[]}},{"type":"text","value":" instead.","position":{"start":{"line":741,"column":135,"offset":32951},"end":{"line":741,"column":144,"offset":32960},"indent":[]}}],"position":{"start":{"line":741,"column":3,"offset":32819},"end":{"line":741,"column":144,"offset":32960},"indent":[]}}],"position":{"start":{"line":741,"column":1,"offset":32817},"end":{"line":741,"column":144,"offset":32960},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":742,"column":3,"offset":32963},"end":{"line":742,"column":10,"offset":32970},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\Request::setIsRedirect()","position":{"start":{"line":742,"column":10,"offset":32970},"end":{"line":742,"column":56,"offset":33016},"indent":[]}},{"type":"text","value":" as deprecated. Use the HistoryPlugin instead.","position":{"start":{"line":742,"column":56,"offset":33016},"end":{"line":742,"column":102,"offset":33062},"indent":[]}}],"position":{"start":{"line":742,"column":3,"offset":32963},"end":{"line":742,"column":102,"offset":33062},"indent":[]}}],"position":{"start":{"line":742,"column":1,"offset":32961},"end":{"line":742,"column":102,"offset":33062},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":743,"column":3,"offset":33065},"end":{"line":743,"column":10,"offset":33072},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\Request::isRedirect()","position":{"start":{"line":743,"column":10,"offset":33072},"end":{"line":743,"column":53,"offset":33115},"indent":[]}},{"type":"text","value":" as deprecated. Use the HistoryPlugin instead.","position":{"start":{"line":743,"column":53,"offset":33115},"end":{"line":743,"column":99,"offset":33161},"indent":[]}}],"position":{"start":{"line":743,"column":3,"offset":33065},"end":{"line":743,"column":99,"offset":33161},"indent":[]}}],"position":{"start":{"line":743,"column":1,"offset":33063},"end":{"line":743,"column":99,"offset":33161},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":744,"column":3,"offset":33164},"end":{"line":744,"column":10,"offset":33171},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Cache\\CacheAdapterFactory::factory()","position":{"start":{"line":744,"column":10,"offset":33171},"end":{"line":744,"column":55,"offset":33216},"indent":[]}},{"type":"text","value":" as deprecated","position":{"start":{"line":744,"column":55,"offset":33216},"end":{"line":744,"column":69,"offset":33230},"indent":[]}}],"position":{"start":{"line":744,"column":3,"offset":33164},"end":{"line":744,"column":69,"offset":33230},"indent":[]}}],"position":{"start":{"line":744,"column":1,"offset":33162},"end":{"line":744,"column":69,"offset":33230},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":745,"column":3,"offset":33233},"end":{"line":745,"column":10,"offset":33240},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Service\\Client::enableMagicMethods()","position":{"start":{"line":745,"column":10,"offset":33240},"end":{"line":745,"column":55,"offset":33285},"indent":[]}},{"type":"text","value":" as deprecated. Magic methods can no longer be disabled on a Guzzle\\Service\\Client.","position":{"start":{"line":745,"column":55,"offset":33285},"end":{"line":745,"column":138,"offset":33368},"indent":[]}}],"position":{"start":{"line":745,"column":3,"offset":33233},"end":{"line":745,"column":138,"offset":33368},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":33231},"end":{"line":745,"column":138,"offset":33368},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":746,"column":3,"offset":33371},"end":{"line":746,"column":10,"offset":33378},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Parser\\Url\\UrlParser","position":{"start":{"line":746,"column":10,"offset":33378},"end":{"line":746,"column":39,"offset":33407},"indent":[]}},{"type":"text","value":" as deprecated. Just use PHP's ","position":{"start":{"line":746,"column":39,"offset":33407},"end":{"line":746,"column":70,"offset":33438},"indent":[]}},{"type":"inlineCode","value":"parse_url()","position":{"start":{"line":746,"column":70,"offset":33438},"end":{"line":746,"column":83,"offset":33451},"indent":[]}},{"type":"text","value":" and percent encode your UTF-8.","position":{"start":{"line":746,"column":83,"offset":33451},"end":{"line":746,"column":114,"offset":33482},"indent":[]}}],"position":{"start":{"line":746,"column":3,"offset":33371},"end":{"line":746,"column":114,"offset":33482},"indent":[]}}],"position":{"start":{"line":746,"column":1,"offset":33369},"end":{"line":746,"column":114,"offset":33482},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":747,"column":3,"offset":33485},"end":{"line":747,"column":10,"offset":33492},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Common\\Collection::inject()","position":{"start":{"line":747,"column":10,"offset":33492},"end":{"line":747,"column":46,"offset":33528},"indent":[]}},{"type":"text","value":" as deprecated.","position":{"start":{"line":747,"column":46,"offset":33528},"end":{"line":747,"column":61,"offset":33543},"indent":[]}}],"position":{"start":{"line":747,"column":3,"offset":33485},"end":{"line":747,"column":61,"offset":33543},"indent":[]}}],"position":{"start":{"line":747,"column":1,"offset":33483},"end":{"line":747,"column":61,"offset":33543},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":748,"column":3,"offset":33546},"end":{"line":748,"column":10,"offset":33553},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Plugin\\CurlAuth\\CurlAuthPlugin","position":{"start":{"line":748,"column":10,"offset":33553},"end":{"line":748,"column":49,"offset":33592},"indent":[]}},{"type":"text","value":" as deprecated. Use\n","position":{"start":{"line":748,"column":49,"offset":33592},"end":{"line":749,"column":3,"offset":33614},"indent":[3]}},{"type":"inlineCode","value":"$client->getConfig()->setPath('request.options/auth', array('user', 'pass', 'Basic|Digest|NTLM|Any'));","position":{"start":{"line":749,"column":3,"offset":33614},"end":{"line":749,"column":107,"offset":33718},"indent":[]}},{"type":"text","value":" or\n","position":{"start":{"line":749,"column":107,"offset":33718},"end":{"line":750,"column":3,"offset":33724},"indent":[3]}},{"type":"inlineCode","value":"$client->setDefaultOption('auth', array('user', 'pass', 'Basic|Digest|NTLM|Any'));","position":{"start":{"line":750,"column":3,"offset":33724},"end":{"line":750,"column":87,"offset":33808},"indent":[]}}],"position":{"start":{"line":748,"column":3,"offset":33546},"end":{"line":750,"column":87,"offset":33808},"indent":[3,3]}}],"position":{"start":{"line":748,"column":1,"offset":33544},"end":{"line":750,"column":87,"offset":33808},"indent":[1,1]}}],"position":{"start":{"line":739,"column":1,"offset":32532},"end":{"line":750,"column":87,"offset":33808},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"3.7 introduces ","position":{"start":{"line":752,"column":1,"offset":33810},"end":{"line":752,"column":16,"offset":33825},"indent":[]}},{"type":"inlineCode","value":"request.options","position":{"start":{"line":752,"column":16,"offset":33825},"end":{"line":752,"column":33,"offset":33842},"indent":[]}},{"type":"text","value":" as a parameter for a client configuration and as an optional argument to all creational\nrequest methods. When paired with a client's configuration settings, these options allow you to specify default settings\nfor various aspects of a request. Because these options make other previous configuration options redundant, several\nconfiguration options and methods of a client and AbstractCommand have been deprecated.","position":{"start":{"line":752,"column":33,"offset":33842},"end":{"line":755,"column":88,"offset":34256},"indent":[1,1,1]}}],"position":{"start":{"line":752,"column":1,"offset":33810},"end":{"line":755,"column":88,"offset":34256},"indent":[1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":757,"column":3,"offset":34260},"end":{"line":757,"column":10,"offset":34267},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Service\\Client::getDefaultHeaders()","position":{"start":{"line":757,"column":10,"offset":34267},"end":{"line":757,"column":54,"offset":34311},"indent":[]}},{"type":"text","value":" as deprecated. Use ","position":{"start":{"line":757,"column":54,"offset":34311},"end":{"line":757,"column":74,"offset":34331},"indent":[]}},{"type":"inlineCode","value":"$client->getDefaultOption('headers')","position":{"start":{"line":757,"column":74,"offset":34331},"end":{"line":757,"column":112,"offset":34369},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":757,"column":112,"offset":34369},"end":{"line":757,"column":113,"offset":34370},"indent":[]}}],"position":{"start":{"line":757,"column":3,"offset":34260},"end":{"line":757,"column":113,"offset":34370},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":34258},"end":{"line":757,"column":113,"offset":34370},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked ","position":{"start":{"line":758,"column":3,"offset":34373},"end":{"line":758,"column":10,"offset":34380},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Service\\Client::setDefaultHeaders()","position":{"start":{"line":758,"column":10,"offset":34380},"end":{"line":758,"column":54,"offset":34424},"indent":[]}},{"type":"text","value":" as deprecated. Use ","position":{"start":{"line":758,"column":54,"offset":34424},"end":{"line":758,"column":74,"offset":34444},"indent":[]}},{"type":"inlineCode","value":"$client->setDefaultOption('headers/{header_name}', 'value')","position":{"start":{"line":758,"column":74,"offset":34444},"end":{"line":758,"column":135,"offset":34505},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":758,"column":135,"offset":34505},"end":{"line":758,"column":136,"offset":34506},"indent":[]}}],"position":{"start":{"line":758,"column":3,"offset":34373},"end":{"line":758,"column":136,"offset":34506},"indent":[]}}],"position":{"start":{"line":758,"column":1,"offset":34371},"end":{"line":758,"column":136,"offset":34506},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked 'request.params' for ","position":{"start":{"line":759,"column":3,"offset":34509},"end":{"line":759,"column":31,"offset":34537},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Client","position":{"start":{"line":759,"column":31,"offset":34537},"end":{"line":759,"column":51,"offset":34557},"indent":[]}},{"type":"text","value":" as deprecated. Use ","position":{"start":{"line":759,"column":51,"offset":34557},"end":{"line":759,"column":71,"offset":34577},"indent":[]}},{"type":"inlineCode","value":"$client->setDefaultOption('params/{param_name}', 'value')","position":{"start":{"line":759,"column":71,"offset":34577},"end":{"line":759,"column":130,"offset":34636},"indent":[]}}],"position":{"start":{"line":759,"column":3,"offset":34509},"end":{"line":759,"column":130,"offset":34636},"indent":[]}}],"position":{"start":{"line":759,"column":1,"offset":34507},"end":{"line":759,"column":130,"offset":34636},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Marked 'command.headers', 'command.response_body' and 'command.on_complete' as deprecated for AbstractCommand. These will work through Guzzle 4.0","position":{"start":{"line":760,"column":3,"offset":34639},"end":{"line":760,"column":148,"offset":34784},"indent":[]}}],"position":{"start":{"line":760,"column":3,"offset":34639},"end":{"line":760,"column":148,"offset":34784},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  $command = $client->getCommand('foo', array(\n      'command.headers' => array('Test' => '123'),\n      'command.response_body' => '/path/to/file'\n  ));\n\n  // Should be changed to:\n\n  $command = $client->getCommand('foo', array(\n      'command.request_options' => array(\n          'headers' => array('Test' => '123'),\n          'save_as' => '/path/to/file'\n      )\n  ));","position":{"start":{"line":762,"column":3,"offset":34788},"end":{"line":774,"column":12,"offset":35222},"indent":[3,3,3,1,3,1,3,3,3,3,3,3]}}],"position":{"start":{"line":760,"column":1,"offset":34637},"end":{"line":774,"column":12,"offset":35222},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":757,"column":1,"offset":34258},"end":{"line":774,"column":12,"offset":35222},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Interface changes","position":{"start":{"line":776,"column":5,"offset":35228},"end":{"line":776,"column":22,"offset":35245},"indent":[]}}],"position":{"start":{"line":776,"column":1,"offset":35224},"end":{"line":776,"column":22,"offset":35245},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Additions and changes (you will need to update any implementations or subclasses you may have created):","position":{"start":{"line":778,"column":1,"offset":35247},"end":{"line":778,"column":104,"offset":35350},"indent":[]}}],"position":{"start":{"line":778,"column":1,"offset":35247},"end":{"line":778,"column":104,"offset":35350},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added an ","position":{"start":{"line":780,"column":3,"offset":35354},"end":{"line":780,"column":12,"offset":35363},"indent":[]}},{"type":"inlineCode","value":"$options","position":{"start":{"line":780,"column":12,"offset":35363},"end":{"line":780,"column":22,"offset":35373},"indent":[]}},{"type":"text","value":" argument to the end of the following methods of ","position":{"start":{"line":780,"column":22,"offset":35373},"end":{"line":780,"column":71,"offset":35422},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\ClientInterface","position":{"start":{"line":780,"column":71,"offset":35422},"end":{"line":780,"column":100,"offset":35451},"indent":[]}},{"type":"text","value":":\ncreateRequest, head, delete, put, patch, post, options, prepareRequest","position":{"start":{"line":780,"column":100,"offset":35451},"end":{"line":781,"column":73,"offset":35525},"indent":[3]}}],"position":{"start":{"line":780,"column":3,"offset":35354},"end":{"line":781,"column":73,"offset":35525},"indent":[3]}}],"position":{"start":{"line":780,"column":1,"offset":35352},"end":{"line":781,"column":73,"offset":35525},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added an ","position":{"start":{"line":782,"column":3,"offset":35528},"end":{"line":782,"column":12,"offset":35537},"indent":[]}},{"type":"inlineCode","value":"$options","position":{"start":{"line":782,"column":12,"offset":35537},"end":{"line":782,"column":22,"offset":35547},"indent":[]}},{"type":"text","value":" argument to the end of ","position":{"start":{"line":782,"column":22,"offset":35547},"end":{"line":782,"column":46,"offset":35571},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\Request\\RequestFactoryInterface::createRequest()","position":{"start":{"line":782,"column":46,"offset":35571},"end":{"line":782,"column":116,"offset":35641},"indent":[]}}],"position":{"start":{"line":782,"column":3,"offset":35528},"end":{"line":782,"column":116,"offset":35641},"indent":[]}}],"position":{"start":{"line":782,"column":1,"offset":35526},"end":{"line":782,"column":116,"offset":35641},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added an ","position":{"start":{"line":783,"column":3,"offset":35644},"end":{"line":783,"column":12,"offset":35653},"indent":[]}},{"type":"inlineCode","value":"applyOptions()","position":{"start":{"line":783,"column":12,"offset":35653},"end":{"line":783,"column":28,"offset":35669},"indent":[]}},{"type":"text","value":" method to ","position":{"start":{"line":783,"column":28,"offset":35669},"end":{"line":783,"column":39,"offset":35680},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\Request\\RequestFactoryInterface","position":{"start":{"line":783,"column":39,"offset":35680},"end":{"line":783,"column":92,"offset":35733},"indent":[]}}],"position":{"start":{"line":783,"column":3,"offset":35644},"end":{"line":783,"column":92,"offset":35733},"indent":[]}}],"position":{"start":{"line":783,"column":1,"offset":35642},"end":{"line":783,"column":92,"offset":35733},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Changed ","position":{"start":{"line":784,"column":3,"offset":35736},"end":{"line":784,"column":11,"offset":35744},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\ClientInterface::get($uri = null, $headers = null, $body = null)","position":{"start":{"line":784,"column":11,"offset":35744},"end":{"line":784,"column":89,"offset":35822},"indent":[]}},{"type":"text","value":" to\n","position":{"start":{"line":784,"column":89,"offset":35822},"end":{"line":785,"column":3,"offset":35828},"indent":[3]}},{"type":"inlineCode","value":"Guzzle\\Http\\ClientInterface::get($uri = null, $headers = null, $options = array())","position":{"start":{"line":785,"column":3,"offset":35828},"end":{"line":785,"column":87,"offset":35912},"indent":[]}},{"type":"text","value":". You can still pass in a\nresource, string, or EntityBody into the $options parameter to specify the download location of the response.","position":{"start":{"line":785,"column":87,"offset":35912},"end":{"line":786,"column":112,"offset":36049},"indent":[3]}}],"position":{"start":{"line":784,"column":3,"offset":35736},"end":{"line":786,"column":112,"offset":36049},"indent":[3,3]}}],"position":{"start":{"line":784,"column":1,"offset":35734},"end":{"line":786,"column":112,"offset":36049},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Changed ","position":{"start":{"line":787,"column":3,"offset":36052},"end":{"line":787,"column":11,"offset":36060},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Common\\Collection::__construct($data)","position":{"start":{"line":787,"column":11,"offset":36060},"end":{"line":787,"column":57,"offset":36106},"indent":[]}},{"type":"text","value":" to no longer accepts a null value for ","position":{"start":{"line":787,"column":57,"offset":36106},"end":{"line":787,"column":96,"offset":36145},"indent":[]}},{"type":"inlineCode","value":"$data","position":{"start":{"line":787,"column":96,"offset":36145},"end":{"line":787,"column":103,"offset":36152},"indent":[]}},{"type":"text","value":" but a\ndefault ","position":{"start":{"line":787,"column":103,"offset":36152},"end":{"line":788,"column":11,"offset":36169},"indent":[3]}},{"type":"inlineCode","value":"array()","position":{"start":{"line":788,"column":11,"offset":36169},"end":{"line":788,"column":20,"offset":36178},"indent":[]}}],"position":{"start":{"line":787,"column":3,"offset":36052},"end":{"line":788,"column":20,"offset":36178},"indent":[3]}}],"position":{"start":{"line":787,"column":1,"offset":36050},"end":{"line":788,"column":20,"offset":36178},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added ","position":{"start":{"line":789,"column":3,"offset":36181},"end":{"line":789,"column":9,"offset":36187},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Stream\\StreamInterface::isRepeatable","position":{"start":{"line":789,"column":9,"offset":36187},"end":{"line":789,"column":54,"offset":36232},"indent":[]}}],"position":{"start":{"line":789,"column":3,"offset":36181},"end":{"line":789,"column":54,"offset":36232},"indent":[]}}],"position":{"start":{"line":789,"column":1,"offset":36179},"end":{"line":789,"column":54,"offset":36232},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Made ","position":{"start":{"line":790,"column":3,"offset":36235},"end":{"line":790,"column":8,"offset":36240},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Client::expandTemplate","position":{"start":{"line":790,"column":8,"offset":36240},"end":{"line":790,"column":44,"offset":36276},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":790,"column":44,"offset":36276},"end":{"line":790,"column":49,"offset":36281},"indent":[]}},{"type":"inlineCode","value":"getUriTemplate","position":{"start":{"line":790,"column":49,"offset":36281},"end":{"line":790,"column":65,"offset":36297},"indent":[]}},{"type":"text","value":" protected methods.","position":{"start":{"line":790,"column":65,"offset":36297},"end":{"line":790,"column":84,"offset":36316},"indent":[]}}],"position":{"start":{"line":790,"column":3,"offset":36235},"end":{"line":790,"column":84,"offset":36316},"indent":[]}}],"position":{"start":{"line":790,"column":1,"offset":36233},"end":{"line":790,"column":84,"offset":36316},"indent":[]}}],"position":{"start":{"line":780,"column":1,"offset":35352},"end":{"line":790,"column":84,"offset":36316},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The following methods were removed from interfaces. All of these methods are still available in the concrete classes\nthat implement them, but you should update your code to use alternative methods:","position":{"start":{"line":792,"column":1,"offset":36318},"end":{"line":793,"column":81,"offset":36515},"indent":[1]}}],"position":{"start":{"line":792,"column":1,"offset":36318},"end":{"line":793,"column":81,"offset":36515},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":795,"column":3,"offset":36519},"end":{"line":795,"column":11,"offset":36527},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\ClientInterface::setDefaultHeaders(). Use\n","position":{"start":{"line":795,"column":11,"offset":36527},"end":{"line":796,"column":4,"offset":36585},"indent":[3]}},{"type":"text","value":"$client->getConfig()->setPath('request.options/headers/{header_name}', 'value')","position":{"start":{"line":796,"column":4,"offset":36585},"end":{"line":796,"column":83,"offset":36664},"indent":[]}},{"type":"inlineCode","value":". or\n","position":{"start":{"line":796,"column":83,"offset":36664},"end":{"line":797,"column":4,"offset":36673},"indent":[3]}},{"type":"text","value":"$client->getConfig()->setPath('request.options/headers', array('header_name' => 'value'))","position":{"start":{"line":797,"column":4,"offset":36673},"end":{"line":797,"column":93,"offset":36762},"indent":[]}},{"type":"inlineCode","value":"or","position":{"start":{"line":797,"column":93,"offset":36762},"end":{"line":798,"column":4,"offset":36770},"indent":[3]}},{"type":"text","value":"$client->setDefaultOption('headers/{header_name}', 'value')","position":{"start":{"line":798,"column":4,"offset":36770},"end":{"line":798,"column":63,"offset":36829},"indent":[]}},{"type":"inlineCode","value":". or\n","position":{"start":{"line":798,"column":63,"offset":36829},"end":{"line":799,"column":4,"offset":36838},"indent":[3]}},{"type":"text","value":"$client->setDefaultOption('headers', array('header_name' => 'value'))`.","position":{"start":{"line":799,"column":4,"offset":36838},"end":{"line":799,"column":75,"offset":36909},"indent":[]}}],"position":{"start":{"line":795,"column":3,"offset":36519},"end":{"line":799,"column":75,"offset":36909},"indent":[3,3,3,3]}}],"position":{"start":{"line":795,"column":1,"offset":36517},"end":{"line":799,"column":75,"offset":36909},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":800,"column":3,"offset":36912},"end":{"line":800,"column":11,"offset":36920},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\ClientInterface::getDefaultHeaders(). Use ","position":{"start":{"line":800,"column":11,"offset":36920},"end":{"line":800,"column":67,"offset":36976},"indent":[]}},{"type":"text","value":"$client->getConfig()->getPath('request.options/headers')`.","position":{"start":{"line":800,"column":67,"offset":36976},"end":{"line":800,"column":125,"offset":37034},"indent":[]}}],"position":{"start":{"line":800,"column":3,"offset":36912},"end":{"line":800,"column":125,"offset":37034},"indent":[]}}],"position":{"start":{"line":800,"column":1,"offset":36910},"end":{"line":800,"column":125,"offset":37034},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":801,"column":3,"offset":37037},"end":{"line":801,"column":11,"offset":37045},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\ClientInterface::expandTemplate()","position":{"start":{"line":801,"column":11,"offset":37045},"end":{"line":801,"column":58,"offset":37092},"indent":[]}},{"type":"text","value":". This is an implementation detail.","position":{"start":{"line":801,"column":58,"offset":37092},"end":{"line":801,"column":93,"offset":37127},"indent":[]}}],"position":{"start":{"line":801,"column":3,"offset":37037},"end":{"line":801,"column":93,"offset":37127},"indent":[]}}],"position":{"start":{"line":801,"column":1,"offset":37035},"end":{"line":801,"column":93,"offset":37127},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":802,"column":3,"offset":37130},"end":{"line":802,"column":11,"offset":37138},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\ClientInterface::setRequestFactory()","position":{"start":{"line":802,"column":11,"offset":37138},"end":{"line":802,"column":61,"offset":37188},"indent":[]}},{"type":"text","value":". This is an implementation detail.","position":{"start":{"line":802,"column":61,"offset":37188},"end":{"line":802,"column":96,"offset":37223},"indent":[]}}],"position":{"start":{"line":802,"column":3,"offset":37130},"end":{"line":802,"column":96,"offset":37223},"indent":[]}}],"position":{"start":{"line":802,"column":1,"offset":37128},"end":{"line":802,"column":96,"offset":37223},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":803,"column":3,"offset":37226},"end":{"line":803,"column":11,"offset":37234},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\ClientInterface::getCurlMulti()","position":{"start":{"line":803,"column":11,"offset":37234},"end":{"line":803,"column":56,"offset":37279},"indent":[]}},{"type":"text","value":". This is a very specific implementation detail.","position":{"start":{"line":803,"column":56,"offset":37279},"end":{"line":803,"column":104,"offset":37327},"indent":[]}}],"position":{"start":{"line":803,"column":3,"offset":37226},"end":{"line":803,"column":104,"offset":37327},"indent":[]}}],"position":{"start":{"line":803,"column":1,"offset":37224},"end":{"line":803,"column":104,"offset":37327},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":804,"column":3,"offset":37330},"end":{"line":804,"column":11,"offset":37338},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\RequestInterface::canCache","position":{"start":{"line":804,"column":11,"offset":37338},"end":{"line":804,"column":59,"offset":37386},"indent":[]}},{"type":"text","value":". Use the CachePlugin.","position":{"start":{"line":804,"column":59,"offset":37386},"end":{"line":804,"column":81,"offset":37408},"indent":[]}}],"position":{"start":{"line":804,"column":3,"offset":37330},"end":{"line":804,"column":81,"offset":37408},"indent":[]}}],"position":{"start":{"line":804,"column":1,"offset":37328},"end":{"line":804,"column":81,"offset":37408},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":805,"column":3,"offset":37411},"end":{"line":805,"column":11,"offset":37419},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\RequestInterface::setIsRedirect","position":{"start":{"line":805,"column":11,"offset":37419},"end":{"line":805,"column":64,"offset":37472},"indent":[]}},{"type":"text","value":". Use the HistoryPlugin.","position":{"start":{"line":805,"column":64,"offset":37472},"end":{"line":805,"column":88,"offset":37496},"indent":[]}}],"position":{"start":{"line":805,"column":3,"offset":37411},"end":{"line":805,"column":88,"offset":37496},"indent":[]}}],"position":{"start":{"line":805,"column":1,"offset":37409},"end":{"line":805,"column":88,"offset":37496},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed ","position":{"start":{"line":806,"column":3,"offset":37499},"end":{"line":806,"column":11,"offset":37507},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\RequestInterface::isRedirect","position":{"start":{"line":806,"column":11,"offset":37507},"end":{"line":806,"column":61,"offset":37557},"indent":[]}},{"type":"text","value":". Use the HistoryPlugin.","position":{"start":{"line":806,"column":61,"offset":37557},"end":{"line":806,"column":85,"offset":37581},"indent":[]}}],"position":{"start":{"line":806,"column":3,"offset":37499},"end":{"line":806,"column":85,"offset":37581},"indent":[]}}],"position":{"start":{"line":806,"column":1,"offset":37497},"end":{"line":806,"column":85,"offset":37581},"indent":[]}}],"position":{"start":{"line":795,"column":1,"offset":36517},"end":{"line":806,"column":85,"offset":37581},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Cache plugin breaking changes","position":{"start":{"line":808,"column":5,"offset":37587},"end":{"line":808,"column":34,"offset":37616},"indent":[]}}],"position":{"start":{"line":808,"column":1,"offset":37583},"end":{"line":808,"column":34,"offset":37616},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"CacheKeyProviderInterface and DefaultCacheKeyProvider are no longer used. All of this logic is handled in a\nCacheStorageInterface. These two objects and interface will be removed in a future version.","position":{"start":{"line":810,"column":3,"offset":37620},"end":{"line":811,"column":94,"offset":37821},"indent":[3]}}],"position":{"start":{"line":810,"column":3,"offset":37620},"end":{"line":811,"column":94,"offset":37821},"indent":[3]}}],"position":{"start":{"line":810,"column":1,"offset":37618},"end":{"line":811,"column":94,"offset":37821},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Always setting X-cache headers on cached responses","position":{"start":{"line":812,"column":3,"offset":37824},"end":{"line":812,"column":53,"offset":37874},"indent":[]}}],"position":{"start":{"line":812,"column":3,"offset":37824},"end":{"line":812,"column":53,"offset":37874},"indent":[]}}],"position":{"start":{"line":812,"column":1,"offset":37822},"end":{"line":812,"column":53,"offset":37874},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Default cache TTLs are now handled by the CacheStorageInterface of a CachePlugin","position":{"start":{"line":813,"column":3,"offset":37877},"end":{"line":813,"column":83,"offset":37957},"indent":[]}}],"position":{"start":{"line":813,"column":3,"offset":37877},"end":{"line":813,"column":83,"offset":37957},"indent":[]}}],"position":{"start":{"line":813,"column":1,"offset":37875},"end":{"line":813,"column":83,"offset":37957},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"CacheStorageInterface::cache($key, Response $response, $ttl = null)","position":{"start":{"line":814,"column":3,"offset":37960},"end":{"line":814,"column":72,"offset":38029},"indent":[]}},{"type":"text","value":" has changed to ","position":{"start":{"line":814,"column":72,"offset":38029},"end":{"line":814,"column":88,"offset":38045},"indent":[]}},{"type":"inlineCode","value":"cache(RequestInterface\n$request, Response $response);","position":{"start":{"line":814,"column":88,"offset":38045},"end":{"line":815,"column":34,"offset":38102},"indent":[3]}}],"position":{"start":{"line":814,"column":3,"offset":37960},"end":{"line":815,"column":34,"offset":38102},"indent":[3]}}],"position":{"start":{"line":814,"column":1,"offset":37958},"end":{"line":815,"column":34,"offset":38102},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"CacheStorageInterface::fetch($key)","position":{"start":{"line":816,"column":3,"offset":38105},"end":{"line":816,"column":39,"offset":38141},"indent":[]}},{"type":"text","value":" has changed to ","position":{"start":{"line":816,"column":39,"offset":38141},"end":{"line":816,"column":55,"offset":38157},"indent":[]}},{"type":"inlineCode","value":"fetch(RequestInterface $request);","position":{"start":{"line":816,"column":55,"offset":38157},"end":{"line":816,"column":90,"offset":38192},"indent":[]}}],"position":{"start":{"line":816,"column":3,"offset":38105},"end":{"line":816,"column":90,"offset":38192},"indent":[]}}],"position":{"start":{"line":816,"column":1,"offset":38103},"end":{"line":816,"column":90,"offset":38192},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"CacheStorageInterface::delete($key)","position":{"start":{"line":817,"column":3,"offset":38195},"end":{"line":817,"column":40,"offset":38232},"indent":[]}},{"type":"text","value":" has changed to ","position":{"start":{"line":817,"column":40,"offset":38232},"end":{"line":817,"column":56,"offset":38248},"indent":[]}},{"type":"inlineCode","value":"delete(RequestInterface $request);","position":{"start":{"line":817,"column":56,"offset":38248},"end":{"line":817,"column":92,"offset":38284},"indent":[]}}],"position":{"start":{"line":817,"column":3,"offset":38195},"end":{"line":817,"column":92,"offset":38284},"indent":[]}}],"position":{"start":{"line":817,"column":1,"offset":38193},"end":{"line":817,"column":92,"offset":38284},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added ","position":{"start":{"line":818,"column":3,"offset":38287},"end":{"line":818,"column":9,"offset":38293},"indent":[]}},{"type":"inlineCode","value":"CacheStorageInterface::purge($url)","position":{"start":{"line":818,"column":9,"offset":38293},"end":{"line":818,"column":45,"offset":38329},"indent":[]}}],"position":{"start":{"line":818,"column":3,"offset":38287},"end":{"line":818,"column":45,"offset":38329},"indent":[]}}],"position":{"start":{"line":818,"column":1,"offset":38285},"end":{"line":818,"column":45,"offset":38329},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"DefaultRevalidation::__construct(CacheKeyProviderInterface $cacheKey, CacheStorageInterface $cache, CachePlugin\n$plugin)","position":{"start":{"line":819,"column":3,"offset":38332},"end":{"line":820,"column":12,"offset":38456},"indent":[3]}},{"type":"text","value":" has changed to ","position":{"start":{"line":820,"column":12,"offset":38456},"end":{"line":820,"column":28,"offset":38472},"indent":[]}},{"type":"inlineCode","value":"DefaultRevalidation::__construct(CacheStorageInterface $cache,\nCanCacheStrategyInterface $canCache = null)","position":{"start":{"line":820,"column":28,"offset":38472},"end":{"line":821,"column":47,"offset":38582},"indent":[3]}}],"position":{"start":{"line":819,"column":3,"offset":38332},"end":{"line":821,"column":47,"offset":38582},"indent":[3,3]}}],"position":{"start":{"line":819,"column":1,"offset":38330},"end":{"line":821,"column":47,"offset":38582},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added ","position":{"start":{"line":822,"column":3,"offset":38585},"end":{"line":822,"column":9,"offset":38591},"indent":[]}},{"type":"inlineCode","value":"RevalidationInterface::shouldRevalidate(RequestInterface $request, Response $response)","position":{"start":{"line":822,"column":9,"offset":38591},"end":{"line":822,"column":97,"offset":38679},"indent":[]}}],"position":{"start":{"line":822,"column":3,"offset":38585},"end":{"line":822,"column":97,"offset":38679},"indent":[]}}],"position":{"start":{"line":822,"column":1,"offset":38583},"end":{"line":822,"column":97,"offset":38679},"indent":[]}}],"position":{"start":{"line":810,"column":1,"offset":37618},"end":{"line":822,"column":97,"offset":38679},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.5 to 3.6","position":{"start":{"line":824,"column":1,"offset":38681},"end":{"line":824,"column":11,"offset":38691},"indent":[]}}],"position":{"start":{"line":824,"column":1,"offset":38681},"end":{"line":825,"column":11,"offset":38702},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Mixed casing of headers are now forced to be a single consistent casing across all values for that header.","position":{"start":{"line":827,"column":3,"offset":38706},"end":{"line":827,"column":109,"offset":38812},"indent":[]}}],"position":{"start":{"line":827,"column":3,"offset":38706},"end":{"line":827,"column":109,"offset":38812},"indent":[]}}],"position":{"start":{"line":827,"column":1,"offset":38704},"end":{"line":827,"column":109,"offset":38812},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Messages internally use a HeaderCollection object to delegate handling case-insensitive header resolution","position":{"start":{"line":828,"column":3,"offset":38815},"end":{"line":828,"column":108,"offset":38920},"indent":[]}}],"position":{"start":{"line":828,"column":3,"offset":38815},"end":{"line":828,"column":108,"offset":38920},"indent":[]}}],"position":{"start":{"line":828,"column":1,"offset":38813},"end":{"line":828,"column":108,"offset":38920},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed the whole changedHeader() function system of messages because all header changes now go through addHeader().\nFor example, setHeader() first removes the header using unset on a HeaderCollection and then calls addHeader().\nKeeping the Host header and URL host in sync is now handled by overriding the addHeader method in Request.","position":{"start":{"line":829,"column":3,"offset":38923},"end":{"line":831,"column":109,"offset":39262},"indent":[3,3]}}],"position":{"start":{"line":829,"column":3,"offset":38923},"end":{"line":831,"column":109,"offset":39262},"indent":[3,3]}}],"position":{"start":{"line":829,"column":1,"offset":38921},"end":{"line":831,"column":109,"offset":39262},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Specific header implementations can be created for complex headers. When a message creates a header, it uses a\nHeaderFactory which can map specific headers to specific header classes. There is now a Link header and\nCacheControl header implementation.","position":{"start":{"line":832,"column":3,"offset":39265},"end":{"line":834,"column":38,"offset":39519},"indent":[3,3]}}],"position":{"start":{"line":832,"column":3,"offset":39265},"end":{"line":834,"column":38,"offset":39519},"indent":[3,3]}}],"position":{"start":{"line":832,"column":1,"offset":39263},"end":{"line":834,"column":38,"offset":39519},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Moved getLinks() from Response to just be used on a Link header object.","position":{"start":{"line":835,"column":3,"offset":39522},"end":{"line":835,"column":74,"offset":39593},"indent":[]}}],"position":{"start":{"line":835,"column":3,"offset":39522},"end":{"line":835,"column":74,"offset":39593},"indent":[]}}],"position":{"start":{"line":835,"column":1,"offset":39520},"end":{"line":835,"column":74,"offset":39593},"indent":[]}}],"position":{"start":{"line":827,"column":1,"offset":38704},"end":{"line":835,"column":74,"offset":39593},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you previously relied on Guzzle\\Http\\Message\\Header::raw(), then you will need to update your code to use the\nHeaderInterface (e.g. toArray(), getAll(), etc.).","position":{"start":{"line":837,"column":1,"offset":39595},"end":{"line":838,"column":50,"offset":39757},"indent":[1]}}],"position":{"start":{"line":837,"column":1,"offset":39595},"end":{"line":838,"column":50,"offset":39757},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Interface changes","position":{"start":{"line":840,"column":5,"offset":39763},"end":{"line":840,"column":22,"offset":39780},"indent":[]}}],"position":{"start":{"line":840,"column":1,"offset":39759},"end":{"line":840,"column":22,"offset":39780},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed from interface: Guzzle\\Http\\ClientInterface::setUriTemplate","position":{"start":{"line":842,"column":3,"offset":39784},"end":{"line":842,"column":70,"offset":39851},"indent":[]}}],"position":{"start":{"line":842,"column":3,"offset":39784},"end":{"line":842,"column":70,"offset":39851},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":39782},"end":{"line":842,"column":70,"offset":39851},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed from interface: Guzzle\\Http\\ClientInterface::setCurlMulti()","position":{"start":{"line":843,"column":3,"offset":39854},"end":{"line":843,"column":70,"offset":39921},"indent":[]}}],"position":{"start":{"line":843,"column":3,"offset":39854},"end":{"line":843,"column":70,"offset":39921},"indent":[]}}],"position":{"start":{"line":843,"column":1,"offset":39852},"end":{"line":843,"column":70,"offset":39921},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed Guzzle\\Http\\Message\\Request::receivedRequestHeader() and implemented this functionality in\nGuzzle\\Http\\Curl\\RequestMediator","position":{"start":{"line":844,"column":3,"offset":39924},"end":{"line":845,"column":35,"offset":40057},"indent":[3]}}],"position":{"start":{"line":844,"column":3,"offset":39924},"end":{"line":845,"column":35,"offset":40057},"indent":[3]}}],"position":{"start":{"line":844,"column":1,"offset":39922},"end":{"line":845,"column":35,"offset":40057},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed the optional $asString parameter from MessageInterface::getHeader(). Just cast the header to a string.","position":{"start":{"line":846,"column":3,"offset":40060},"end":{"line":846,"column":113,"offset":40170},"indent":[]}}],"position":{"start":{"line":846,"column":3,"offset":40060},"end":{"line":846,"column":113,"offset":40170},"indent":[]}}],"position":{"start":{"line":846,"column":1,"offset":40058},"end":{"line":846,"column":113,"offset":40170},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed the optional $tryChunkedTransfer option from Guzzle\\Http\\Message\\EntityEnclosingRequestInterface","position":{"start":{"line":847,"column":3,"offset":40173},"end":{"line":847,"column":107,"offset":40277},"indent":[]}}],"position":{"start":{"line":847,"column":3,"offset":40173},"end":{"line":847,"column":107,"offset":40277},"indent":[]}}],"position":{"start":{"line":847,"column":1,"offset":40171},"end":{"line":847,"column":107,"offset":40277},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed the $asObjects argument from Guzzle\\Http\\Message\\MessageInterface::getHeaders()","position":{"start":{"line":848,"column":3,"offset":40280},"end":{"line":848,"column":90,"offset":40367},"indent":[]}}],"position":{"start":{"line":848,"column":3,"offset":40280},"end":{"line":848,"column":90,"offset":40367},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":40278},"end":{"line":848,"column":90,"offset":40367},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":39782},"end":{"line":848,"column":90,"offset":40367},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Removed deprecated functions","position":{"start":{"line":850,"column":5,"offset":40373},"end":{"line":850,"column":33,"offset":40401},"indent":[]}}],"position":{"start":{"line":850,"column":1,"offset":40369},"end":{"line":850,"column":33,"offset":40401},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed Guzzle\\Parser\\ParserRegister::get(). Use getParser()","position":{"start":{"line":852,"column":3,"offset":40405},"end":{"line":852,"column":63,"offset":40465},"indent":[]}}],"position":{"start":{"line":852,"column":3,"offset":40405},"end":{"line":852,"column":63,"offset":40465},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":40403},"end":{"line":852,"column":63,"offset":40465},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed Guzzle\\Parser\\ParserRegister::set(). Use registerParser().","position":{"start":{"line":853,"column":3,"offset":40468},"end":{"line":853,"column":69,"offset":40534},"indent":[]}}],"position":{"start":{"line":853,"column":3,"offset":40468},"end":{"line":853,"column":69,"offset":40534},"indent":[]}}],"position":{"start":{"line":853,"column":1,"offset":40466},"end":{"line":853,"column":69,"offset":40534},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":40403},"end":{"line":853,"column":69,"offset":40534},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Deprecations","position":{"start":{"line":855,"column":5,"offset":40540},"end":{"line":855,"column":17,"offset":40552},"indent":[]}}],"position":{"start":{"line":855,"column":1,"offset":40536},"end":{"line":855,"column":17,"offset":40552},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The ability to case-insensitively search for header values","position":{"start":{"line":857,"column":3,"offset":40556},"end":{"line":857,"column":61,"offset":40614},"indent":[]}}],"position":{"start":{"line":857,"column":3,"offset":40556},"end":{"line":857,"column":61,"offset":40614},"indent":[]}}],"position":{"start":{"line":857,"column":1,"offset":40554},"end":{"line":857,"column":61,"offset":40614},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Guzzle\\Http\\Message\\Header::hasExactHeader","position":{"start":{"line":858,"column":3,"offset":40617},"end":{"line":858,"column":45,"offset":40659},"indent":[]}}],"position":{"start":{"line":858,"column":3,"offset":40617},"end":{"line":858,"column":45,"offset":40659},"indent":[]}}],"position":{"start":{"line":858,"column":1,"offset":40615},"end":{"line":858,"column":45,"offset":40659},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Guzzle\\Http\\Message\\Header::raw. Use getAll()","position":{"start":{"line":859,"column":3,"offset":40662},"end":{"line":859,"column":48,"offset":40707},"indent":[]}}],"position":{"start":{"line":859,"column":3,"offset":40662},"end":{"line":859,"column":48,"offset":40707},"indent":[]}}],"position":{"start":{"line":859,"column":1,"offset":40660},"end":{"line":859,"column":48,"offset":40707},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated cache control specific methods on Guzzle\\Http\\Message\\AbstractMessage. Use the CacheControl header object\ninstead.","position":{"start":{"line":860,"column":3,"offset":40710},"end":{"line":861,"column":11,"offset":40837},"indent":[3]}}],"position":{"start":{"line":860,"column":3,"offset":40710},"end":{"line":861,"column":11,"offset":40837},"indent":[3]}}],"position":{"start":{"line":860,"column":1,"offset":40708},"end":{"line":861,"column":11,"offset":40837},"indent":[1]}}],"position":{"start":{"line":857,"column":1,"offset":40554},"end":{"line":861,"column":11,"offset":40837},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Other changes","position":{"start":{"line":863,"column":5,"offset":40843},"end":{"line":863,"column":18,"offset":40856},"indent":[]}}],"position":{"start":{"line":863,"column":1,"offset":40839},"end":{"line":863,"column":18,"offset":40856},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All response header helper functions return a string rather than mixing Header objects and strings inconsistently","position":{"start":{"line":865,"column":3,"offset":40860},"end":{"line":865,"column":116,"offset":40973},"indent":[]}}],"position":{"start":{"line":865,"column":3,"offset":40860},"end":{"line":865,"column":116,"offset":40973},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":40858},"end":{"line":865,"column":116,"offset":40973},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed cURL blacklist support. This is no longer necessary now that Expect, Accept, etc. are managed by Guzzle\ndirectly via interfaces","position":{"start":{"line":866,"column":3,"offset":40976},"end":{"line":867,"column":26,"offset":41113},"indent":[3]}}],"position":{"start":{"line":866,"column":3,"offset":40976},"end":{"line":867,"column":26,"offset":41113},"indent":[3]}}],"position":{"start":{"line":866,"column":1,"offset":40974},"end":{"line":867,"column":26,"offset":41113},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed the injecting of a request object onto a response object. The methods to get and set a request still exist\nbut are a no-op until removed.","position":{"start":{"line":868,"column":3,"offset":41116},"end":{"line":869,"column":33,"offset":41263},"indent":[3]}}],"position":{"start":{"line":868,"column":3,"offset":41116},"end":{"line":869,"column":33,"offset":41263},"indent":[3]}}],"position":{"start":{"line":868,"column":1,"offset":41114},"end":{"line":869,"column":33,"offset":41263},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Most classes that used to require a ","position":{"start":{"line":870,"column":3,"offset":41266},"end":{"line":870,"column":39,"offset":41302},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Service\\Command\\CommandInterface","position":{"start":{"line":870,"column":39,"offset":41302},"end":{"line":870,"column":80,"offset":41343},"indent":[]}},{"type":"text","value":" typehint now request a\n","position":{"start":{"line":870,"column":80,"offset":41343},"end":{"line":871,"column":3,"offset":41369},"indent":[3]}},{"type":"inlineCode","value":"Guzzle\\Service\\Command\\ArrayCommandInterface","position":{"start":{"line":871,"column":3,"offset":41369},"end":{"line":871,"column":49,"offset":41415},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":871,"column":49,"offset":41415},"end":{"line":871,"column":50,"offset":41416},"indent":[]}}],"position":{"start":{"line":870,"column":3,"offset":41266},"end":{"line":871,"column":50,"offset":41416},"indent":[3]}}],"position":{"start":{"line":870,"column":1,"offset":41264},"end":{"line":871,"column":50,"offset":41416},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added ","position":{"start":{"line":872,"column":3,"offset":41419},"end":{"line":872,"column":9,"offset":41425},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Message\\RequestInterface::startResponse()","position":{"start":{"line":872,"column":9,"offset":41425},"end":{"line":872,"column":64,"offset":41480},"indent":[]}},{"type":"text","value":" to the RequestInterface to handle injecting a response\non a request while the request is still being transferred","position":{"start":{"line":872,"column":64,"offset":41480},"end":{"line":873,"column":60,"offset":41595},"indent":[3]}}],"position":{"start":{"line":872,"column":3,"offset":41419},"end":{"line":873,"column":60,"offset":41595},"indent":[3]}}],"position":{"start":{"line":872,"column":1,"offset":41417},"end":{"line":873,"column":60,"offset":41595},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Service\\Command\\CommandInterface","position":{"start":{"line":874,"column":3,"offset":41598},"end":{"line":874,"column":44,"offset":41639},"indent":[]}},{"type":"text","value":" now extends from ToArrayInterface and ArrayAccess","position":{"start":{"line":874,"column":44,"offset":41639},"end":{"line":874,"column":94,"offset":41689},"indent":[]}}],"position":{"start":{"line":874,"column":3,"offset":41598},"end":{"line":874,"column":94,"offset":41689},"indent":[]}}],"position":{"start":{"line":874,"column":1,"offset":41596},"end":{"line":874,"column":94,"offset":41689},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":40858},"end":{"line":874,"column":94,"offset":41689},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.3 to 3.4","position":{"start":{"line":876,"column":1,"offset":41691},"end":{"line":876,"column":11,"offset":41701},"indent":[]}}],"position":{"start":{"line":876,"column":1,"offset":41691},"end":{"line":877,"column":11,"offset":41712},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Base URLs of a client now follow the rules of ","position":{"start":{"line":879,"column":1,"offset":41714},"end":{"line":879,"column":47,"offset":41760},"indent":[]}},{"type":"link","title":null,"url":"https://datatracker.ietf.org/doc/html/rfc3986#section-5.2.2","children":[{"type":"text","value":"https://datatracker.ietf.org/doc/html/rfc3986#section-5.2.2","position":{"start":{"line":879,"column":47,"offset":41760},"end":{"line":879,"column":106,"offset":41819},"indent":[]}}],"position":{"start":{"line":879,"column":47,"offset":41760},"end":{"line":879,"column":106,"offset":41819},"indent":[]}},{"type":"text","value":" when merging URLs.","position":{"start":{"line":879,"column":106,"offset":41819},"end":{"line":879,"column":125,"offset":41838},"indent":[]}}],"position":{"start":{"line":879,"column":1,"offset":41714},"end":{"line":879,"column":125,"offset":41838},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.2 to 3.3","position":{"start":{"line":881,"column":1,"offset":41840},"end":{"line":881,"column":11,"offset":41850},"indent":[]}}],"position":{"start":{"line":881,"column":1,"offset":41840},"end":{"line":882,"column":11,"offset":41861},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Response::getEtag() quote stripping removed","position":{"start":{"line":884,"column":5,"offset":41867},"end":{"line":884,"column":48,"offset":41910},"indent":[]}}],"position":{"start":{"line":884,"column":1,"offset":41863},"end":{"line":884,"column":48,"offset":41910},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Http\\Message\\Response::getEtag()","position":{"start":{"line":886,"column":1,"offset":41912},"end":{"line":886,"column":42,"offset":41953},"indent":[]}},{"type":"text","value":" no longer strips quotes around the ETag response header","position":{"start":{"line":886,"column":42,"offset":41953},"end":{"line":886,"column":98,"offset":42009},"indent":[]}}],"position":{"start":{"line":886,"column":1,"offset":41912},"end":{"line":886,"column":98,"offset":42009},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Removed ","position":{"start":{"line":888,"column":5,"offset":42015},"end":{"line":888,"column":13,"offset":42023},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Utils","position":{"start":{"line":888,"column":13,"offset":42023},"end":{"line":888,"column":32,"offset":42042},"indent":[]}}],"position":{"start":{"line":888,"column":1,"offset":42011},"end":{"line":888,"column":32,"offset":42042},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":890,"column":1,"offset":42044},"end":{"line":890,"column":5,"offset":42048},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Utils","position":{"start":{"line":890,"column":5,"offset":42048},"end":{"line":890,"column":24,"offset":42067},"indent":[]}},{"type":"text","value":" class was removed. This class was only used for testing.","position":{"start":{"line":890,"column":24,"offset":42067},"end":{"line":890,"column":81,"offset":42124},"indent":[]}}],"position":{"start":{"line":890,"column":1,"offset":42044},"end":{"line":890,"column":81,"offset":42124},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Stream wrapper and type","position":{"start":{"line":892,"column":5,"offset":42130},"end":{"line":892,"column":28,"offset":42153},"indent":[]}}],"position":{"start":{"line":892,"column":1,"offset":42126},"end":{"line":892,"column":28,"offset":42153},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Guzzle\\Stream\\Stream::getWrapper()","position":{"start":{"line":894,"column":1,"offset":42155},"end":{"line":894,"column":37,"offset":42191},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":894,"column":37,"offset":42191},"end":{"line":894,"column":42,"offset":42196},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Stream\\Stream::getStreamType()","position":{"start":{"line":894,"column":42,"offset":42196},"end":{"line":894,"column":81,"offset":42235},"indent":[]}},{"type":"text","value":" are no longer converted to lowercase.","position":{"start":{"line":894,"column":81,"offset":42235},"end":{"line":894,"column":119,"offset":42273},"indent":[]}}],"position":{"start":{"line":894,"column":1,"offset":42155},"end":{"line":894,"column":119,"offset":42273},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"curl.emit_io became emit_io","position":{"start":{"line":896,"column":5,"offset":42279},"end":{"line":896,"column":32,"offset":42306},"indent":[]}}],"position":{"start":{"line":896,"column":1,"offset":42275},"end":{"line":896,"column":32,"offset":42306},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Emitting IO events from a RequestMediator is now a parameter that must be set in a request's curl options using the\n'emit_io' key. This was previously set under a request's parameters using 'curl.emit_io'","position":{"start":{"line":898,"column":1,"offset":42308},"end":{"line":899,"column":89,"offset":42512},"indent":[1]}}],"position":{"start":{"line":898,"column":1,"offset":42308},"end":{"line":899,"column":89,"offset":42512},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.1 to 3.2","position":{"start":{"line":901,"column":1,"offset":42514},"end":{"line":901,"column":11,"offset":42524},"indent":[]}}],"position":{"start":{"line":901,"column":1,"offset":42514},"end":{"line":902,"column":11,"offset":42535},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"CurlMulti is no longer reused globally","position":{"start":{"line":904,"column":5,"offset":42541},"end":{"line":904,"column":43,"offset":42579},"indent":[]}}],"position":{"start":{"line":904,"column":1,"offset":42537},"end":{"line":904,"column":43,"offset":42579},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Before 3.2, the same CurlMulti object was reused globally for each client. This can cause issue where plugins added\nto a single client can pollute requests dispatched from other clients.","position":{"start":{"line":906,"column":1,"offset":42581},"end":{"line":907,"column":71,"offset":42767},"indent":[1]}}],"position":{"start":{"line":906,"column":1,"offset":42581},"end":{"line":907,"column":71,"offset":42767},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If you still wish to reuse the same CurlMulti object with each client, then you can add a listener to the\nServiceBuilder's ","position":{"start":{"line":909,"column":1,"offset":42769},"end":{"line":910,"column":18,"offset":42892},"indent":[1]}},{"type":"inlineCode","value":"service_builder.create_client","position":{"start":{"line":910,"column":18,"offset":42892},"end":{"line":910,"column":49,"offset":42923},"indent":[]}},{"type":"text","value":" event to inject a custom CurlMulti object into each client as it is\ncreated.","position":{"start":{"line":910,"column":49,"offset":42923},"end":{"line":911,"column":9,"offset":43000},"indent":[1]}}],"position":{"start":{"line":909,"column":1,"offset":42769},"end":{"line":911,"column":9,"offset":43000},"indent":[1,1]}},{"type":"code","lang":"php","meta":null,"value":"$multi = new Guzzle\\Http\\Curl\\CurlMulti();\n$builder = Guzzle\\Service\\Builder\\ServiceBuilder::factory('/path/to/config.json');\n$builder->addListener('service_builder.create_client', function ($event) use ($multi) {\n    $event['client']->setCurlMulti($multi);\n}\n});","position":{"start":{"line":913,"column":1,"offset":43002},"end":{"line":920,"column":4,"offset":43276},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"No default path","position":{"start":{"line":922,"column":5,"offset":43282},"end":{"line":922,"column":20,"offset":43297},"indent":[]}}],"position":{"start":{"line":922,"column":1,"offset":43278},"end":{"line":922,"column":20,"offset":43297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"URLs no longer have a default path value of '/' if no path was specified.","position":{"start":{"line":924,"column":1,"offset":43299},"end":{"line":924,"column":74,"offset":43372},"indent":[]}}],"position":{"start":{"line":924,"column":1,"offset":43299},"end":{"line":924,"column":74,"offset":43372},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Before:","position":{"start":{"line":926,"column":1,"offset":43374},"end":{"line":926,"column":8,"offset":43381},"indent":[]}}],"position":{"start":{"line":926,"column":1,"offset":43374},"end":{"line":926,"column":8,"offset":43381},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"$request = $client->get('http://www.foo.com');\necho $request->getUrl();\n// >> http://www.foo.com/","position":{"start":{"line":928,"column":1,"offset":43383},"end":{"line":932,"column":4,"offset":43491},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After:","position":{"start":{"line":934,"column":1,"offset":43493},"end":{"line":934,"column":7,"offset":43499},"indent":[]}}],"position":{"start":{"line":934,"column":1,"offset":43493},"end":{"line":934,"column":7,"offset":43499},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"$request = $client->get('http://www.foo.com');\necho $request->getUrl();\n// >> http://www.foo.com","position":{"start":{"line":936,"column":1,"offset":43501},"end":{"line":940,"column":4,"offset":43608},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Less verbose BadResponseException","position":{"start":{"line":942,"column":5,"offset":43614},"end":{"line":942,"column":38,"offset":43647},"indent":[]}}],"position":{"start":{"line":942,"column":1,"offset":43610},"end":{"line":942,"column":38,"offset":43647},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The exception message for ","position":{"start":{"line":944,"column":1,"offset":43649},"end":{"line":944,"column":27,"offset":43675},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Exception\\BadResponseException","position":{"start":{"line":944,"column":27,"offset":43675},"end":{"line":944,"column":71,"offset":43719},"indent":[]}},{"type":"text","value":" no longer contains the full HTTP request and\nresponse information. You can, however, get access to the request and response object by calling ","position":{"start":{"line":944,"column":71,"offset":43719},"end":{"line":945,"column":98,"offset":43862},"indent":[1]}},{"type":"inlineCode","value":"getRequest()","position":{"start":{"line":945,"column":98,"offset":43862},"end":{"line":945,"column":112,"offset":43876},"indent":[]}},{"type":"text","value":" or\n","position":{"start":{"line":945,"column":112,"offset":43876},"end":{"line":946,"column":1,"offset":43880},"indent":[1]}},{"type":"inlineCode","value":"getResponse()","position":{"start":{"line":946,"column":1,"offset":43880},"end":{"line":946,"column":16,"offset":43895},"indent":[]}},{"type":"text","value":" on the exception object.","position":{"start":{"line":946,"column":16,"offset":43895},"end":{"line":946,"column":41,"offset":43920},"indent":[]}}],"position":{"start":{"line":944,"column":1,"offset":43649},"end":{"line":946,"column":41,"offset":43920},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Query parameter aggregation","position":{"start":{"line":948,"column":5,"offset":43926},"end":{"line":948,"column":32,"offset":43953},"indent":[]}}],"position":{"start":{"line":948,"column":1,"offset":43922},"end":{"line":948,"column":32,"offset":43953},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Multi-valued query parameters are no longer aggregated using a callback function. ","position":{"start":{"line":950,"column":1,"offset":43955},"end":{"line":950,"column":83,"offset":44037},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Http\\Query","position":{"start":{"line":950,"column":83,"offset":44037},"end":{"line":950,"column":102,"offset":44056},"indent":[]}},{"type":"text","value":" now has a\nsetAggregator() method that accepts a ","position":{"start":{"line":950,"column":102,"offset":44056},"end":{"line":951,"column":39,"offset":44105},"indent":[1]}},{"type":"inlineCode","value":"Guzzle\\Http\\QueryAggregator\\QueryAggregatorInterface","position":{"start":{"line":951,"column":39,"offset":44105},"end":{"line":951,"column":93,"offset":44159},"indent":[]}},{"type":"text","value":" object. This object is\nresponsible for handling the aggregation of multi-valued query string variables into a flattened hash.","position":{"start":{"line":951,"column":93,"offset":44159},"end":{"line":952,"column":103,"offset":44285},"indent":[1]}}],"position":{"start":{"line":950,"column":1,"offset":43955},"end":{"line":952,"column":103,"offset":44285},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"2.8 to 3.x","position":{"start":{"line":954,"column":1,"offset":44287},"end":{"line":954,"column":11,"offset":44297},"indent":[]}}],"position":{"start":{"line":954,"column":1,"offset":44287},"end":{"line":955,"column":11,"offset":44308},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Guzzle\\Service\\Inspector","position":{"start":{"line":957,"column":5,"offset":44314},"end":{"line":957,"column":29,"offset":44338},"indent":[]}}],"position":{"start":{"line":957,"column":1,"offset":44310},"end":{"line":957,"column":29,"offset":44338},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Change ","position":{"start":{"line":959,"column":1,"offset":44340},"end":{"line":959,"column":8,"offset":44347},"indent":[]}},{"type":"inlineCode","value":"\\Guzzle\\Service\\Inspector::fromConfig","position":{"start":{"line":959,"column":8,"offset":44347},"end":{"line":959,"column":47,"offset":44386},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":959,"column":47,"offset":44386},"end":{"line":959,"column":51,"offset":44390},"indent":[]}},{"type":"inlineCode","value":"\\Guzzle\\Common\\Collection::fromConfig","position":{"start":{"line":959,"column":51,"offset":44390},"end":{"line":959,"column":90,"offset":44429},"indent":[]}}],"position":{"start":{"line":959,"column":1,"offset":44340},"end":{"line":959,"column":90,"offset":44429},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Before","position":{"start":{"line":961,"column":3,"offset":44433},"end":{"line":961,"column":9,"offset":44439},"indent":[]}}],"position":{"start":{"line":961,"column":1,"offset":44431},"end":{"line":961,"column":11,"offset":44441},"indent":[]}}],"position":{"start":{"line":961,"column":1,"offset":44431},"end":{"line":961,"column":11,"offset":44441},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Guzzle\\Service\\Inspector;\n\nclass YourClient extends \\Guzzle\\Service\\Client\n{\n    public static function factory($config = array())\n    {\n        $default = array();\n        $required = array('base_url', 'username', 'api_key');\n        $config = Inspector::fromConfig($config, $default, $required);\n\n        $client = new self(\n            $config->get('base_url'),\n            $config->get('username'),\n            $config->get('api_key')\n        );\n        $client->setConfig($config);\n\n        $client->setDescription(ServiceDescription::factory(__DIR__ . DIRECTORY_SEPARATOR . 'client.json'));\n\n        return $client;\n    }","position":{"start":{"line":963,"column":1,"offset":44443},"end":{"line":985,"column":4,"offset":45085},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"After","position":{"start":{"line":987,"column":3,"offset":45089},"end":{"line":987,"column":8,"offset":45094},"indent":[]}}],"position":{"start":{"line":987,"column":1,"offset":45087},"end":{"line":987,"column":10,"offset":45096},"indent":[]}}],"position":{"start":{"line":987,"column":1,"offset":45087},"end":{"line":987,"column":10,"offset":45096},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Guzzle\\Common\\Collection;\n\nclass YourClient extends \\Guzzle\\Service\\Client\n{\n    public static function factory($config = array())\n    {\n        $default = array();\n        $required = array('base_url', 'username', 'api_key');\n        $config = Collection::fromConfig($config, $default, $required);\n\n        $client = new self(\n            $config->get('base_url'),\n            $config->get('username'),\n            $config->get('api_key')\n        );\n        $client->setConfig($config);\n\n        $client->setDescription(ServiceDescription::factory(__DIR__ . DIRECTORY_SEPARATOR . 'client.json'));\n\n        return $client;\n    }","position":{"start":{"line":989,"column":1,"offset":45098},"end":{"line":1011,"column":4,"offset":45741},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Convert XML Service Descriptions to JSON","position":{"start":{"line":1013,"column":5,"offset":45747},"end":{"line":1013,"column":45,"offset":45787},"indent":[]}}],"position":{"start":{"line":1013,"column":1,"offset":45743},"end":{"line":1013,"column":45,"offset":45787},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Before","position":{"start":{"line":1015,"column":3,"offset":45791},"end":{"line":1015,"column":9,"offset":45797},"indent":[]}}],"position":{"start":{"line":1015,"column":1,"offset":45789},"end":{"line":1015,"column":11,"offset":45799},"indent":[]}}],"position":{"start":{"line":1015,"column":1,"offset":45789},"end":{"line":1015,"column":11,"offset":45799},"indent":[]}},{"type":"code","lang":"xml","meta":null,"value":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<client>\n    <commands>\n        <!-- Groups -->\n        <command name=\"list_groups\" method=\"GET\" uri=\"groups.json\">\n            <doc>Get a list of groups</doc>\n        </command>\n        <command name=\"search_groups\" method=\"GET\" uri='search.json?query=\"{{query}} type:group\"'>\n            <doc>Uses a search query to get a list of groups</doc>\n            <param name=\"query\" type=\"string\" required=\"true\" />\n        </command>\n        <command name=\"create_group\" method=\"POST\" uri=\"groups.json\">\n            <doc>Create a group</doc>\n            <param name=\"data\" type=\"array\" location=\"body\" filters=\"json_encode\" doc=\"Group JSON\"/>\n            <param name=\"Content-Type\" location=\"header\" static=\"application/json\"/>\n        </command>\n        <command name=\"delete_group\" method=\"DELETE\" uri=\"groups/{{id}}.json\">\n            <doc>Delete a group by ID</doc>\n            <param name=\"id\" type=\"integer\" required=\"true\"/>\n        </command>\n        <command name=\"get_group\" method=\"GET\" uri=\"groups/{{id}}.json\">\n            <param name=\"id\" type=\"integer\" required=\"true\"/>\n        </command>\n        <command name=\"update_group\" method=\"PUT\" uri=\"groups/{{id}}.json\">\n            <doc>Update a group</doc>\n            <param name=\"id\" type=\"integer\" required=\"true\"/>\n            <param name=\"data\" type=\"array\" location=\"body\" filters=\"json_encode\" doc=\"Group JSON\"/>\n            <param name=\"Content-Type\" location=\"header\" static=\"application/json\"/>\n        </command>\n    </commands>\n</client>","position":{"start":{"line":1017,"column":1,"offset":45801},"end":{"line":1049,"column":4,"offset":47357},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"After","position":{"start":{"line":1051,"column":3,"offset":47361},"end":{"line":1051,"column":8,"offset":47366},"indent":[]}}],"position":{"start":{"line":1051,"column":1,"offset":47359},"end":{"line":1051,"column":10,"offset":47368},"indent":[]}}],"position":{"start":{"line":1051,"column":1,"offset":47359},"end":{"line":1051,"column":10,"offset":47368},"indent":[]}},{"type":"code","lang":"json","meta":null,"value":"{\n    \"name\":       \"Zendesk REST API v2\",\n    \"apiVersion\": \"2012-12-31\",\n    \"description\":\"Provides access to Zendesk views, groups, tickets, ticket fields, and users\",\n    \"operations\": {\n        \"list_groups\":  {\n            \"httpMethod\":\"GET\",\n            \"uri\":       \"groups.json\",\n            \"summary\":   \"Get a list of groups\"\n        },\n        \"search_groups\":{\n            \"httpMethod\":\"GET\",\n            \"uri\":       \"search.json?query=\\\"{query} type:group\\\"\",\n            \"summary\":   \"Uses a search query to get a list of groups\",\n            \"parameters\":{\n                \"query\":{\n                    \"location\":   \"uri\",\n                    \"description\":\"Zendesk Search Query\",\n                    \"type\":       \"string\",\n                    \"required\":   true\n                }\n            }\n        },\n        \"create_group\": {\n            \"httpMethod\":\"POST\",\n            \"uri\":       \"groups.json\",\n            \"summary\":   \"Create a group\",\n            \"parameters\":{\n                \"data\":        {\n                    \"type\":       \"array\",\n                    \"location\":   \"body\",\n                    \"description\":\"Group JSON\",\n                    \"filters\":    \"json_encode\",\n                    \"required\":   true\n                },\n                \"Content-Type\":{\n                    \"type\":    \"string\",\n                    \"location\":\"header\",\n                    \"static\":  \"application/json\"\n                }\n            }\n        },\n        \"delete_group\": {\n            \"httpMethod\":\"DELETE\",\n            \"uri\":       \"groups/{id}.json\",\n            \"summary\":   \"Delete a group\",\n            \"parameters\":{\n                \"id\":{\n                    \"location\":   \"uri\",\n                    \"description\":\"Group to delete by ID\",\n                    \"type\":       \"integer\",\n                    \"required\":   true\n                }\n            }\n        },\n        \"get_group\":    {\n            \"httpMethod\":\"GET\",\n            \"uri\":       \"groups/{id}.json\",\n            \"summary\":   \"Get a ticket\",\n            \"parameters\":{\n                \"id\":{\n                    \"location\":   \"uri\",\n                    \"description\":\"Group to get by ID\",\n                    \"type\":       \"integer\",\n                    \"required\":   true\n                }\n            }\n        },\n        \"update_group\": {\n            \"httpMethod\":\"PUT\",\n            \"uri\":       \"groups/{id}.json\",\n            \"summary\":   \"Update a group\",\n            \"parameters\":{\n                \"id\":          {\n                    \"location\":   \"uri\",\n                    \"description\":\"Group to update by ID\",\n                    \"type\":       \"integer\",\n                    \"required\":   true\n                },\n                \"data\":        {\n                    \"type\":       \"array\",\n                    \"location\":   \"body\",\n                    \"description\":\"Group JSON\",\n                    \"filters\":    \"json_encode\",\n                    \"required\":   true\n                },\n                \"Content-Type\":{\n                    \"type\":    \"string\",\n                    \"location\":\"header\",\n                    \"static\":  \"application/json\"\n                }\n            }\n        }\n}","position":{"start":{"line":1053,"column":1,"offset":47370},"end":{"line":1148,"column":4,"offset":50592},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Guzzle\\Service\\Description\\ServiceDescription","position":{"start":{"line":1150,"column":5,"offset":50598},"end":{"line":1150,"column":50,"offset":50643},"indent":[]}}],"position":{"start":{"line":1150,"column":1,"offset":50594},"end":{"line":1150,"column":50,"offset":50643},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Commands are now called Operations","position":{"start":{"line":1152,"column":1,"offset":50645},"end":{"line":1152,"column":35,"offset":50679},"indent":[]}}],"position":{"start":{"line":1152,"column":1,"offset":50645},"end":{"line":1152,"column":35,"offset":50679},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Before","position":{"start":{"line":1154,"column":3,"offset":50683},"end":{"line":1154,"column":9,"offset":50689},"indent":[]}}],"position":{"start":{"line":1154,"column":1,"offset":50681},"end":{"line":1154,"column":11,"offset":50691},"indent":[]}}],"position":{"start":{"line":1154,"column":1,"offset":50681},"end":{"line":1154,"column":11,"offset":50691},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Guzzle\\Service\\Description\\ServiceDescription;\n\n$sd = new ServiceDescription();\n$sd->getCommands();     // @returns ApiCommandInterface[]\n$sd->hasCommand($name);\n$sd->getCommand($name); // @returns ApiCommandInterface|null\n$sd->addCommand($command); // @param ApiCommandInterface $command","position":{"start":{"line":1156,"column":1,"offset":50693},"end":{"line":1164,"column":4,"offset":50996},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"After","position":{"start":{"line":1166,"column":3,"offset":51000},"end":{"line":1166,"column":8,"offset":51005},"indent":[]}}],"position":{"start":{"line":1166,"column":1,"offset":50998},"end":{"line":1166,"column":10,"offset":51007},"indent":[]}}],"position":{"start":{"line":1166,"column":1,"offset":50998},"end":{"line":1166,"column":10,"offset":51007},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Guzzle\\Service\\Description\\ServiceDescription;\n\n$sd = new ServiceDescription();\n$sd->getOperations();           // @returns OperationInterface[]\n$sd->hasOperation($name);\n$sd->getOperation($name);       // @returns OperationInterface|null\n$sd->addOperation($operation);  // @param OperationInterface $operation","position":{"start":{"line":1168,"column":1,"offset":51009},"end":{"line":1176,"column":4,"offset":51334},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Guzzle\\Common\\Inflection\\Inflector","position":{"start":{"line":1178,"column":5,"offset":51340},"end":{"line":1178,"column":39,"offset":51374},"indent":[]}}],"position":{"start":{"line":1178,"column":1,"offset":51336},"end":{"line":1178,"column":39,"offset":51374},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Namespace is now ","position":{"start":{"line":1180,"column":1,"offset":51376},"end":{"line":1180,"column":18,"offset":51393},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Inflection\\Inflector","position":{"start":{"line":1180,"column":18,"offset":51393},"end":{"line":1180,"column":47,"offset":51422},"indent":[]}}],"position":{"start":{"line":1180,"column":1,"offset":51376},"end":{"line":1180,"column":47,"offset":51422},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Guzzle\\Http\\Plugin","position":{"start":{"line":1182,"column":5,"offset":51428},"end":{"line":1182,"column":23,"offset":51446},"indent":[]}}],"position":{"start":{"line":1182,"column":1,"offset":51424},"end":{"line":1182,"column":23,"offset":51446},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Namespace is now ","position":{"start":{"line":1184,"column":1,"offset":51448},"end":{"line":1184,"column":18,"offset":51465},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Plugin","position":{"start":{"line":1184,"column":18,"offset":51465},"end":{"line":1184,"column":33,"offset":51480},"indent":[]}},{"type":"text","value":". Many other changes occur within this namespace and are detailed in their own sections below.","position":{"start":{"line":1184,"column":33,"offset":51480},"end":{"line":1184,"column":127,"offset":51574},"indent":[]}}],"position":{"start":{"line":1184,"column":1,"offset":51448},"end":{"line":1184,"column":127,"offset":51574},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Guzzle\\Http\\Plugin\\LogPlugin and Guzzle\\Common\\Log","position":{"start":{"line":1186,"column":5,"offset":51580},"end":{"line":1186,"column":55,"offset":51630},"indent":[]}}],"position":{"start":{"line":1186,"column":1,"offset":51576},"end":{"line":1186,"column":55,"offset":51630},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now ","position":{"start":{"line":1188,"column":1,"offset":51632},"end":{"line":1188,"column":5,"offset":51636},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Plugin\\Log\\LogPlugin","position":{"start":{"line":1188,"column":5,"offset":51636},"end":{"line":1188,"column":34,"offset":51665},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1188,"column":34,"offset":51665},"end":{"line":1188,"column":39,"offset":51670},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Log","position":{"start":{"line":1188,"column":39,"offset":51670},"end":{"line":1188,"column":51,"offset":51682},"indent":[]}},{"type":"text","value":" respectively.","position":{"start":{"line":1188,"column":51,"offset":51682},"end":{"line":1188,"column":65,"offset":51696},"indent":[]}}],"position":{"start":{"line":1188,"column":1,"offset":51632},"end":{"line":1188,"column":65,"offset":51696},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Before","position":{"start":{"line":1190,"column":3,"offset":51700},"end":{"line":1190,"column":9,"offset":51706},"indent":[]}}],"position":{"start":{"line":1190,"column":1,"offset":51698},"end":{"line":1190,"column":11,"offset":51708},"indent":[]}}],"position":{"start":{"line":1190,"column":1,"offset":51698},"end":{"line":1190,"column":11,"offset":51708},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Guzzle\\Common\\Log\\ClosureLogAdapter;\nuse Guzzle\\Http\\Plugin\\LogPlugin;\n\n/** @var \\Guzzle\\Http\\Client */\n$client;\n\n// $verbosity is an integer indicating desired message verbosity level\n$client->addSubscriber(new LogPlugin(new ClosureLogAdapter(function($m) { echo $m; }, $verbosity = LogPlugin::LOG_VERBOSE);","position":{"start":{"line":1192,"column":1,"offset":51710},"end":{"line":1201,"column":4,"offset":52033},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"After","position":{"start":{"line":1203,"column":3,"offset":52037},"end":{"line":1203,"column":8,"offset":52042},"indent":[]}}],"position":{"start":{"line":1203,"column":1,"offset":52035},"end":{"line":1203,"column":10,"offset":52044},"indent":[]}}],"position":{"start":{"line":1203,"column":1,"offset":52035},"end":{"line":1203,"column":10,"offset":52044},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Guzzle\\Log\\ClosureLogAdapter;\nuse Guzzle\\Log\\MessageFormatter;\nuse Guzzle\\Plugin\\Log\\LogPlugin;\n\n/** @var \\Guzzle\\Http\\Client */\n$client;\n\n// $format is a string indicating desired message format -- @see MessageFormatter\n$client->addSubscriber(new LogPlugin(new ClosureLogAdapter(function($m) { echo $m; }, $format = MessageFormatter::DEBUG_FORMAT);","position":{"start":{"line":1205,"column":1,"offset":52046},"end":{"line":1215,"column":4,"offset":52410},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Guzzle\\Http\\Plugin\\CurlAuthPlugin","position":{"start":{"line":1217,"column":5,"offset":52416},"end":{"line":1217,"column":38,"offset":52449},"indent":[]}}],"position":{"start":{"line":1217,"column":1,"offset":52412},"end":{"line":1217,"column":38,"offset":52449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now ","position":{"start":{"line":1219,"column":1,"offset":52451},"end":{"line":1219,"column":5,"offset":52455},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Plugin\\CurlAuth\\CurlAuthPlugin","position":{"start":{"line":1219,"column":5,"offset":52455},"end":{"line":1219,"column":44,"offset":52494},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1219,"column":44,"offset":52494},"end":{"line":1219,"column":45,"offset":52495},"indent":[]}}],"position":{"start":{"line":1219,"column":1,"offset":52451},"end":{"line":1219,"column":45,"offset":52495},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Guzzle\\Http\\Plugin\\ExponentialBackoffPlugin","position":{"start":{"line":1221,"column":5,"offset":52501},"end":{"line":1221,"column":48,"offset":52544},"indent":[]}}],"position":{"start":{"line":1221,"column":1,"offset":52497},"end":{"line":1221,"column":48,"offset":52544},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now ","position":{"start":{"line":1223,"column":1,"offset":52546},"end":{"line":1223,"column":5,"offset":52550},"indent":[]}},{"type":"inlineCode","value":"Guzzle\\Plugin\\Backoff\\BackoffPlugin","position":{"start":{"line":1223,"column":5,"offset":52550},"end":{"line":1223,"column":42,"offset":52587},"indent":[]}},{"type":"text","value":", and other changes.","position":{"start":{"line":1223,"column":42,"offset":52587},"end":{"line":1223,"column":62,"offset":52607},"indent":[]}}],"position":{"start":{"line":1223,"column":1,"offset":52546},"end":{"line":1223,"column":62,"offset":52607},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Before","position":{"start":{"line":1225,"column":3,"offset":52611},"end":{"line":1225,"column":9,"offset":52617},"indent":[]}}],"position":{"start":{"line":1225,"column":1,"offset":52609},"end":{"line":1225,"column":11,"offset":52619},"indent":[]}}],"position":{"start":{"line":1225,"column":1,"offset":52609},"end":{"line":1225,"column":11,"offset":52619},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Guzzle\\Http\\Plugin\\ExponentialBackoffPlugin;\n\n$backoffPlugin = new ExponentialBackoffPlugin($maxRetries, array_merge(\n        ExponentialBackoffPlugin::getDefaultFailureCodes(), array(429)\n    ));\n\n$client->addSubscriber($backoffPlugin);","position":{"start":{"line":1227,"column":1,"offset":52621},"end":{"line":1235,"column":4,"offset":52873},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"After","position":{"start":{"line":1237,"column":3,"offset":52877},"end":{"line":1237,"column":8,"offset":52882},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":52875},"end":{"line":1237,"column":10,"offset":52884},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":52875},"end":{"line":1237,"column":10,"offset":52884},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Guzzle\\Plugin\\Backoff\\BackoffPlugin;\nuse Guzzle\\Plugin\\Backoff\\HttpBackoffStrategy;\n\n// Use convenient factory method instead -- see implementation for ideas of what\n// you can do with chaining backoff strategies\n$backoffPlugin = BackoffPlugin::getExponentialBackoff($maxRetries, array_merge(\n        HttpBackoffStrategy::getDefaultFailureCodes(), array(429)\n    ));\n$client->addSubscriber($backoffPlugin);","position":{"start":{"line":1239,"column":1,"offset":52886},"end":{"line":1249,"column":4,"offset":53307},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Known Issues","position":{"start":{"line":1251,"column":5,"offset":53313},"end":{"line":1251,"column":17,"offset":53325},"indent":[]}}],"position":{"start":{"line":1251,"column":1,"offset":53309},"end":{"line":1251,"column":17,"offset":53325},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"linkReference","identifier":"bug","label":"BUG","referenceType":"shortcut","children":[{"type":"text","value":"BUG","position":{"start":{"line":1253,"column":7,"offset":53333},"end":{"line":1253,"column":10,"offset":53336},"indent":[]}}],"position":{"start":{"line":1253,"column":6,"offset":53332},"end":{"line":1253,"column":11,"offset":53337},"indent":[]}},{"type":"text","value":" Accept-Encoding header behavior changed unintentionally.","position":{"start":{"line":1253,"column":11,"offset":53337},"end":{"line":1253,"column":68,"offset":53394},"indent":[]}}],"position":{"start":{"line":1253,"column":1,"offset":53327},"end":{"line":1253,"column":68,"offset":53394},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(See #217) (Fixed in 09daeb8c666fb44499a0646d655a8ae36456575e)","position":{"start":{"line":1255,"column":1,"offset":53396},"end":{"line":1255,"column":63,"offset":53458},"indent":[]}}],"position":{"start":{"line":1255,"column":1,"offset":53396},"end":{"line":1255,"column":63,"offset":53458},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In version 2.8 setting the ","position":{"start":{"line":1257,"column":1,"offset":53460},"end":{"line":1257,"column":28,"offset":53487},"indent":[]}},{"type":"inlineCode","value":"Accept-Encoding","position":{"start":{"line":1257,"column":28,"offset":53487},"end":{"line":1257,"column":45,"offset":53504},"indent":[]}},{"type":"text","value":" header would set the CURLOPT_ENCODING option, which permitted cURL to\nproperly handle gzip/deflate compressed responses from the server. In versions affected by this bug this does not happen.\nSee issue #217 for a workaround, or use a version containing the fix.","position":{"start":{"line":1257,"column":45,"offset":53504},"end":{"line":1259,"column":70,"offset":53766},"indent":[1,1]}}],"position":{"start":{"line":1257,"column":1,"offset":53460},"end":{"line":1259,"column":70,"offset":53766},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":1262,"column":1,"offset":53769},"end":{"line":1262,"column":31,"offset":53799},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1262,"column":31,"offset":53799}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"guzzle-upgrade-guide\"\n    }}>{`Guzzle Upgrade Guide`}</h1>\n    <h2 {...{\n      \"id\": \"60-to-70\"\n    }}>{`6.0 to 7.0`}</h2>\n    <p>{`In order to take advantage of the new features of PHP, Guzzle dropped the support\nof PHP 5. The minimum supported PHP version is now PHP 7.2. Type hints and return\ntypes for functions and methods have been added wherever possible. `}</p>\n    <p>{`Please make sure:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`You are calling a function or a method with the correct type.`}</li>\n      <li parentName=\"ul\">{`If you extend a class of Guzzle; update all signatures on methods you override.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"other-backwards-compatibility-breaking-changes\"\n    }}>{`Other backwards compatibility breaking changes`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Class `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\UriTemplate`}</inlineCode>{` is removed.`}</li>\n      <li parentName=\"ul\">{`Class `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\SeekException`}</inlineCode>{` is removed.`}</li>\n      <li parentName=\"ul\">{`Classes `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\BadResponseException`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\ClientException`}</inlineCode>{`,\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\ServerException`}</inlineCode>{` can no longer be initialized with an empty\nResponse as argument.`}</li>\n      <li parentName=\"ul\">{`Class `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\ConnectException`}</inlineCode>{` now extends `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\TransferException`}</inlineCode>{`\ninstead of `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\RequestException`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Function `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\ConnectException::getResponse()`}</inlineCode>{` is removed.`}</li>\n      <li parentName=\"ul\">{`Function `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\ConnectException::hasResponse()`}</inlineCode>{` is removed.`}</li>\n      <li parentName=\"ul\">{`Constant `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\ClientInterface::VERSION`}</inlineCode>{` is removed. Added `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\ClientInterface::MAJOR_VERSION`}</inlineCode>{` instead.`}</li>\n      <li parentName=\"ul\">{`Function `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\RequestException::getResponseBodySummary`}</inlineCode>{` is removed.\nUse `}<inlineCode parentName=\"li\">{`\\\\GuzzleHttp\\\\Psr7\\\\get_message_body_summary`}</inlineCode>{` as an alternative.`}</li>\n      <li parentName=\"ul\">{`Function `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Cookie\\\\CookieJar::getCookieValue`}</inlineCode>{` is removed.`}</li>\n      <li parentName=\"ul\">{`Request option `}<inlineCode parentName=\"li\">{`exceptions`}</inlineCode>{` is removed. Please use `}<inlineCode parentName=\"li\">{`http_errors`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Request option `}<inlineCode parentName=\"li\">{`save_to`}</inlineCode>{` is removed. Please use `}<inlineCode parentName=\"li\">{`sink`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Pool option `}<inlineCode parentName=\"li\">{`pool_size`}</inlineCode>{` is removed. Please use `}<inlineCode parentName=\"li\">{`concurrency`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`We now look for environment variables in the `}<inlineCode parentName=\"li\">{`$_SERVER`}</inlineCode>{` super global, due to thread safety issues with `}<inlineCode parentName=\"li\">{`getenv`}</inlineCode>{`. We continue to fallback to `}<inlineCode parentName=\"li\">{`getenv`}</inlineCode>{` in CLI environments, for maximum compatibility.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`get`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`head`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`put`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`post`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`patch`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`delete`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`getAsync`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`headAsync`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`putAsync`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`postAsync`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`patchAsync`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`deleteAsync`}</inlineCode>{` methods are now implemented as genuine methods on `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Client`}</inlineCode>{`, with strong typing. The original `}<inlineCode parentName=\"li\">{`__call`}</inlineCode>{` implementation remains unchanged for now, for maximum backwards compatibility, but won't be invoked under normal operation.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`log`}</inlineCode>{` middleware will log the errors with level `}<inlineCode parentName=\"li\">{`error`}</inlineCode>{` instead of `}<inlineCode parentName=\"li\">{`notice`}</inlineCode>{` `}</li>\n      <li parentName=\"ul\">{`Support for international domain names (IDN) is now disabled by default, and enabling it requires installing ext-intl, linked against a modern version of the C library (ICU 4.6 or higher).`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"native-functions-calls\"\n    }}>{`Native functions calls`}</h4>\n    <p>{`All internal native functions calls of Guzzle are now prefixed with a slash. This\nchange makes it impossible for method overloading by other libraries or applications.\nExample:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// Before:\ncurl_version();\n\n// After:\n\\\\curl_version();\n`}</code></pre>\n    <p>{`For the full diff you can check `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/guzzle/guzzle/compare/6.5.4..master\"\n      }}>{`here`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"50-to-60\"\n    }}>{`5.0 to 6.0`}</h2>\n    <p>{`Guzzle now uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.php-fig.org/psr/psr-7/\"\n      }}>{`PSR-7`}</a>{` for HTTP messages.\nDue to the fact that these messages are immutable, this prompted a refactoring\nof Guzzle to use a middleware based system rather than an event system. Any\nHTTP message interaction (e.g., `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Message\\\\Request`}</inlineCode>{`) need to be\nupdated to work with the new immutable PSR-7 request and response objects. Any\nevent listeners or subscribers need to be updated to become middleware\nfunctions that wrap handlers (or are injected into a\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\HandlerStack`}</inlineCode>{`).`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\BatchResults`}</inlineCode></li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Collection`}</inlineCode></li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\HasDataTrait`}</inlineCode></li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\ToArrayInterface`}</inlineCode></li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`guzzlehttp/streams`}</inlineCode>{` dependency has been removed. Stream functionality\nis now present in the `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Psr7`}</inlineCode>{` namespace provided by the\n`}<inlineCode parentName=\"li\">{`guzzlehttp/psr7`}</inlineCode>{` package.`}</li>\n      <li parentName=\"ul\">{`Guzzle no longer uses ReactPHP promises and now uses the\n`}<inlineCode parentName=\"li\">{`guzzlehttp/promises`}</inlineCode>{` library. We use a custom promise library for three\nsignificant reasons:`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`React promises (at the time of writing this) are recursive. Promise\nchaining and promise resolution will eventually blow the stack. Guzzle\npromises are not recursive as they use a sort of trampolining technique.\nNote: there has been movement in the React project to modify promises to\nno longer utilize recursion.`}</li>\n          <li parentName=\"ol\">{`Guzzle needs to have the ability to synchronously block on a promise to\nwait for a result. Guzzle promises allows this functionality (and does\nnot require the use of recursion).`}</li>\n          <li parentName=\"ol\">{`Because we need to be able to wait on a result, doing so using React\npromises requires wrapping react promises with RingPHP futures. This\noverhead is no longer needed, reducing stack sizes, reducing complexity,\nand improving performance.`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Mimetypes`}</inlineCode>{` has been moved to a function in\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Psr7\\\\mimetype_from_extension`}</inlineCode>{` and\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Psr7\\\\mimetype_from_filename`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Query`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\QueryParser`}</inlineCode>{` have been removed. Query\nstrings must now be passed into request objects as strings, or provided to\nthe `}<inlineCode parentName=\"li\">{`query`}</inlineCode>{` request option when creating requests with clients. The `}<inlineCode parentName=\"li\">{`query`}</inlineCode>{`\noption uses PHP's `}<inlineCode parentName=\"li\">{`http_build_query`}</inlineCode>{` to convert an array to a string. If you\nneed a different serialization technique, you will need to pass the query\nstring in as a string. There are a couple helper functions that will make\nworking with query strings easier: `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Psr7\\\\parse_query`}</inlineCode>{` and\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Psr7\\\\build_query`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Guzzle no longer has a dependency on RingPHP. Due to the use of a middleware\nsystem based on PSR-7, using RingPHP and it's middleware system as well adds\nmore complexity than the benefits it provides. All HTTP handlers that were\npresent in RingPHP have been modified to work directly with PSR-7 messages\nand placed in the `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Handler`}</inlineCode>{` namespace. This significantly reduces\ncomplexity in Guzzle, removes a dependency, and improves performance. RingPHP\nwill be maintained for Guzzle 5 support, but will no longer be a part of\nGuzzle 6.`}</li>\n      <li parentName=\"ul\">{`As Guzzle now uses a middleware based systems the event system and RingPHP\nintegration has been removed. Note: while the event system has been removed,\nit is possible to add your own type of event system that is powered by the\nmiddleware system.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Removed the `}<inlineCode parentName=\"li\">{`Event`}</inlineCode>{` namespace.`}</li>\n          <li parentName=\"ul\">{`Removed the `}<inlineCode parentName=\"li\">{`Subscriber`}</inlineCode>{` namespace.`}</li>\n          <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`Transaction`}</inlineCode>{` class`}</li>\n          <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`RequestFsm`}</inlineCode></li>\n          <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`RingBridge`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\Cookie`}</inlineCode>{` is now provided by\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Middleware::cookies`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\HttpError`}</inlineCode>{` is now provided by\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Middleware::httpError`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\History`}</inlineCode>{` is now provided by\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Middleware::history`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\Mock`}</inlineCode>{` is now provided by\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Handler\\\\MockHandler`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\Prepare`}</inlineCode>{` is now provided by\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\PrepareBodyMiddleware`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\Redirect`}</inlineCode>{` is now provided by\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\RedirectMiddleware`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Guzzle now uses `}<inlineCode parentName=\"li\">{`Psr\\\\Http\\\\Message\\\\UriInterface`}</inlineCode>{` (implements in\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Psr7\\\\Uri`}</inlineCode>{`) for URI support. `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Url`}</inlineCode>{` is now gone.`}</li>\n      <li parentName=\"ul\">{`Static functions in `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Utils`}</inlineCode>{` have been moved to namespaced\nfunctions under the `}<inlineCode parentName=\"li\">{`GuzzleHttp`}</inlineCode>{` namespace. This requires either a Composer\nbased autoloader or you to include functions.php.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\ClientInterface::getDefaultOption`}</inlineCode>{` has been renamed to\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\ClientInterface::getConfig`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\ClientInterface::setDefaultOption`}</inlineCode>{` has been removed.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`json`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`xml`}</inlineCode>{` methods of response objects has been removed. With the\nmigration to strictly adhering to PSR-7 as the interface for Guzzle messages,\nadding methods to message interfaces would actually require Guzzle messages\nto extend from PSR-7 messages rather then work with them directly.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"migrating-to-middleware\"\n    }}>{`Migrating to middleware`}</h2>\n    <p>{`The change to PSR-7 unfortunately required significant refactoring to Guzzle\ndue to the fact that PSR-7 messages are immutable. Guzzle 5 relied on an event\nsystem from plugins. The event system relied on mutability of HTTP messages and\nside effects in order to work. With immutable messages, you have to change your\nworkflow to become more about either returning a value (e.g., functional\nmiddlewares) or setting a value on an object. Guzzle v6 has chosen the\nfunctional middleware approach.`}</p>\n    <p>{`Instead of using the event system to listen for things like the `}<inlineCode parentName=\"p\">{`before`}</inlineCode>{` event,\nyou now create a stack based middleware function that intercepts a request on\nthe way in and the promise of the response on the way out. This is a much\nsimpler and more predictable approach than the event system and works nicely\nwith PSR-7 middleware. Due to the use of promises, the middleware system is\nalso asynchronous.`}</p>\n    <p>{`v5:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use GuzzleHttp\\\\Event\\\\BeforeEvent;\n$client = new GuzzleHttp\\\\Client();\n// Get the emitter and listen to the before event.\n$client->getEmitter()->on('before', function (BeforeEvent $e) {\n    // Guzzle v5 events relied on mutation\n    $e->getRequest()->setHeader('X-Foo', 'Bar');\n});\n`}</code></pre>\n    <p>{`v6:`}</p>\n    <p>{`In v6, you can modify the request before it is sent using the `}<inlineCode parentName=\"p\">{`mapRequest`}</inlineCode>{`\nmiddleware. The idiomatic way in v6 to modify the request/response lifecycle is\nto setup a handler middleware stack up front and inject the handler into a\nclient.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use GuzzleHttp\\\\Middleware;\n// Create a handler stack that has all of the default middlewares attached\n$handler = GuzzleHttp\\\\HandlerStack::create();\n// Push the handler onto the handler stack\n$handler->push(Middleware::mapRequest(function (RequestInterface $request) {\n    // Notice that we have to return a request object\n    return $request->withHeader('X-Foo', 'Bar');\n}));\n// Inject the handler into the client\n$client = new GuzzleHttp\\\\Client(['handler' => $handler]);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"post-requests\"\n    }}>{`POST Requests`}</h2>\n    <p>{`This version added the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.guzzlephp.org/en/latest/request-options.html#form_params\"\n      }}><inlineCode parentName=\"a\">{`form_params`}</inlineCode></a>{`\nand `}<inlineCode parentName=\"p\">{`multipart`}</inlineCode>{` request options. `}<inlineCode parentName=\"p\">{`form_params`}</inlineCode>{` is an associative array of\nstrings or array of strings and is used to serialize an\n`}<inlineCode parentName=\"p\">{`application/x-www-form-urlencoded`}</inlineCode>{` POST request. The\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.guzzlephp.org/en/latest/request-options.html#multipart\"\n      }}><inlineCode parentName=\"a\">{`multipart`}</inlineCode></a>{`\noption is now used to send a multipart/form-data POST request.`}</p>\n    <p><inlineCode parentName=\"p\">{`GuzzleHttp\\\\Post\\\\PostFile`}</inlineCode>{` has been removed. Use the `}<inlineCode parentName=\"p\">{`multipart`}</inlineCode>{` option to add\nPOST files to a multipart/form-data request.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{` option no longer accepts an array to send POST requests. Please use\n`}<inlineCode parentName=\"p\">{`multipart`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`form_params`}</inlineCode>{` instead.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`base_url`}</inlineCode>{` option has been renamed to `}<inlineCode parentName=\"p\">{`base_uri`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"4x-to-50\"\n    }}>{`4.x to 5.0`}</h2>\n    <h2 {...{\n      \"id\": \"rewritten-adapter-layer\"\n    }}>{`Rewritten Adapter Layer`}</h2>\n    <p>{`Guzzle now uses `}<a parentName=\"p\" {...{\n        \"href\": \"https://ringphp.readthedocs.org/en/latest\"\n      }}>{`RingPHP`}</a>{` to send\nHTTP requests. The `}<inlineCode parentName=\"p\">{`adapter`}</inlineCode>{` option in a `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Client`}</inlineCode>{` constructor\nis still supported, but it has now been renamed to `}<inlineCode parentName=\"p\">{`handler`}</inlineCode>{`. Instead of\npassing a `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Adapter\\\\AdapterInterface`}</inlineCode>{`, you must now pass a PHP\n`}<inlineCode parentName=\"p\">{`callable`}</inlineCode>{` that follows the RingPHP specification.`}</p>\n    <h2 {...{\n      \"id\": \"removed-fluent-interfaces\"\n    }}>{`Removed Fluent Interfaces`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://ocramius.github.io/blog/fluent-interfaces-are-evil/\"\n      }}>{`Fluent interfaces were removed`}</a>{`\nfrom the following classes:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Collection`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Url`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Query`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Post\\\\PostBody`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Cookie\\\\SetCookie`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"removed-functionsphp\"\n    }}>{`Removed functions.php`}</h2>\n    <p>{`Removed \"functions.php\", so that Guzzle is truly PSR-4 compliant. The following\nfunctions can be used as replacements.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\json_decode`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Utils::jsonDecode`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\get_path`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Utils::getPath`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Utils::setPath`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\set_path`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Pool::batch`}</inlineCode>{` -> `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\batch`}</inlineCode>{`. This function is, however,\ndeprecated in favor of using `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Pool::batch()`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`The \"procedural\" global client has been removed with no replacement (e.g.,\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\get()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\post()`}</inlineCode>{`, etc.). Use a `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Client`}</inlineCode>{`\nobject as a replacement.`}</p>\n    <h2 {...{\n      \"id\": \"throwimmediately-has-been-removed\"\n    }}><inlineCode parentName=\"h2\">{`throwImmediately`}</inlineCode>{` has been removed`}</h2>\n    <p>{`The concept of \"throwImmediately\" has been removed from exceptions and error\nevents. This control mechanism was used to stop a transfer of concurrent\nrequests from completing. This can now be handled by throwing the exception or\nby cancelling a pool of requests or each outstanding future request\nindividually.`}</p>\n    <h2 {...{\n      \"id\": \"headers-event-has-been-removed\"\n    }}>{`headers event has been removed`}</h2>\n    <p>{`Removed the \"headers\" event. This event was only useful for changing the\nbody a response once the headers of the response were known. You can implement\na similar behavior in a number of ways. One example might be to use a\nFnStream that has access to the transaction being sent. For example, when the\nfirst byte is written, you could check if the response headers match your\nexpectations, and if so, change the actual stream body that is being\nwritten to.`}</p>\n    <h2 {...{\n      \"id\": \"updates-to-http-messages\"\n    }}>{`Updates to HTTP Messages`}</h2>\n    <p>{`Removed the `}<inlineCode parentName=\"p\">{`asArray`}</inlineCode>{` parameter from\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Message\\\\MessageInterface::getHeader`}</inlineCode>{`. If you want to get a header\nvalue as an array, then use the newly added `}<inlineCode parentName=\"p\">{`getHeaderAsArray()`}</inlineCode>{` method of\n`}<inlineCode parentName=\"p\">{`MessageInterface`}</inlineCode>{`. This change makes the Guzzle interfaces compatible with\nthe PSR-7 interfaces.`}</p>\n    <h2 {...{\n      \"id\": \"3x-to-40\"\n    }}>{`3.x to 4.0`}</h2>\n    <h2 {...{\n      \"id\": \"overarching-changes\"\n    }}>{`Overarching changes:`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Now requires PHP 5.4 or greater.`}</li>\n      <li parentName=\"ul\">{`No longer requires cURL to send requests.`}</li>\n      <li parentName=\"ul\">{`Guzzle no longer wraps every exception it throws. Only exceptions that are\nrecoverable are now wrapped by Guzzle.`}</li>\n      <li parentName=\"ul\">{`Various namespaces have been removed or renamed.`}</li>\n      <li parentName=\"ul\">{`No longer requiring the Symfony EventDispatcher. A custom event dispatcher\nbased on the Symfony EventDispatcher is\nnow utilized in `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Event\\\\EmitterInterface`}</inlineCode>{` (resulting in significant\nspeed and functionality improvements).`}</li>\n    </ul>\n    <p>{`Changes per Guzzle 3.x namespace are described below.`}</p>\n    <h2 {...{\n      \"id\": \"batch\"\n    }}>{`Batch`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Guzzle\\\\Batch`}</inlineCode>{` namespace has been removed. This is best left to\nthird-parties to implement on top of Guzzle's core HTTP library.`}</p>\n    <h2 {...{\n      \"id\": \"cache\"\n    }}>{`Cache`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Guzzle\\\\Cache`}</inlineCode>{` namespace has been removed. (Todo: No suitable replacement\nhas been implemented yet, but hoping to utilize a PSR cache interface).`}</p>\n    <h2 {...{\n      \"id\": \"common\"\n    }}>{`Common`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Removed all of the wrapped exceptions. It's better to use the standard PHP\nlibrary for unrecoverable exceptions.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`FromConfigInterface`}</inlineCode>{` has been removed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Common\\\\Version`}</inlineCode>{` has been removed. The VERSION constant can be found\nat `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\ClientInterface::VERSION`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"collection\"\n    }}>{`Collection`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`getAll`}</inlineCode>{` has been removed. Use `}<inlineCode parentName=\"li\">{`toArray`}</inlineCode>{` to convert a collection to an array.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`inject`}</inlineCode>{` has been removed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`keySearch`}</inlineCode>{` has been removed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`getPath`}</inlineCode>{` no longer supports wildcard expressions. Use something better like\nJMESPath for this.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`setPath`}</inlineCode>{` now supports appending to an existing array via the `}<inlineCode parentName=\"li\">{`[]`}</inlineCode>{` notation.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"events\"\n    }}>{`Events`}</h3>\n    <p>{`Guzzle no longer requires Symfony's EventDispatcher component. Guzzle now uses\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Event\\\\Emitter`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Symfony\\\\Component\\\\EventDispatcher\\\\EventDispatcherInterface`}</inlineCode>{` is replaced by\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Event\\\\EmitterInterface`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Symfony\\\\Component\\\\EventDispatcher\\\\EventDispatcher`}</inlineCode>{` is replaced by\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Event\\\\Emitter`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Symfony\\\\Component\\\\EventDispatcher\\\\Event`}</inlineCode>{` is replaced by\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Event\\\\Event`}</inlineCode>{`, and Guzzle now has an EventInterface in\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Event\\\\EventInterface`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AbstractHasDispatcher`}</inlineCode>{` has moved to a trait, `}<inlineCode parentName=\"li\">{`HasEmitterTrait`}</inlineCode>{`, and\n`}<inlineCode parentName=\"li\">{`HasDispatcherInterface`}</inlineCode>{` has moved to `}<inlineCode parentName=\"li\">{`HasEmitterInterface`}</inlineCode>{`. Retrieving the\nevent emitter of a request, client, etc. now uses the `}<inlineCode parentName=\"li\">{`getEmitter`}</inlineCode>{` method\nrather than the `}<inlineCode parentName=\"li\">{`getDispatcher`}</inlineCode>{` method.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"emitter\"\n    }}>{`Emitter`}</h4>\n    <ul>\n      <li parentName=\"ul\">{`Use the `}<inlineCode parentName=\"li\">{`once()`}</inlineCode>{` method to add a listener that automatically removes itself\nthe first time it is invoked.`}</li>\n      <li parentName=\"ul\">{`Use the `}<inlineCode parentName=\"li\">{`listeners()`}</inlineCode>{` method to retrieve a list of event listeners rather than\nthe `}<inlineCode parentName=\"li\">{`getListeners()`}</inlineCode>{` method.`}</li>\n      <li parentName=\"ul\">{`Use `}<inlineCode parentName=\"li\">{`emit()`}</inlineCode>{` instead of `}<inlineCode parentName=\"li\">{`dispatch()`}</inlineCode>{` to emit an event from an emitter.`}</li>\n      <li parentName=\"ul\">{`Use `}<inlineCode parentName=\"li\">{`attach()`}</inlineCode>{` instead of `}<inlineCode parentName=\"li\">{`addSubscriber()`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`detach()`}</inlineCode>{` instead of\n`}<inlineCode parentName=\"li\">{`removeSubscriber()`}</inlineCode>{`.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$mock = new Mock();\n// 3.x\n$request->getEventDispatcher()->addSubscriber($mock);\n$request->getEventDispatcher()->removeSubscriber($mock);\n// 4.x\n$request->getEmitter()->attach($mock);\n$request->getEmitter()->detach($mock);\n`}</code></pre>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`on()`}</inlineCode>{` method to add a listener rather than the `}<inlineCode parentName=\"p\">{`addListener()`}</inlineCode>{` method.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// 3.x\n$request->getEventDispatcher()->addListener('foo', function (Event $event) { /* ... */ } );\n// 4.x\n$request->getEmitter()->on('foo', function (Event $event, $name) { /* ... */ } );\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"http\"\n    }}>{`Http`}</h2>\n    <h3 {...{\n      \"id\": \"general-changes\"\n    }}>{`General changes`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`The cacert.pem certificate has been moved to `}<inlineCode parentName=\"li\">{`src/cacert.pem`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Added the concept of adapters that are used to transfer requests over the\nwire.`}</li>\n      <li parentName=\"ul\">{`Simplified the event system.`}</li>\n      <li parentName=\"ul\">{`Sending requests in parallel is still possible, but batching is no longer a\nconcept of the HTTP layer. Instead, you must use the `}<inlineCode parentName=\"li\">{`complete`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`error`}</inlineCode>{`\nevents to asynchronously manage parallel request transfers.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Url`}</inlineCode>{` has moved to `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Url`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\QueryString`}</inlineCode>{` has moved to `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Query`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`QueryAggregators have been rewritten so that they are simply callable\nfunctions.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\StaticClient`}</inlineCode>{` has been removed. Use the functions provided in\n`}<inlineCode parentName=\"li\">{`functions.php`}</inlineCode>{` for an easy to use static client instance.`}</li>\n      <li parentName=\"ul\">{`Exceptions in `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception`}</inlineCode>{` have been updated to all extend from\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Exception\\\\TransferException`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"client\"\n    }}>{`Client`}</h3>\n    <p>{`Calling methods like `}<inlineCode parentName=\"p\">{`get()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`post()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`head()`}</inlineCode>{`, etc. no longer create and\nreturn a request, but rather creates a request, sends the request, and returns\nthe response.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// 3.0\n$request = $client->get('/');\n$response = $request->send();\n\n// 4.0\n$response = $client->get('/');\n\n// or, to mirror the previous behavior\n$request = $client->createRequest('GET', '/');\n$response = $client->send($request);\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`GuzzleHttp\\\\ClientInterface`}</inlineCode>{` has changed.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`send`}</inlineCode>{` method no longer accepts more than one request. Use `}<inlineCode parentName=\"li\">{`sendAll`}</inlineCode>{` to\nsend multiple requests in parallel.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`setUserAgent()`}</inlineCode>{` has been removed. Use a default request option instead. You\ncould, for example, do something like:\n`}<inlineCode parentName=\"li\">{`$client->setConfig('defaults/headers/User-Agent', 'Foo/Bar ' . $client::getDefaultUserAgent())`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`setSslVerification()`}</inlineCode>{` has been removed. Use default request options instead,\nlike `}<inlineCode parentName=\"li\">{`$client->setConfig('defaults/verify', true)`}</inlineCode>{`.`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`GuzzleHttp\\\\Client`}</inlineCode>{` has changed.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The constructor now accepts only an associative array. You can include a\n`}<inlineCode parentName=\"li\">{`base_url`}</inlineCode>{` string or array to use a URI template as the base URL of a client.\nYou can also specify a `}<inlineCode parentName=\"li\">{`defaults`}</inlineCode>{` key that is an associative array of default\nrequest options. You can pass an `}<inlineCode parentName=\"li\">{`adapter`}</inlineCode>{` to use a custom adapter,\n`}<inlineCode parentName=\"li\">{`batch_adapter`}</inlineCode>{` to use a custom adapter for sending requests in parallel, or\na `}<inlineCode parentName=\"li\">{`message_factory`}</inlineCode>{` to change the factory used to create HTTP requests and\nresponses.`}</li>\n      <li parentName=\"ul\">{`The client no longer emits a `}<inlineCode parentName=\"li\">{`client.create_request`}</inlineCode>{` event.`}</li>\n      <li parentName=\"ul\">{`Creating requests with a client no longer automatically utilize a URI\ntemplate. You must pass an array into a creational method (e.g.,\n`}<inlineCode parentName=\"li\">{`createRequest`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`get`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`put`}</inlineCode>{`, etc.) in order to expand a URI template.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"messages\"\n    }}>{`Messages`}</h3>\n    <p>{`Messages no longer have references to their counterparts (i.e., a request no\nlonger has a reference to it's response, and a response no loger has a\nreference to its request). This association is now managed through a\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Adapter\\\\TransactionInterface`}</inlineCode>{` object. You can get references to\nthese transaction objects using request events that are emitted over the\nlifecycle of a request.`}</p>\n    <h4 {...{\n      \"id\": \"requests-with-a-body\"\n    }}>{`Requests with a body`}</h4>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\EntityEnclosingRequest`}</inlineCode>{` and\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\EntityEnclosingRequestInterface`}</inlineCode>{` have been removed. The\nseparation between requests that contain a body and requests that do not\ncontain a body has been removed, and now `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\RequestInterface`}</inlineCode>{`\nhandles both use cases.`}</li>\n      <li parentName=\"ul\">{`Any method that previously accepts a `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Response`}</inlineCode>{` object now accept a\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\ResponseInterface`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\RequestFactoryInterface`}</inlineCode>{` has been renamed to\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\MessageFactoryInterface`}</inlineCode>{`. This interface is used to create\nboth requests and responses and is implemented in\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\MessageFactory`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`POST field and file methods have been removed from the request object. You\nmust now use the methods made available to `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Post\\\\PostBodyInterface`}</inlineCode>{`\nto control the format of a POST body. Requests that are created using a\nstandard `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\MessageFactoryInterface`}</inlineCode>{` will automatically use\na `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Post\\\\PostBody`}</inlineCode>{` body if the body was passed as an array or if\nthe method is POST and no body is provided.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$request = $client->createRequest('POST', '/');\n$request->getBody()->setField('foo', 'bar');\n$request->getBody()->addFile(new PostFile('file_key', fopen('/path/to/content', 'r')));\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"headers\"\n    }}>{`Headers`}</h4>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Header`}</inlineCode>{` has been removed. Header values are now simply\nrepresented by an array of values or as a string. Header values are returned\nas a string by default when retrieving a header value from a message. You can\npass an optional argument of `}<inlineCode parentName=\"li\">{`true`}</inlineCode>{` to retrieve a header value as an array\nof strings instead of a single concatenated string.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\PostFile`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\PostFileInterface`}</inlineCode>{` have been moved to\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Post`}</inlineCode>{`. This interface has been simplified and now allows the\naddition of arbitrary headers.`}</li>\n      <li parentName=\"ul\">{`Custom headers like `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Header\\\\Link`}</inlineCode>{` have been removed. Most\nof the custom headers are now handled separately in specific\nsubscribers/plugins, and `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\HeaderValues::parseParams()`}</inlineCode>{` has\nbeen updated to properly handle headers that contain parameters (like the\n`}<inlineCode parentName=\"li\">{`Link`}</inlineCode>{` header).`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"responses\"\n    }}>{`Responses`}</h4>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Response::getInfo()`}</inlineCode>{` and\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Response::setInfo()`}</inlineCode>{` have been removed. Use the event\nsystem to retrieve this type of information.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Response::getRawHeaders()`}</inlineCode>{` has been removed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Response::getMessage()`}</inlineCode>{` has been removed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Response::calculateAge()`}</inlineCode>{` and other cache specific\nmethods have moved to the CacheSubscriber.`}</li>\n      <li parentName=\"ul\">{`Header specific helper functions like `}<inlineCode parentName=\"li\">{`getContentMd5()`}</inlineCode>{` have been removed.\nJust use `}<inlineCode parentName=\"li\">{`getHeader('Content-MD5')`}</inlineCode>{` instead.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Response::setRequest()`}</inlineCode>{` and\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Response::getRequest()`}</inlineCode>{` have been removed. Use the event\nsystem to work with request and response objects as a transaction.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Response::getRedirectCount()`}</inlineCode>{` has been removed. Use the\nRedirect subscriber instead.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\Response::isSuccessful()`}</inlineCode>{` and other related methods have\nbeen removed. Use `}<inlineCode parentName=\"li\">{`getStatusCode()`}</inlineCode>{` instead.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"streaming-responses\"\n    }}>{`Streaming responses`}</h4>\n    <p>{`Streaming requests can now be created by a client directly, returning a\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Message\\\\ResponseInterface`}</inlineCode>{` object that contains a body stream\nreferencing an open PHP HTTP stream.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// 3.0\nuse Guzzle\\\\Stream\\\\PhpStreamRequestFactory;\n$request = $client->get('/');\n$factory = new PhpStreamRequestFactory();\n$stream = $factory->fromRequest($request);\n$data = $stream->read(1024);\n\n// 4.0\n$response = $client->get('/', ['stream' => true]);\n// Read some data off of the stream in the response body\n$data = $response->getBody()->read(1024);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"redirects\"\n    }}>{`Redirects`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`configureRedirects()`}</inlineCode>{` method has been removed in favor of a\n`}<inlineCode parentName=\"p\">{`allow_redirects`}</inlineCode>{` request option.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// Standard redirects with a default of a max of 5 redirects\n$request = $client->createRequest('GET', '/', ['allow_redirects' => true]);\n\n// Strict redirects with a custom number of redirects\n$request = $client->createRequest('GET', '/', [\n    'allow_redirects' => ['max' => 5, 'strict' => true]\n]);\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"entitybody\"\n    }}>{`EntityBody`}</h4>\n    <p>{`EntityBody interfaces and classes have been removed or moved to\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Stream`}</inlineCode>{`. All classes and interfaces that once required\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\EntityBodyInterface`}</inlineCode>{` now require\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Stream\\\\StreamInterface`}</inlineCode>{`. Creating a new body for a request no\nlonger uses `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\EntityBody::factory`}</inlineCode>{` but now uses\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Stream\\\\Stream::factory`}</inlineCode>{` or even better:\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Stream\\\\create()`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\EntityBodyInterface`}</inlineCode>{` is now `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Stream\\\\StreamInterface`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\EntityBody`}</inlineCode>{` is now `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Stream\\\\Stream`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\CachingEntityBody`}</inlineCode>{` is now `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Stream\\\\CachingStream`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\ReadLimitEntityBody`}</inlineCode>{` is now `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Stream\\\\LimitStream`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\IoEmittyinEntityBody`}</inlineCode>{` has been removed.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"request-lifecycle-events\"\n    }}>{`Request lifecycle events`}</h4>\n    <p>{`Requests previously submitted a large number of requests. The number of events\nemitted over the lifecycle of a request has been significantly reduced to make\nit easier to understand how to extend the behavior of a request. All events\nemitted during the lifecycle of a request now emit a custom\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Event\\\\EventInterface`}</inlineCode>{` object that contains context providing\nmethods and a way in which to modify the transaction at that specific point in\ntime (e.g., intercept the request and set a response on the transaction).`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.before_send`}</inlineCode>{` has been renamed to `}<inlineCode parentName=\"li\">{`before`}</inlineCode>{` and now emits a\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Event\\\\BeforeEvent`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.complete`}</inlineCode>{` has been renamed to `}<inlineCode parentName=\"li\">{`complete`}</inlineCode>{` and now emits a\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Event\\\\CompleteEvent`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.sent`}</inlineCode>{` has been removed. Use `}<inlineCode parentName=\"li\">{`complete`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.success`}</inlineCode>{` has been removed. Use `}<inlineCode parentName=\"li\">{`complete`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`error`}</inlineCode>{` is now an event that emits a `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Event\\\\ErrorEvent`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.exception`}</inlineCode>{` has been removed. Use `}<inlineCode parentName=\"li\">{`error`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`request.receive.status_line`}</inlineCode>{` has been removed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`curl.callback.progress`}</inlineCode>{` has been removed. Use a custom `}<inlineCode parentName=\"li\">{`StreamInterface`}</inlineCode>{` to\nmaintain a status update.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`curl.callback.write`}</inlineCode>{` has been removed. Use a custom `}<inlineCode parentName=\"li\">{`StreamInterface`}</inlineCode>{` to\nintercept writes.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`curl.callback.read`}</inlineCode>{` has been removed. Use a custom `}<inlineCode parentName=\"li\">{`StreamInterface`}</inlineCode>{` to\nintercept reads.`}</li>\n    </ul>\n    <p><inlineCode parentName=\"p\">{`headers`}</inlineCode>{` is a new event that is emitted after the response headers of a\nrequest have been received before the body of the response is downloaded. This\nevent emits a `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Event\\\\HeadersEvent`}</inlineCode>{`.`}</p>\n    <p>{`You can intercept a request and inject a response using the `}<inlineCode parentName=\"p\">{`intercept()`}</inlineCode>{` event\nof a `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Event\\\\BeforeEvent`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Event\\\\CompleteEvent`}</inlineCode>{`, and\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Event\\\\ErrorEvent`}</inlineCode>{` event.`}</p>\n    <p>{`See: `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.guzzlephp.org/en/latest/events.html\"\n      }}>{`https://docs.guzzlephp.org/en/latest/events.html`}</a></p>\n    <h2 {...{\n      \"id\": \"inflection\"\n    }}>{`Inflection`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Guzzle\\\\Inflection`}</inlineCode>{` namespace has been removed. This is not a core concern\nof Guzzle.`}</p>\n    <h2 {...{\n      \"id\": \"iterator\"\n    }}>{`Iterator`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Guzzle\\\\Iterator`}</inlineCode>{` namespace has been removed.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Iterator\\\\AppendIterator`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`Guzzle\\\\Iterator\\\\ChunkedIterator`}</inlineCode>{`, and\n`}<inlineCode parentName=\"li\">{`Guzzle\\\\Iterator\\\\MethodProxyIterator`}</inlineCode>{` are nice, but not a core requirement of\nGuzzle itself.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Iterator\\\\FilterIterator`}</inlineCode>{` is no longer needed because an equivalent\nclass is shipped with PHP 5.4.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Iterator\\\\MapIterator`}</inlineCode>{` is not really needed when using PHP 5.5 because\nit's easier to just wrap an iterator in a generator that maps values.`}</li>\n    </ul>\n    <p>{`For a replacement of these iterators, see `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/nikic/iter\"\n      }}>{`https://github.com/nikic/iter`}</a></p>\n    <h2 {...{\n      \"id\": \"log\"\n    }}>{`Log`}</h2>\n    <p>{`The LogPlugin has moved to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/guzzle/log-subscriber\"\n      }}>{`https://github.com/guzzle/log-subscriber`}</a>{`. The\n`}<inlineCode parentName=\"p\">{`Guzzle\\\\Log`}</inlineCode>{` namespace has been removed. Guzzle now relies on\n`}<inlineCode parentName=\"p\">{`Psr\\\\Log\\\\LoggerInterface`}</inlineCode>{` for all logging. The MessageFormatter class has been\nmoved to `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Subscriber\\\\Log\\\\Formatter`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"parser\"\n    }}>{`Parser`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Guzzle\\\\Parser`}</inlineCode>{` namespace has been removed. This was previously used to\nmake it possible to plug in custom parsers for cookies, messages, URI\ntemplates, and URLs; however, this level of complexity is not needed in Guzzle\nso it has been removed.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Cookie: Cookie parsing logic has been moved to\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Cookie\\\\SetCookie::fromString`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Message: Message parsing logic for both requests and responses has been moved\nto `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Message\\\\MessageFactory::fromMessage`}</inlineCode>{`. Message parsing is only\nused in debugging or deserializing messages, so it doesn't make sense for\nGuzzle as a library to add this level of complexity to parsing messages.`}</li>\n      <li parentName=\"ul\">{`UriTemplate: URI template parsing has been moved to\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\UriTemplate`}</inlineCode>{`. The Guzzle library will automatically use the PECL\nURI template library if it is installed.`}</li>\n      <li parentName=\"ul\">{`Url: URL parsing is now performed in `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Url::fromString`}</inlineCode>{` (previously\nit was `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Url::factory()`}</inlineCode>{`). If custom URL parsing is necessary,\nthen developers are free to subclass `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Url`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"plugin\"\n    }}>{`Plugin`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Guzzle\\\\Plugin`}</inlineCode>{` namespace has been renamed to `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Subscriber`}</inlineCode>{`.\nSeveral plugins are shipping with the core Guzzle library under this namespace.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\Cookie`}</inlineCode>{`: Replaces the old CookiePlugin. Cookie jar\ncode has moved to `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Cookie`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\History`}</inlineCode>{`: Replaces the old HistoryPlugin.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\HttpError`}</inlineCode>{`: Throws errors when a bad HTTP response is\nreceived.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\Mock`}</inlineCode>{`: Replaces the old MockPlugin.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\Prepare`}</inlineCode>{`: Prepares the body of a request just before\nsending. This subscriber is attached to all requests by default.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\Redirect`}</inlineCode>{`: Replaces the RedirectPlugin.`}</li>\n    </ul>\n    <p>{`The following plugins have been removed (third-parties are free to re-implement\nthese if needed):`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Plugin\\\\Async`}</inlineCode>{` has been removed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Plugin\\\\CurlAuth`}</inlineCode>{` has been removed.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GuzzleHttp\\\\Plugin\\\\ErrorResponse\\\\ErrorResponsePlugin`}</inlineCode>{` has been removed. This\nfunctionality should instead be implemented with event listeners that occur\nafter normal response parsing occurs in the guzzle/command package.`}</li>\n    </ul>\n    <p>{`The following plugins are not part of the core Guzzle package, but are provided\nin separate repositories:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Plugin\\\\BackoffPlugin`}</inlineCode>{` has been rewritten to be much simpler\nto build custom retry policies using simple functions rather than various\nchained classes. See: `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/guzzle/retry-subscriber\"\n        }}>{`https://github.com/guzzle/retry-subscriber`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Plugin\\\\Cache\\\\CachePlugin`}</inlineCode>{` has moved to\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/guzzle/cache-subscriber\"\n        }}>{`https://github.com/guzzle/cache-subscriber`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Plugin\\\\Log\\\\LogPlugin`}</inlineCode>{` has moved to\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/guzzle/log-subscriber\"\n        }}>{`https://github.com/guzzle/log-subscriber`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Plugin\\\\Md5\\\\Md5Plugin`}</inlineCode>{` has moved to\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/guzzle/message-integrity-subscriber\"\n        }}>{`https://github.com/guzzle/message-integrity-subscriber`}</a></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Plugin\\\\Mock\\\\MockPlugin`}</inlineCode>{` has moved to\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Subscriber\\\\MockSubscriber`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Plugin\\\\Oauth\\\\OauthPlugin`}</inlineCode>{` has moved to\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/guzzle/oauth-subscriber\"\n        }}>{`https://github.com/guzzle/oauth-subscriber`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"service\"\n    }}>{`Service`}</h2>\n    <p>{`The service description layer of Guzzle has moved into two separate packages:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/guzzle/command\"\n        }}>{`https://github.com/guzzle/command`}</a>{` Provides a high level abstraction over web\nservices by representing web service operations using commands.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/guzzle/guzzle-services\"\n        }}>{`https://github.com/guzzle/guzzle-services`}</a>{` Provides an implementation of\nguzzle/command that provides request serialization and response parsing using\nGuzzle service descriptions.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"stream\"\n    }}>{`Stream`}</h2>\n    <p>{`Stream have moved to a separate package available at\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/guzzle/streams\"\n      }}>{`https://github.com/guzzle/streams`}</a>{`.`}</p>\n    <p><inlineCode parentName=\"p\">{`Guzzle\\\\Stream\\\\StreamInterface`}</inlineCode>{` has been given a large update to cleanly take\non the responsibilities of `}<inlineCode parentName=\"p\">{`Guzzle\\\\Http\\\\EntityBody`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`Guzzle\\\\Http\\\\EntityBodyInterface`}</inlineCode>{` now that they have been removed. The number\nof methods implemented by the `}<inlineCode parentName=\"p\">{`StreamInterface`}</inlineCode>{` has been drastically reduced to\nallow developers to more easily extend and decorate stream behavior.`}</p>\n    <h2 {...{\n      \"id\": \"removed-methods-from-streaminterface\"\n    }}>{`Removed methods from StreamInterface`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`getStream`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`setStream`}</inlineCode>{` have been removed to better encapsulate streams.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`getMetadata`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`setMetadata`}</inlineCode>{` have been removed in favor of\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Stream\\\\MetadataStreamInterface`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`getWrapper`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`getWrapperData`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`getStreamType`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`getUri`}</inlineCode>{` have all been\nremoved. This data is accessible when\nusing streams that implement `}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Stream\\\\MetadataStreamInterface`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rewind`}</inlineCode>{` has been removed. Use `}<inlineCode parentName=\"li\">{`seek(0)`}</inlineCode>{` for a similar behavior.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"renamed-methods\"\n    }}>{`Renamed methods`}</h2>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`detachStream`}</inlineCode>{` has been renamed to `}<inlineCode parentName=\"li\">{`detach`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`feof`}</inlineCode>{` has been renamed to `}<inlineCode parentName=\"li\">{`eof`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ftell`}</inlineCode>{` has been renamed to `}<inlineCode parentName=\"li\">{`tell`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`readLine`}</inlineCode>{` has moved from an instance method to a static class method of\n`}<inlineCode parentName=\"li\">{`GuzzleHttp\\\\Stream\\\\Stream`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"metadata-streams\"\n    }}>{`Metadata streams`}</h2>\n    <p><inlineCode parentName=\"p\">{`GuzzleHttp\\\\Stream\\\\MetadataStreamInterface`}</inlineCode>{` has been added to denote streams\nthat contain additional metadata accessible via `}<inlineCode parentName=\"p\">{`getMetadata()`}</inlineCode>{`.\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Stream\\\\StreamInterface::getMetadata`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Stream\\\\StreamInterface::setMetadata`}</inlineCode>{` have been removed.`}</p>\n    <h2 {...{\n      \"id\": \"streamrequestfactory\"\n    }}>{`StreamRequestFactory`}</h2>\n    <p>{`The entire concept of the StreamRequestFactory has been removed. The way this\nwas used in Guzzle 3 broke the actual interface of sending streaming requests\n(instead of getting back a Response, you got a StreamInterface). Streaming\nPHP requests are now implemented through the `}<inlineCode parentName=\"p\">{`GuzzleHttp\\\\Adapter\\\\StreamAdapter`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"36-to-37\"\n    }}>{`3.6 to 3.7`}</h2>\n    <h3 {...{\n      \"id\": \"deprecations\"\n    }}>{`Deprecations`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`You can now enable E_USER_DEPRECATED warnings to see if you are using any deprecated methods.:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`\\\\Guzzle\\\\Common\\\\Version::$emitWarnings = true;\n`}</code></pre>\n    <p>{`The following APIs and options have been marked as deprecated:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\Request::isResponseBodyRepeatable()`}</inlineCode>{` as deprecated. Use `}<inlineCode parentName=\"li\">{`$request->getResponseBody()->isRepeatable()`}</inlineCode>{` instead.`}</li>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\Request::canCache()`}</inlineCode>{` as deprecated. Use `}<inlineCode parentName=\"li\">{`Guzzle\\\\Plugin\\\\Cache\\\\DefaultCanCacheStrategy->canCacheRequest()`}</inlineCode>{` instead.`}</li>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\Request::canCache()`}</inlineCode>{` as deprecated. Use `}<inlineCode parentName=\"li\">{`Guzzle\\\\Plugin\\\\Cache\\\\DefaultCanCacheStrategy->canCacheRequest()`}</inlineCode>{` instead.`}</li>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\Request::setIsRedirect()`}</inlineCode>{` as deprecated. Use the HistoryPlugin instead.`}</li>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\Request::isRedirect()`}</inlineCode>{` as deprecated. Use the HistoryPlugin instead.`}</li>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Cache\\\\CacheAdapterFactory::factory()`}</inlineCode>{` as deprecated`}</li>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Service\\\\Client::enableMagicMethods()`}</inlineCode>{` as deprecated. Magic methods can no longer be disabled on a Guzzle\\\\Service\\\\Client.`}</li>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Parser\\\\Url\\\\UrlParser`}</inlineCode>{` as deprecated. Just use PHP's `}<inlineCode parentName=\"li\">{`parse_url()`}</inlineCode>{` and percent encode your UTF-8.`}</li>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Common\\\\Collection::inject()`}</inlineCode>{` as deprecated.`}</li>\n      <li parentName=\"ul\">{`Marked `}<inlineCode parentName=\"li\">{`Guzzle\\\\Plugin\\\\CurlAuth\\\\CurlAuthPlugin`}</inlineCode>{` as deprecated. Use\n`}<inlineCode parentName=\"li\">{`$client->getConfig()->setPath('request.options/auth', array('user', 'pass', 'Basic|Digest|NTLM|Any'));`}</inlineCode>{` or\n`}<inlineCode parentName=\"li\">{`$client->setDefaultOption('auth', array('user', 'pass', 'Basic|Digest|NTLM|Any'));`}</inlineCode></li>\n    </ul>\n    <p>{`3.7 introduces `}<inlineCode parentName=\"p\">{`request.options`}</inlineCode>{` as a parameter for a client configuration and as an optional argument to all creational\nrequest methods. When paired with a client's configuration settings, these options allow you to specify default settings\nfor various aspects of a request. Because these options make other previous configuration options redundant, several\nconfiguration options and methods of a client and AbstractCommand have been deprecated.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Marked `}<inlineCode parentName=\"p\">{`Guzzle\\\\Service\\\\Client::getDefaultHeaders()`}</inlineCode>{` as deprecated. Use `}<inlineCode parentName=\"p\">{`$client->getDefaultOption('headers')`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Marked `}<inlineCode parentName=\"p\">{`Guzzle\\\\Service\\\\Client::setDefaultHeaders()`}</inlineCode>{` as deprecated. Use `}<inlineCode parentName=\"p\">{`$client->setDefaultOption('headers/{header_name}', 'value')`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Marked 'request.params' for `}<inlineCode parentName=\"p\">{`Guzzle\\\\Http\\\\Client`}</inlineCode>{` as deprecated. Use `}<inlineCode parentName=\"p\">{`$client->setDefaultOption('params/{param_name}', 'value')`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Marked 'command.headers', 'command.response_body' and 'command.on_complete' as deprecated for AbstractCommand. These will work through Guzzle 4.0`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`  $command = $client->getCommand('foo', array(\n      'command.headers' => array('Test' => '123'),\n      'command.response_body' => '/path/to/file'\n  ));\n\n  // Should be changed to:\n\n  $command = $client->getCommand('foo', array(\n      'command.request_options' => array(\n          'headers' => array('Test' => '123'),\n          'save_as' => '/path/to/file'\n      )\n  ));\n`}</code></pre>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"interface-changes\"\n    }}>{`Interface changes`}</h3>\n    <p>{`Additions and changes (you will need to update any implementations or subclasses you may have created):`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Added an `}<inlineCode parentName=\"li\">{`$options`}</inlineCode>{` argument to the end of the following methods of `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\ClientInterface`}</inlineCode>{`:\ncreateRequest, head, delete, put, patch, post, options, prepareRequest`}</li>\n      <li parentName=\"ul\">{`Added an `}<inlineCode parentName=\"li\">{`$options`}</inlineCode>{` argument to the end of `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\Request\\\\RequestFactoryInterface::createRequest()`}</inlineCode></li>\n      <li parentName=\"ul\">{`Added an `}<inlineCode parentName=\"li\">{`applyOptions()`}</inlineCode>{` method to `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\Request\\\\RequestFactoryInterface`}</inlineCode></li>\n      <li parentName=\"ul\">{`Changed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\ClientInterface::get($uri = null, $headers = null, $body = null)`}</inlineCode>{` to\n`}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\ClientInterface::get($uri = null, $headers = null, $options = array())`}</inlineCode>{`. You can still pass in a\nresource, string, or EntityBody into the $options parameter to specify the download location of the response.`}</li>\n      <li parentName=\"ul\">{`Changed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Common\\\\Collection::__construct($data)`}</inlineCode>{` to no longer accepts a null value for `}<inlineCode parentName=\"li\">{`$data`}</inlineCode>{` but a\ndefault `}<inlineCode parentName=\"li\">{`array()`}</inlineCode></li>\n      <li parentName=\"ul\">{`Added `}<inlineCode parentName=\"li\">{`Guzzle\\\\Stream\\\\StreamInterface::isRepeatable`}</inlineCode></li>\n      <li parentName=\"ul\">{`Made `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Client::expandTemplate`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`getUriTemplate`}</inlineCode>{` protected methods.`}</li>\n    </ul>\n    <p>{`The following methods were removed from interfaces. All of these methods are still available in the concrete classes\nthat implement them, but you should update your code to use alternative methods:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\ClientInterface::setDefaultHeaders(). Use\n`}</inlineCode>{`$client->getConfig()->setPath('request.options/headers/{header_name}', 'value')`}<inlineCode parentName=\"li\">{`. or\n`}</inlineCode>{`$client->getConfig()->setPath('request.options/headers', array('header_name' => 'value'))`}<inlineCode parentName=\"li\">{`or`}</inlineCode>{`$client->setDefaultOption('headers/{header_name}', 'value')`}<inlineCode parentName=\"li\">{`. or\n`}</inlineCode>{`$client->setDefaultOption('headers', array('header_name' => 'value'))\\`.`}</li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\ClientInterface::getDefaultHeaders(). Use `}</inlineCode>{`$client->getConfig()->getPath('request.options/headers')\\`.`}</li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\ClientInterface::expandTemplate()`}</inlineCode>{`. This is an implementation detail.`}</li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\ClientInterface::setRequestFactory()`}</inlineCode>{`. This is an implementation detail.`}</li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\ClientInterface::getCurlMulti()`}</inlineCode>{`. This is a very specific implementation detail.`}</li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\RequestInterface::canCache`}</inlineCode>{`. Use the CachePlugin.`}</li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\RequestInterface::setIsRedirect`}</inlineCode>{`. Use the HistoryPlugin.`}</li>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\RequestInterface::isRedirect`}</inlineCode>{`. Use the HistoryPlugin.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"cache-plugin-breaking-changes\"\n    }}>{`Cache plugin breaking changes`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`CacheKeyProviderInterface and DefaultCacheKeyProvider are no longer used. All of this logic is handled in a\nCacheStorageInterface. These two objects and interface will be removed in a future version.`}</li>\n      <li parentName=\"ul\">{`Always setting X-cache headers on cached responses`}</li>\n      <li parentName=\"ul\">{`Default cache TTLs are now handled by the CacheStorageInterface of a CachePlugin`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CacheStorageInterface::cache($key, Response $response, $ttl = null)`}</inlineCode>{` has changed to `}<inlineCode parentName=\"li\">{`cache(RequestInterface\n$request, Response $response);`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CacheStorageInterface::fetch($key)`}</inlineCode>{` has changed to `}<inlineCode parentName=\"li\">{`fetch(RequestInterface $request);`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CacheStorageInterface::delete($key)`}</inlineCode>{` has changed to `}<inlineCode parentName=\"li\">{`delete(RequestInterface $request);`}</inlineCode></li>\n      <li parentName=\"ul\">{`Added `}<inlineCode parentName=\"li\">{`CacheStorageInterface::purge($url)`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`DefaultRevalidation::__construct(CacheKeyProviderInterface $cacheKey, CacheStorageInterface $cache, CachePlugin\n$plugin)`}</inlineCode>{` has changed to `}<inlineCode parentName=\"li\">{`DefaultRevalidation::__construct(CacheStorageInterface $cache,\nCanCacheStrategyInterface $canCache = null)`}</inlineCode></li>\n      <li parentName=\"ul\">{`Added `}<inlineCode parentName=\"li\">{`RevalidationInterface::shouldRevalidate(RequestInterface $request, Response $response)`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"35-to-36\"\n    }}>{`3.5 to 3.6`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Mixed casing of headers are now forced to be a single consistent casing across all values for that header.`}</li>\n      <li parentName=\"ul\">{`Messages internally use a HeaderCollection object to delegate handling case-insensitive header resolution`}</li>\n      <li parentName=\"ul\">{`Removed the whole changedHeader() function system of messages because all header changes now go through addHeader().\nFor example, setHeader() first removes the header using unset on a HeaderCollection and then calls addHeader().\nKeeping the Host header and URL host in sync is now handled by overriding the addHeader method in Request.`}</li>\n      <li parentName=\"ul\">{`Specific header implementations can be created for complex headers. When a message creates a header, it uses a\nHeaderFactory which can map specific headers to specific header classes. There is now a Link header and\nCacheControl header implementation.`}</li>\n      <li parentName=\"ul\">{`Moved getLinks() from Response to just be used on a Link header object.`}</li>\n    </ul>\n    <p>{`If you previously relied on Guzzle\\\\Http\\\\Message\\\\Header::raw(), then you will need to update your code to use the\nHeaderInterface (e.g. toArray(), getAll(), etc.).`}</p>\n    <h3 {...{\n      \"id\": \"interface-changes-1\"\n    }}>{`Interface changes`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Removed from interface: Guzzle\\\\Http\\\\ClientInterface::setUriTemplate`}</li>\n      <li parentName=\"ul\">{`Removed from interface: Guzzle\\\\Http\\\\ClientInterface::setCurlMulti()`}</li>\n      <li parentName=\"ul\">{`Removed Guzzle\\\\Http\\\\Message\\\\Request::receivedRequestHeader() and implemented this functionality in\nGuzzle\\\\Http\\\\Curl\\\\RequestMediator`}</li>\n      <li parentName=\"ul\">{`Removed the optional $asString parameter from MessageInterface::getHeader(). Just cast the header to a string.`}</li>\n      <li parentName=\"ul\">{`Removed the optional $tryChunkedTransfer option from Guzzle\\\\Http\\\\Message\\\\EntityEnclosingRequestInterface`}</li>\n      <li parentName=\"ul\">{`Removed the $asObjects argument from Guzzle\\\\Http\\\\Message\\\\MessageInterface::getHeaders()`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"removed-deprecated-functions\"\n    }}>{`Removed deprecated functions`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Removed Guzzle\\\\Parser\\\\ParserRegister::get(). Use getParser()`}</li>\n      <li parentName=\"ul\">{`Removed Guzzle\\\\Parser\\\\ParserRegister::set(). Use registerParser().`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"deprecations-1\"\n    }}>{`Deprecations`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`The ability to case-insensitively search for header values`}</li>\n      <li parentName=\"ul\">{`Guzzle\\\\Http\\\\Message\\\\Header::hasExactHeader`}</li>\n      <li parentName=\"ul\">{`Guzzle\\\\Http\\\\Message\\\\Header::raw. Use getAll()`}</li>\n      <li parentName=\"ul\">{`Deprecated cache control specific methods on Guzzle\\\\Http\\\\Message\\\\AbstractMessage. Use the CacheControl header object\ninstead.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"other-changes\"\n    }}>{`Other changes`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`All response header helper functions return a string rather than mixing Header objects and strings inconsistently`}</li>\n      <li parentName=\"ul\">{`Removed cURL blacklist support. This is no longer necessary now that Expect, Accept, etc. are managed by Guzzle\ndirectly via interfaces`}</li>\n      <li parentName=\"ul\">{`Removed the injecting of a request object onto a response object. The methods to get and set a request still exist\nbut are a no-op until removed.`}</li>\n      <li parentName=\"ul\">{`Most classes that used to require a `}<inlineCode parentName=\"li\">{`Guzzle\\\\Service\\\\Command\\\\CommandInterface`}</inlineCode>{` typehint now request a\n`}<inlineCode parentName=\"li\">{`Guzzle\\\\Service\\\\Command\\\\ArrayCommandInterface`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Added `}<inlineCode parentName=\"li\">{`Guzzle\\\\Http\\\\Message\\\\RequestInterface::startResponse()`}</inlineCode>{` to the RequestInterface to handle injecting a response\non a request while the request is still being transferred`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Guzzle\\\\Service\\\\Command\\\\CommandInterface`}</inlineCode>{` now extends from ToArrayInterface and ArrayAccess`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"33-to-34\"\n    }}>{`3.3 to 3.4`}</h2>\n    <p>{`Base URLs of a client now follow the rules of `}<a parentName=\"p\" {...{\n        \"href\": \"https://datatracker.ietf.org/doc/html/rfc3986#section-5.2.2\"\n      }}>{`https://datatracker.ietf.org/doc/html/rfc3986#section-5.2.2`}</a>{` when merging URLs.`}</p>\n    <h2 {...{\n      \"id\": \"32-to-33\"\n    }}>{`3.2 to 3.3`}</h2>\n    <h3 {...{\n      \"id\": \"responsegetetag-quote-stripping-removed\"\n    }}>{`Response::getEtag() quote stripping removed`}</h3>\n    <p><inlineCode parentName=\"p\">{`Guzzle\\\\Http\\\\Message\\\\Response::getEtag()`}</inlineCode>{` no longer strips quotes around the ETag response header`}</p>\n    <h3 {...{\n      \"id\": \"removed-guzzlehttputils\"\n    }}>{`Removed `}<inlineCode parentName=\"h3\">{`Guzzle\\\\Http\\\\Utils`}</inlineCode></h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Guzzle\\\\Http\\\\Utils`}</inlineCode>{` class was removed. This class was only used for testing.`}</p>\n    <h3 {...{\n      \"id\": \"stream-wrapper-and-type\"\n    }}>{`Stream wrapper and type`}</h3>\n    <p><inlineCode parentName=\"p\">{`Guzzle\\\\Stream\\\\Stream::getWrapper()`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Guzzle\\\\Stream\\\\Stream::getStreamType()`}</inlineCode>{` are no longer converted to lowercase.`}</p>\n    <h3 {...{\n      \"id\": \"curlemit_io-became-emit_io\"\n    }}>{`curl.emit_io became emit_io`}</h3>\n    <p>{`Emitting IO events from a RequestMediator is now a parameter that must be set in a request's curl options using the\n'emit_io' key. This was previously set under a request's parameters using 'curl.emit_io'`}</p>\n    <h2 {...{\n      \"id\": \"31-to-32\"\n    }}>{`3.1 to 3.2`}</h2>\n    <h3 {...{\n      \"id\": \"curlmulti-is-no-longer-reused-globally\"\n    }}>{`CurlMulti is no longer reused globally`}</h3>\n    <p>{`Before 3.2, the same CurlMulti object was reused globally for each client. This can cause issue where plugins added\nto a single client can pollute requests dispatched from other clients.`}</p>\n    <p>{`If you still wish to reuse the same CurlMulti object with each client, then you can add a listener to the\nServiceBuilder's `}<inlineCode parentName=\"p\">{`service_builder.create_client`}</inlineCode>{` event to inject a custom CurlMulti object into each client as it is\ncreated.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$multi = new Guzzle\\\\Http\\\\Curl\\\\CurlMulti();\n$builder = Guzzle\\\\Service\\\\Builder\\\\ServiceBuilder::factory('/path/to/config.json');\n$builder->addListener('service_builder.create_client', function ($event) use ($multi) {\n    $event['client']->setCurlMulti($multi);\n}\n});\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"no-default-path\"\n    }}>{`No default path`}</h3>\n    <p>{`URLs no longer have a default path value of '/' if no path was specified.`}</p>\n    <p>{`Before:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$request = $client->get('http://www.foo.com');\necho $request->getUrl();\n// >> http://www.foo.com/\n`}</code></pre>\n    <p>{`After:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$request = $client->get('http://www.foo.com');\necho $request->getUrl();\n// >> http://www.foo.com\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"less-verbose-badresponseexception\"\n    }}>{`Less verbose BadResponseException`}</h3>\n    <p>{`The exception message for `}<inlineCode parentName=\"p\">{`Guzzle\\\\Http\\\\Exception\\\\BadResponseException`}</inlineCode>{` no longer contains the full HTTP request and\nresponse information. You can, however, get access to the request and response object by calling `}<inlineCode parentName=\"p\">{`getRequest()`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`getResponse()`}</inlineCode>{` on the exception object.`}</p>\n    <h3 {...{\n      \"id\": \"query-parameter-aggregation\"\n    }}>{`Query parameter aggregation`}</h3>\n    <p>{`Multi-valued query parameters are no longer aggregated using a callback function. `}<inlineCode parentName=\"p\">{`Guzzle\\\\Http\\\\Query`}</inlineCode>{` now has a\nsetAggregator() method that accepts a `}<inlineCode parentName=\"p\">{`Guzzle\\\\Http\\\\QueryAggregator\\\\QueryAggregatorInterface`}</inlineCode>{` object. This object is\nresponsible for handling the aggregation of multi-valued query string variables into a flattened hash.`}</p>\n    <h2 {...{\n      \"id\": \"28-to-3x\"\n    }}>{`2.8 to 3.x`}</h2>\n    <h3 {...{\n      \"id\": \"guzzleserviceinspector\"\n    }}>{`Guzzle\\\\Service\\\\Inspector`}</h3>\n    <p>{`Change `}<inlineCode parentName=\"p\">{`\\\\Guzzle\\\\Service\\\\Inspector::fromConfig`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`\\\\Guzzle\\\\Common\\\\Collection::fromConfig`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Before`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Guzzle\\\\Service\\\\Inspector;\n\nclass YourClient extends \\\\Guzzle\\\\Service\\\\Client\n{\n    public static function factory($config = array())\n    {\n        $default = array();\n        $required = array('base_url', 'username', 'api_key');\n        $config = Inspector::fromConfig($config, $default, $required);\n\n        $client = new self(\n            $config->get('base_url'),\n            $config->get('username'),\n            $config->get('api_key')\n        );\n        $client->setConfig($config);\n\n        $client->setDescription(ServiceDescription::factory(__DIR__ . DIRECTORY_SEPARATOR . 'client.json'));\n\n        return $client;\n    }\n`}</code></pre>\n    <p><strong parentName=\"p\">{`After`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Guzzle\\\\Common\\\\Collection;\n\nclass YourClient extends \\\\Guzzle\\\\Service\\\\Client\n{\n    public static function factory($config = array())\n    {\n        $default = array();\n        $required = array('base_url', 'username', 'api_key');\n        $config = Collection::fromConfig($config, $default, $required);\n\n        $client = new self(\n            $config->get('base_url'),\n            $config->get('username'),\n            $config->get('api_key')\n        );\n        $client->setConfig($config);\n\n        $client->setDescription(ServiceDescription::factory(__DIR__ . DIRECTORY_SEPARATOR . 'client.json'));\n\n        return $client;\n    }\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"convert-xml-service-descriptions-to-json\"\n    }}>{`Convert XML Service Descriptions to JSON`}</h3>\n    <p><strong parentName=\"p\">{`Before`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<client>\n    <commands>\n        <!-- Groups -->\n        <command name=\"list_groups\" method=\"GET\" uri=\"groups.json\">\n            <doc>Get a list of groups</doc>\n        </command>\n        <command name=\"search_groups\" method=\"GET\" uri='search.json?query=\"{{query}} type:group\"'>\n            <doc>Uses a search query to get a list of groups</doc>\n            <param name=\"query\" type=\"string\" required=\"true\" />\n        </command>\n        <command name=\"create_group\" method=\"POST\" uri=\"groups.json\">\n            <doc>Create a group</doc>\n            <param name=\"data\" type=\"array\" location=\"body\" filters=\"json_encode\" doc=\"Group JSON\"/>\n            <param name=\"Content-Type\" location=\"header\" static=\"application/json\"/>\n        </command>\n        <command name=\"delete_group\" method=\"DELETE\" uri=\"groups/{{id}}.json\">\n            <doc>Delete a group by ID</doc>\n            <param name=\"id\" type=\"integer\" required=\"true\"/>\n        </command>\n        <command name=\"get_group\" method=\"GET\" uri=\"groups/{{id}}.json\">\n            <param name=\"id\" type=\"integer\" required=\"true\"/>\n        </command>\n        <command name=\"update_group\" method=\"PUT\" uri=\"groups/{{id}}.json\">\n            <doc>Update a group</doc>\n            <param name=\"id\" type=\"integer\" required=\"true\"/>\n            <param name=\"data\" type=\"array\" location=\"body\" filters=\"json_encode\" doc=\"Group JSON\"/>\n            <param name=\"Content-Type\" location=\"header\" static=\"application/json\"/>\n        </command>\n    </commands>\n</client>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`After`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"name\":       \"Zendesk REST API v2\",\n    \"apiVersion\": \"2012-12-31\",\n    \"description\":\"Provides access to Zendesk views, groups, tickets, ticket fields, and users\",\n    \"operations\": {\n        \"list_groups\":  {\n            \"httpMethod\":\"GET\",\n            \"uri\":       \"groups.json\",\n            \"summary\":   \"Get a list of groups\"\n        },\n        \"search_groups\":{\n            \"httpMethod\":\"GET\",\n            \"uri\":       \"search.json?query=\\\\\"{query} type:group\\\\\"\",\n            \"summary\":   \"Uses a search query to get a list of groups\",\n            \"parameters\":{\n                \"query\":{\n                    \"location\":   \"uri\",\n                    \"description\":\"Zendesk Search Query\",\n                    \"type\":       \"string\",\n                    \"required\":   true\n                }\n            }\n        },\n        \"create_group\": {\n            \"httpMethod\":\"POST\",\n            \"uri\":       \"groups.json\",\n            \"summary\":   \"Create a group\",\n            \"parameters\":{\n                \"data\":        {\n                    \"type\":       \"array\",\n                    \"location\":   \"body\",\n                    \"description\":\"Group JSON\",\n                    \"filters\":    \"json_encode\",\n                    \"required\":   true\n                },\n                \"Content-Type\":{\n                    \"type\":    \"string\",\n                    \"location\":\"header\",\n                    \"static\":  \"application/json\"\n                }\n            }\n        },\n        \"delete_group\": {\n            \"httpMethod\":\"DELETE\",\n            \"uri\":       \"groups/{id}.json\",\n            \"summary\":   \"Delete a group\",\n            \"parameters\":{\n                \"id\":{\n                    \"location\":   \"uri\",\n                    \"description\":\"Group to delete by ID\",\n                    \"type\":       \"integer\",\n                    \"required\":   true\n                }\n            }\n        },\n        \"get_group\":    {\n            \"httpMethod\":\"GET\",\n            \"uri\":       \"groups/{id}.json\",\n            \"summary\":   \"Get a ticket\",\n            \"parameters\":{\n                \"id\":{\n                    \"location\":   \"uri\",\n                    \"description\":\"Group to get by ID\",\n                    \"type\":       \"integer\",\n                    \"required\":   true\n                }\n            }\n        },\n        \"update_group\": {\n            \"httpMethod\":\"PUT\",\n            \"uri\":       \"groups/{id}.json\",\n            \"summary\":   \"Update a group\",\n            \"parameters\":{\n                \"id\":          {\n                    \"location\":   \"uri\",\n                    \"description\":\"Group to update by ID\",\n                    \"type\":       \"integer\",\n                    \"required\":   true\n                },\n                \"data\":        {\n                    \"type\":       \"array\",\n                    \"location\":   \"body\",\n                    \"description\":\"Group JSON\",\n                    \"filters\":    \"json_encode\",\n                    \"required\":   true\n                },\n                \"Content-Type\":{\n                    \"type\":    \"string\",\n                    \"location\":\"header\",\n                    \"static\":  \"application/json\"\n                }\n            }\n        }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"guzzleservicedescriptionservicedescription\"\n    }}>{`Guzzle\\\\Service\\\\Description\\\\ServiceDescription`}</h3>\n    <p>{`Commands are now called Operations`}</p>\n    <p><strong parentName=\"p\">{`Before`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Guzzle\\\\Service\\\\Description\\\\ServiceDescription;\n\n$sd = new ServiceDescription();\n$sd->getCommands();     // @returns ApiCommandInterface[]\n$sd->hasCommand($name);\n$sd->getCommand($name); // @returns ApiCommandInterface|null\n$sd->addCommand($command); // @param ApiCommandInterface $command\n`}</code></pre>\n    <p><strong parentName=\"p\">{`After`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Guzzle\\\\Service\\\\Description\\\\ServiceDescription;\n\n$sd = new ServiceDescription();\n$sd->getOperations();           // @returns OperationInterface[]\n$sd->hasOperation($name);\n$sd->getOperation($name);       // @returns OperationInterface|null\n$sd->addOperation($operation);  // @param OperationInterface $operation\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"guzzlecommoninflectioninflector\"\n    }}>{`Guzzle\\\\Common\\\\Inflection\\\\Inflector`}</h3>\n    <p>{`Namespace is now `}<inlineCode parentName=\"p\">{`Guzzle\\\\Inflection\\\\Inflector`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"guzzlehttpplugin\"\n    }}>{`Guzzle\\\\Http\\\\Plugin`}</h3>\n    <p>{`Namespace is now `}<inlineCode parentName=\"p\">{`Guzzle\\\\Plugin`}</inlineCode>{`. Many other changes occur within this namespace and are detailed in their own sections below.`}</p>\n    <h3 {...{\n      \"id\": \"guzzlehttppluginlogplugin-and-guzzlecommonlog\"\n    }}>{`Guzzle\\\\Http\\\\Plugin\\\\LogPlugin and Guzzle\\\\Common\\\\Log`}</h3>\n    <p>{`Now `}<inlineCode parentName=\"p\">{`Guzzle\\\\Plugin\\\\Log\\\\LogPlugin`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Guzzle\\\\Log`}</inlineCode>{` respectively.`}</p>\n    <p><strong parentName=\"p\">{`Before`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Guzzle\\\\Common\\\\Log\\\\ClosureLogAdapter;\nuse Guzzle\\\\Http\\\\Plugin\\\\LogPlugin;\n\n/** @var \\\\Guzzle\\\\Http\\\\Client */\n$client;\n\n// $verbosity is an integer indicating desired message verbosity level\n$client->addSubscriber(new LogPlugin(new ClosureLogAdapter(function($m) { echo $m; }, $verbosity = LogPlugin::LOG_VERBOSE);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`After`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Guzzle\\\\Log\\\\ClosureLogAdapter;\nuse Guzzle\\\\Log\\\\MessageFormatter;\nuse Guzzle\\\\Plugin\\\\Log\\\\LogPlugin;\n\n/** @var \\\\Guzzle\\\\Http\\\\Client */\n$client;\n\n// $format is a string indicating desired message format -- @see MessageFormatter\n$client->addSubscriber(new LogPlugin(new ClosureLogAdapter(function($m) { echo $m; }, $format = MessageFormatter::DEBUG_FORMAT);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"guzzlehttpplugincurlauthplugin\"\n    }}>{`Guzzle\\\\Http\\\\Plugin\\\\CurlAuthPlugin`}</h3>\n    <p>{`Now `}<inlineCode parentName=\"p\">{`Guzzle\\\\Plugin\\\\CurlAuth\\\\CurlAuthPlugin`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"guzzlehttppluginexponentialbackoffplugin\"\n    }}>{`Guzzle\\\\Http\\\\Plugin\\\\ExponentialBackoffPlugin`}</h3>\n    <p>{`Now `}<inlineCode parentName=\"p\">{`Guzzle\\\\Plugin\\\\Backoff\\\\BackoffPlugin`}</inlineCode>{`, and other changes.`}</p>\n    <p><strong parentName=\"p\">{`Before`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Guzzle\\\\Http\\\\Plugin\\\\ExponentialBackoffPlugin;\n\n$backoffPlugin = new ExponentialBackoffPlugin($maxRetries, array_merge(\n        ExponentialBackoffPlugin::getDefaultFailureCodes(), array(429)\n    ));\n\n$client->addSubscriber($backoffPlugin);\n`}</code></pre>\n    <p><strong parentName=\"p\">{`After`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Guzzle\\\\Plugin\\\\Backoff\\\\BackoffPlugin;\nuse Guzzle\\\\Plugin\\\\Backoff\\\\HttpBackoffStrategy;\n\n// Use convenient factory method instead -- see implementation for ideas of what\n// you can do with chaining backoff strategies\n$backoffPlugin = BackoffPlugin::getExponentialBackoff($maxRetries, array_merge(\n        HttpBackoffStrategy::getDefaultFailureCodes(), array(429)\n    ));\n$client->addSubscriber($backoffPlugin);\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"known-issues\"\n    }}>{`Known Issues`}</h3>\n    <h4 {...{\n      \"id\": \"bug-accept-encoding-header-behavior-changed-unintentionally\"\n    }}>{`[BUG]`}{` Accept-Encoding header behavior changed unintentionally.`}</h4>\n    <p>{`(See #217) (Fixed in 09daeb8c666fb44499a0646d655a8ae36456575e)`}</p>\n    <p>{`In version 2.8 setting the `}<inlineCode parentName=\"p\">{`Accept-Encoding`}</inlineCode>{` header would set the CURLOPT_ENCODING option, which permitted cURL to\nproperly handle gzip/deflate compressed responses from the server. In versions affected by this bug this does not happen.\nSee issue #217 for a workaround, or use a version containing the fix.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}