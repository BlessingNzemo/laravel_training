{"expireTime":9007200985218039000,"key":"gatsby-plugin-mdx-entire-payload-42bfb284a56e8aaaa6e72a0ef272f90a-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Dot Access Data","position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":16,"offset":157},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":8,"column":16,"offset":173},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://packagist.org/packages/dflydev/dot-access-data","children":[{"type":"image","title":null,"url":"https://img.shields.io/packagist/v/dflydev/dot-access-data.svg?style=flat-square","alt":"Latest Version","position":{"start":{"line":10,"column":2,"offset":176},"end":{"line":10,"column":101,"offset":275},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":175},"end":{"line":10,"column":158,"offset":332},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":10,"column":158,"offset":332},"end":{"line":11,"column":1,"offset":333},"indent":[1]}},{"type":"link","title":null,"url":"https://packagist.org/packages/dflydev/dot-access-data","children":[{"type":"image","title":null,"url":"https://img.shields.io/packagist/dt/dflydev/dot-access-data.svg?style=flat-square","alt":"Total Downloads","position":{"start":{"line":11,"column":2,"offset":334},"end":{"line":11,"column":103,"offset":435},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":333},"end":{"line":11,"column":160,"offset":492},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":11,"column":160,"offset":492},"end":{"line":12,"column":1,"offset":493},"indent":[1]}},{"type":"link","title":null,"url":"LICENSE","children":[{"type":"image","title":null,"url":"https://img.shields.io/badge/License-MIT-brightgreen.svg?style=flat-square","alt":"Software License","position":{"start":{"line":12,"column":2,"offset":494},"end":{"line":12,"column":97,"offset":589},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":493},"end":{"line":12,"column":107,"offset":599},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":12,"column":107,"offset":599},"end":{"line":13,"column":1,"offset":600},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/dflydev/dflydev-dot-access-data/actions?query=workflow%3ATests+branch%3Amain","children":[{"type":"image","title":null,"url":"https://img.shields.io/github/workflow/status/dflydev/dflydev-dot-access-data/Tests/main.svg?style=flat-square","alt":"Build Status","position":{"start":{"line":13,"column":2,"offset":601},"end":{"line":13,"column":129,"offset":728},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":600},"end":{"line":13,"column":227,"offset":826},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":227,"offset":826},"end":{"line":14,"column":1,"offset":827},"indent":[1]}},{"type":"link","title":null,"url":"https://scrutinizer-ci.com/g/dflydev/dflydev-dot-access-data/code-structure/","children":[{"type":"image","title":null,"url":"https://img.shields.io/scrutinizer/coverage/g/dflydev/dflydev-dot-access-data.svg?style=flat-square","alt":"Coverage Status","position":{"start":{"line":14,"column":2,"offset":828},"end":{"line":14,"column":121,"offset":947},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":827},"end":{"line":14,"column":200,"offset":1026},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":14,"column":200,"offset":1026},"end":{"line":15,"column":1,"offset":1027},"indent":[1]}},{"type":"link","title":null,"url":"https://scrutinizer-ci.com/g/dflydev/dflydev-dot-access-data","children":[{"type":"image","title":null,"url":"https://img.shields.io/scrutinizer/g/dflydev/dflydev-dot-access-data.svg?style=flat-square","alt":"Quality Score","position":{"start":{"line":15,"column":2,"offset":1028},"end":{"line":15,"column":110,"offset":1136},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1027},"end":{"line":15,"column":173,"offset":1199},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":175},"end":{"line":15,"column":173,"offset":1199},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Given a deep data structure, access data by dot notation.","position":{"start":{"line":17,"column":1,"offset":1201},"end":{"line":17,"column":58,"offset":1258},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1201},"end":{"line":17,"column":58,"offset":1258},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Requirements","position":{"start":{"line":20,"column":1,"offset":1261},"end":{"line":20,"column":13,"offset":1273},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1261},"end":{"line":21,"column":13,"offset":1286},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"PHP (7.1+)","position":{"start":{"line":23,"column":4,"offset":1291},"end":{"line":23,"column":14,"offset":1301},"indent":[]}}],"position":{"start":{"line":23,"column":4,"offset":1291},"end":{"line":23,"column":14,"offset":1301},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1288},"end":{"line":23,"column":14,"offset":1301},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1288},"end":{"line":23,"column":14,"offset":1301},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"For PHP (5.3+) please refer to version ","position":{"start":{"line":25,"column":3,"offset":1305},"end":{"line":25,"column":42,"offset":1344},"indent":[]}},{"type":"inlineCode","value":"1.0","position":{"start":{"line":25,"column":42,"offset":1344},"end":{"line":25,"column":47,"offset":1349},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":25,"column":47,"offset":1349},"end":{"line":25,"column":48,"offset":1350},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":1305},"end":{"line":25,"column":48,"offset":1350},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1303},"end":{"line":25,"column":48,"offset":1350},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":28,"column":1,"offset":1353},"end":{"line":28,"column":6,"offset":1358},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1353},"end":{"line":29,"column":6,"offset":1364},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Abstract example:","position":{"start":{"line":31,"column":1,"offset":1366},"end":{"line":31,"column":18,"offset":1383},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1366},"end":{"line":31,"column":18,"offset":1383},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Dflydev\\DotAccessData\\Data;\n\n$data = new Data;\n\n$data->set('a.b.c', 'C');\n$data->set('a.b.d', 'D1');\n$data->append('a.b.d', 'D2');\n$data->set('a.b.e', ['E0', 'E1', 'E2']);\n\n// C\n$data->get('a.b.c');\n\n// ['D1', 'D2']\n$data->get('a.b.d');\n\n// ['E0', 'E1', 'E2']\n$data->get('a.b.e');\n\n// true\n$data->has('a.b.c');\n\n// false\n$data->has('a.b.d.j');\n\n\n// 'some-default-value'\n$data->get('some.path.that.does.not.exist', 'some-default-value');\n\n// throws a MissingPathException because no default was given\n$data->get('some.path.that.does.not.exist');","position":{"start":{"line":33,"column":1,"offset":1385},"end":{"line":64,"column":4,"offset":1944},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"A more concrete example:","position":{"start":{"line":66,"column":1,"offset":1946},"end":{"line":66,"column":25,"offset":1970},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1946},"end":{"line":66,"column":25,"offset":1970},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use Dflydev\\DotAccessData\\Data;\n\n$data = new Data([\n    'hosts' => [\n        'hewey' => [\n            'username' => 'hman',\n            'password' => 'HPASS',\n            'roles'    => ['web'],\n        ],\n        'dewey' => [\n            'username' => 'dman',\n            'password' => 'D---S',\n            'roles'    => ['web', 'db'],\n            'nick'     => 'dewey dman',\n        ],\n        'lewey' => [\n            'username' => 'lman',\n            'password' => 'LP@$$',\n            'roles'    => ['db'],\n        ],\n    ],\n]);\n\n// hman\n$username = $data->get('hosts.hewey.username');\n// HPASS\n$password = $data->get('hosts.hewey.password');\n// ['web']\n$roles = $data->get('hosts.hewey.roles');\n// dewey dman\n$nick = $data->get('hosts.dewey.nick');\n// Unknown\n$nick = $data->get('hosts.lewey.nick', 'Unknown');\n\n// DataInterface instance\n$dewey = $data->getData('hosts.dewey');\n// dman\n$username = $dewey->get('username');\n// D---S\n$password = $dewey->get('password');\n// ['web', 'db']\n$roles = $dewey->get('roles');\n\n// No more lewey\n$data->remove('hosts.lewey');\n\n// Add DB to hewey's roles\n$data->append('hosts.hewey.roles', 'db');\n\n$data->set('hosts.april', [\n    'username' => 'aman',\n    'password' => '@---S',\n    'roles'    => ['web'],\n]);\n\n// Check if a key exists (true to this case)\n$hasKey = $data->has('hosts.dewey.username');","position":{"start":{"line":68,"column":1,"offset":1972},"end":{"line":126,"column":4,"offset":3327},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Data","position":{"start":{"line":128,"column":1,"offset":3329},"end":{"line":128,"column":7,"offset":3335},"indent":[]}},{"type":"text","value":" may be used as an array, since it implements ","position":{"start":{"line":128,"column":7,"offset":3335},"end":{"line":128,"column":53,"offset":3381},"indent":[]}},{"type":"inlineCode","value":"ArrayAccess","position":{"start":{"line":128,"column":53,"offset":3381},"end":{"line":128,"column":66,"offset":3394},"indent":[]}},{"type":"text","value":" interface:","position":{"start":{"line":128,"column":66,"offset":3394},"end":{"line":128,"column":77,"offset":3405},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":3329},"end":{"line":128,"column":77,"offset":3405},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"// Get\n$data->get('name') === $data['name']; // true\n\n$data['name'] = 'Dewey';\n// is equivalent to\n$data->set($name, 'Dewey');\n\nisset($data['name']) === $data->has('name');\n\n// Remove key\nunset($data['name']);","position":{"start":{"line":130,"column":1,"offset":3407},"end":{"line":142,"column":4,"offset":3627},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"/","position":{"start":{"line":144,"column":1,"offset":3629},"end":{"line":144,"column":4,"offset":3632},"indent":[]}},{"type":"text","value":" can also be used as a path delimiter:","position":{"start":{"line":144,"column":4,"offset":3632},"end":{"line":144,"column":42,"offset":3670},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":3629},"end":{"line":144,"column":42,"offset":3670},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"$data->set('a/b/c', 'd');\necho $data->get('a/b/c'); // \"d\"\n\n$data->get('a/b/c') === $data->get('a.b.c'); // true","position":{"start":{"line":146,"column":1,"offset":3672},"end":{"line":151,"column":4,"offset":3795},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"License","position":{"start":{"line":153,"column":1,"offset":3797},"end":{"line":153,"column":8,"offset":3804},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":3797},"end":{"line":154,"column":8,"offset":3812},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"This library is licensed under the MIT License - see the LICENSE file\nfor details.","position":{"start":{"line":156,"column":1,"offset":3814},"end":{"line":157,"column":13,"offset":3896},"indent":[1]}}],"position":{"start":{"line":156,"column":1,"offset":3814},"end":{"line":157,"column":13,"offset":3896},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Community","position":{"start":{"line":160,"column":1,"offset":3899},"end":{"line":160,"column":10,"offset":3908},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":3899},"end":{"line":161,"column":10,"offset":3918},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"If you have questions or want to help out, join us in the\n","position":{"start":{"line":163,"column":1,"offset":3920},"end":{"line":164,"column":1,"offset":3978},"indent":[1]}},{"type":"link","title":null,"url":"irc://irc.freenode.net/#dflydev","children":[{"type":"text","value":"#dflydev","position":{"start":{"line":164,"column":2,"offset":3979},"end":{"line":164,"column":10,"offset":3987},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":3978},"end":{"line":164,"column":44,"offset":4021},"indent":[]}},{"type":"text","value":" channel on irc.freenode.net.","position":{"start":{"line":164,"column":44,"offset":4021},"end":{"line":164,"column":73,"offset":4050},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":3920},"end":{"line":164,"column":73,"offset":4050},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":167,"column":1,"offset":4053},"end":{"line":167,"column":31,"offset":4083},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":167,"column":31,"offset":4083}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dot-access-data\"\n    }}>{`Dot Access Data`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/dflydev/dot-access-data\"\n      }}><img alt=\"Latest Version\" src=\"https://img.shields.io/packagist/v/dflydev/dot-access-data.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/dflydev/dot-access-data\"\n      }}><img alt=\"Total Downloads\" src=\"https://img.shields.io/packagist/dt/dflydev/dot-access-data.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"LICENSE\"\n      }}><img alt=\"Software License\" src=\"https://img.shields.io/badge/License-MIT-brightgreen.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/dflydev/dflydev-dot-access-data/actions?query=workflow%3ATests+branch%3Amain\"\n      }}><img alt=\"Build Status\" src=\"https://img.shields.io/github/workflow/status/dflydev/dflydev-dot-access-data/Tests/main.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://scrutinizer-ci.com/g/dflydev/dflydev-dot-access-data/code-structure/\"\n      }}><img alt=\"Coverage Status\" src=\"https://img.shields.io/scrutinizer/coverage/g/dflydev/dflydev-dot-access-data.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://scrutinizer-ci.com/g/dflydev/dflydev-dot-access-data\"\n      }}><img alt=\"Quality Score\" src=\"https://img.shields.io/scrutinizer/g/dflydev/dflydev-dot-access-data.svg?style=flat-square\" /></a></p>\n    <p>{`Given a deep data structure, access data by dot notation.`}</p>\n    <h2 {...{\n      \"id\": \"requirements\"\n    }}>{`Requirements`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`PHP (7.1+)`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`For PHP (5.3+) please refer to version `}<inlineCode parentName=\"p\">{`1.0`}</inlineCode>{`.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Abstract example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Dflydev\\\\DotAccessData\\\\Data;\n\n$data = new Data;\n\n$data->set('a.b.c', 'C');\n$data->set('a.b.d', 'D1');\n$data->append('a.b.d', 'D2');\n$data->set('a.b.e', ['E0', 'E1', 'E2']);\n\n// C\n$data->get('a.b.c');\n\n// ['D1', 'D2']\n$data->get('a.b.d');\n\n// ['E0', 'E1', 'E2']\n$data->get('a.b.e');\n\n// true\n$data->has('a.b.c');\n\n// false\n$data->has('a.b.d.j');\n\n\n// 'some-default-value'\n$data->get('some.path.that.does.not.exist', 'some-default-value');\n\n// throws a MissingPathException because no default was given\n$data->get('some.path.that.does.not.exist');\n`}</code></pre>\n    <p>{`A more concrete example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use Dflydev\\\\DotAccessData\\\\Data;\n\n$data = new Data([\n    'hosts' => [\n        'hewey' => [\n            'username' => 'hman',\n            'password' => 'HPASS',\n            'roles'    => ['web'],\n        ],\n        'dewey' => [\n            'username' => 'dman',\n            'password' => 'D---S',\n            'roles'    => ['web', 'db'],\n            'nick'     => 'dewey dman',\n        ],\n        'lewey' => [\n            'username' => 'lman',\n            'password' => 'LP@$$',\n            'roles'    => ['db'],\n        ],\n    ],\n]);\n\n// hman\n$username = $data->get('hosts.hewey.username');\n// HPASS\n$password = $data->get('hosts.hewey.password');\n// ['web']\n$roles = $data->get('hosts.hewey.roles');\n// dewey dman\n$nick = $data->get('hosts.dewey.nick');\n// Unknown\n$nick = $data->get('hosts.lewey.nick', 'Unknown');\n\n// DataInterface instance\n$dewey = $data->getData('hosts.dewey');\n// dman\n$username = $dewey->get('username');\n// D---S\n$password = $dewey->get('password');\n// ['web', 'db']\n$roles = $dewey->get('roles');\n\n// No more lewey\n$data->remove('hosts.lewey');\n\n// Add DB to hewey's roles\n$data->append('hosts.hewey.roles', 'db');\n\n$data->set('hosts.april', [\n    'username' => 'aman',\n    'password' => '@---S',\n    'roles'    => ['web'],\n]);\n\n// Check if a key exists (true to this case)\n$hasKey = $data->has('hosts.dewey.username');\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Data`}</inlineCode>{` may be used as an array, since it implements `}<inlineCode parentName=\"p\">{`ArrayAccess`}</inlineCode>{` interface:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`// Get\n$data->get('name') === $data['name']; // true\n\n$data['name'] = 'Dewey';\n// is equivalent to\n$data->set($name, 'Dewey');\n\nisset($data['name']) === $data->has('name');\n\n// Remove key\nunset($data['name']);\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`/`}</inlineCode>{` can also be used as a path delimiter:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`$data->set('a/b/c', 'd');\necho $data->get('a/b/c'); // \"d\"\n\n$data->get('a/b/c') === $data->get('a.b.c'); // true\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"license\"\n    }}>{`License`}</h2>\n    <p>{`This library is licensed under the MIT License - see the LICENSE file\nfor details.`}</p>\n    <h2 {...{\n      \"id\": \"community\"\n    }}>{`Community`}</h2>\n    <p>{`If you have questions or want to help out, join us in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"irc://irc.freenode.net/#dflydev\"\n      }}>{`#dflydev`}</a>{` channel on irc.freenode.net.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}