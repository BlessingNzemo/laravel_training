{"expireTime":9007200985218064000,"key":"gatsby-plugin-mdx-entire-payload-cd073d6c600e1d4bafa5a9ab9fc22895-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"CHANGELOG","position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":10,"offset":151},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":8,"column":10,"offset":161},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"7.1","position":{"start":{"line":10,"column":1,"offset":163},"end":{"line":10,"column":4,"offset":166},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":163},"end":{"line":11,"column":4,"offset":170},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Add support for getting all the enum cases with ","position":{"start":{"line":13,"column":4,"offset":175},"end":{"line":13,"column":52,"offset":223},"indent":[]}},{"type":"inlineCode","value":"!php/enum Foo","position":{"start":{"line":13,"column":52,"offset":223},"end":{"line":13,"column":67,"offset":238},"indent":[]}}],"position":{"start":{"line":13,"column":4,"offset":175},"end":{"line":13,"column":67,"offset":238},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":172},"end":{"line":13,"column":67,"offset":238},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":172},"end":{"line":13,"column":67,"offset":238},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"7.0","position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":15,"column":4,"offset":243},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":240},"end":{"line":16,"column":4,"offset":247},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Remove the ","position":{"start":{"line":18,"column":4,"offset":252},"end":{"line":18,"column":15,"offset":263},"indent":[]}},{"type":"inlineCode","value":"!php/const:","position":{"start":{"line":18,"column":15,"offset":263},"end":{"line":18,"column":28,"offset":276},"indent":[]}},{"type":"text","value":" tag, use ","position":{"start":{"line":18,"column":28,"offset":276},"end":{"line":18,"column":38,"offset":286},"indent":[]}},{"type":"inlineCode","value":"!php/const","position":{"start":{"line":18,"column":38,"offset":286},"end":{"line":18,"column":50,"offset":298},"indent":[]}},{"type":"text","value":" instead (without the colon)","position":{"start":{"line":18,"column":50,"offset":298},"end":{"line":18,"column":78,"offset":326},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":252},"end":{"line":18,"column":78,"offset":326},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":249},"end":{"line":18,"column":78,"offset":326},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":249},"end":{"line":18,"column":78,"offset":326},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6.3","position":{"start":{"line":20,"column":1,"offset":328},"end":{"line":20,"column":4,"offset":331},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":328},"end":{"line":21,"column":4,"offset":335},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Add support to dump int keys as strings by using the ","position":{"start":{"line":23,"column":4,"offset":340},"end":{"line":23,"column":57,"offset":393},"indent":[]}},{"type":"inlineCode","value":"Yaml::DUMP_NUMERIC_KEY_AS_STRING","position":{"start":{"line":23,"column":57,"offset":393},"end":{"line":23,"column":91,"offset":427},"indent":[]}},{"type":"text","value":" flag","position":{"start":{"line":23,"column":91,"offset":427},"end":{"line":23,"column":96,"offset":432},"indent":[]}}],"position":{"start":{"line":23,"column":4,"offset":340},"end":{"line":23,"column":96,"offset":432},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":337},"end":{"line":23,"column":96,"offset":432},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":337},"end":{"line":23,"column":96,"offset":432},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6.2","position":{"start":{"line":25,"column":1,"offset":434},"end":{"line":25,"column":4,"offset":437},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":434},"end":{"line":26,"column":4,"offset":441},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Add support for ","position":{"start":{"line":28,"column":4,"offset":446},"end":{"line":28,"column":20,"offset":462},"indent":[]}},{"type":"inlineCode","value":"!php/enum","position":{"start":{"line":28,"column":20,"offset":462},"end":{"line":28,"column":31,"offset":473},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":28,"column":31,"offset":473},"end":{"line":28,"column":36,"offset":478},"indent":[]}},{"type":"inlineCode","value":"!php/enum *->value","position":{"start":{"line":28,"column":36,"offset":478},"end":{"line":28,"column":56,"offset":498},"indent":[]}}],"position":{"start":{"line":28,"column":4,"offset":446},"end":{"line":28,"column":56,"offset":498},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":443},"end":{"line":28,"column":56,"offset":498},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecate the ","position":{"start":{"line":29,"column":4,"offset":502},"end":{"line":29,"column":18,"offset":516},"indent":[]}},{"type":"inlineCode","value":"!php/const:","position":{"start":{"line":29,"column":18,"offset":516},"end":{"line":29,"column":31,"offset":529},"indent":[]}},{"type":"text","value":" tag in key which will be replaced by the ","position":{"start":{"line":29,"column":31,"offset":529},"end":{"line":29,"column":73,"offset":571},"indent":[]}},{"type":"inlineCode","value":"!php/const","position":{"start":{"line":29,"column":73,"offset":571},"end":{"line":29,"column":85,"offset":583},"indent":[]}},{"type":"text","value":" tag (without the colon) since 3.4","position":{"start":{"line":29,"column":85,"offset":583},"end":{"line":29,"column":119,"offset":617},"indent":[]}}],"position":{"start":{"line":29,"column":4,"offset":502},"end":{"line":29,"column":119,"offset":617},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":499},"end":{"line":29,"column":119,"offset":617},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":443},"end":{"line":29,"column":119,"offset":617},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6.1","position":{"start":{"line":31,"column":1,"offset":619},"end":{"line":31,"column":4,"offset":622},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":619},"end":{"line":32,"column":4,"offset":626},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In cases where it will likely improve readability, strings containing single quotes will be double-quoted","position":{"start":{"line":34,"column":4,"offset":631},"end":{"line":34,"column":109,"offset":736},"indent":[]}}],"position":{"start":{"line":34,"column":4,"offset":631},"end":{"line":34,"column":109,"offset":736},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":628},"end":{"line":34,"column":109,"offset":736},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":628},"end":{"line":34,"column":109,"offset":736},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"5.4","position":{"start":{"line":36,"column":1,"offset":738},"end":{"line":36,"column":4,"offset":741},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":738},"end":{"line":37,"column":4,"offset":745},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Add new ","position":{"start":{"line":39,"column":4,"offset":750},"end":{"line":39,"column":12,"offset":758},"indent":[]}},{"type":"inlineCode","value":"lint:yaml dirname --exclude=/dirname/foo.yaml --exclude=/dirname/bar.yaml","position":{"start":{"line":39,"column":12,"offset":758},"end":{"line":39,"column":87,"offset":833},"indent":[]}},{"type":"text","value":"\noption to exclude one or more specific files from multiple file list","position":{"start":{"line":39,"column":87,"offset":833},"end":{"line":40,"column":72,"offset":905},"indent":[4]}}],"position":{"start":{"line":39,"column":4,"offset":750},"end":{"line":40,"column":72,"offset":905},"indent":[4]}}],"position":{"start":{"line":39,"column":1,"offset":747},"end":{"line":40,"column":72,"offset":905},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Allow negatable for the parse tags option with ","position":{"start":{"line":41,"column":4,"offset":909},"end":{"line":41,"column":51,"offset":956},"indent":[]}},{"type":"inlineCode","value":"--no-parse-tags","position":{"start":{"line":41,"column":51,"offset":956},"end":{"line":41,"column":68,"offset":973},"indent":[]}}],"position":{"start":{"line":41,"column":4,"offset":909},"end":{"line":41,"column":68,"offset":973},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":906},"end":{"line":41,"column":68,"offset":973},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":747},"end":{"line":41,"column":68,"offset":973},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"5.3","position":{"start":{"line":43,"column":1,"offset":975},"end":{"line":43,"column":4,"offset":978},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":975},"end":{"line":44,"column":4,"offset":982},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added ","position":{"start":{"line":46,"column":4,"offset":987},"end":{"line":46,"column":10,"offset":993},"indent":[]}},{"type":"inlineCode","value":"github","position":{"start":{"line":46,"column":10,"offset":993},"end":{"line":46,"column":18,"offset":1001},"indent":[]}},{"type":"text","value":" format support & autodetection to render errors as annotations\nwhen running the YAML linter command in a Github Action environment.","position":{"start":{"line":46,"column":18,"offset":1001},"end":{"line":47,"column":72,"offset":1136},"indent":[4]}}],"position":{"start":{"line":46,"column":4,"offset":987},"end":{"line":47,"column":72,"offset":1136},"indent":[4]}}],"position":{"start":{"line":46,"column":1,"offset":984},"end":{"line":47,"column":72,"offset":1136},"indent":[1]}}],"position":{"start":{"line":46,"column":1,"offset":984},"end":{"line":47,"column":72,"offset":1136},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"5.1.0","position":{"start":{"line":49,"column":1,"offset":1138},"end":{"line":49,"column":6,"offset":1143},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1138},"end":{"line":50,"column":6,"offset":1149},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support for parsing numbers prefixed with ","position":{"start":{"line":52,"column":4,"offset":1154},"end":{"line":52,"column":52,"offset":1202},"indent":[]}},{"type":"inlineCode","value":"0o","position":{"start":{"line":52,"column":52,"offset":1202},"end":{"line":52,"column":56,"offset":1206},"indent":[]}},{"type":"text","value":" as octal numbers.","position":{"start":{"line":52,"column":56,"offset":1206},"end":{"line":52,"column":74,"offset":1224},"indent":[]}}],"position":{"start":{"line":52,"column":4,"offset":1154},"end":{"line":52,"column":74,"offset":1224},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1151},"end":{"line":52,"column":74,"offset":1224},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated support for parsing numbers starting with ","position":{"start":{"line":53,"column":4,"offset":1228},"end":{"line":53,"column":57,"offset":1281},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":53,"column":57,"offset":1281},"end":{"line":53,"column":60,"offset":1284},"indent":[]}},{"type":"text","value":" as octal numbers. They will be parsed as strings as of Symfony 6.0. Prefix numbers with ","position":{"start":{"line":53,"column":60,"offset":1284},"end":{"line":53,"column":149,"offset":1373},"indent":[]}},{"type":"inlineCode","value":"0o","position":{"start":{"line":53,"column":149,"offset":1373},"end":{"line":53,"column":153,"offset":1377},"indent":[]}},{"type":"text","value":"\nso that they are parsed as octal numbers.","position":{"start":{"line":53,"column":153,"offset":1377},"end":{"line":54,"column":45,"offset":1422},"indent":[4]}}],"position":{"start":{"line":53,"column":4,"offset":1228},"end":{"line":54,"column":45,"offset":1422},"indent":[4]}},{"type":"paragraph","children":[{"type":"text","value":"Before:","position":{"start":{"line":56,"column":4,"offset":1427},"end":{"line":56,"column":11,"offset":1434},"indent":[]}}],"position":{"start":{"line":56,"column":4,"offset":1427},"end":{"line":56,"column":11,"offset":1434},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"Yaml::parse('072');","position":{"start":{"line":58,"column":4,"offset":1439},"end":{"line":60,"column":7,"offset":1476},"indent":[4,4]}},{"type":"paragraph","children":[{"type":"text","value":"After:","position":{"start":{"line":62,"column":4,"offset":1481},"end":{"line":62,"column":10,"offset":1487},"indent":[]}}],"position":{"start":{"line":62,"column":4,"offset":1481},"end":{"line":62,"column":10,"offset":1487},"indent":[]}},{"type":"code","lang":"yaml","meta":null,"value":"Yaml::parse('0o72');","position":{"start":{"line":64,"column":4,"offset":1492},"end":{"line":66,"column":7,"offset":1530},"indent":[4,4]}}],"position":{"start":{"line":53,"column":1,"offset":1225},"end":{"line":67,"column":1,"offset":1531},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added ","position":{"start":{"line":68,"column":4,"offset":1535},"end":{"line":68,"column":10,"offset":1541},"indent":[]}},{"type":"inlineCode","value":"yaml-lint","position":{"start":{"line":68,"column":10,"offset":1541},"end":{"line":68,"column":21,"offset":1552},"indent":[]}},{"type":"text","value":" binary.","position":{"start":{"line":68,"column":21,"offset":1552},"end":{"line":68,"column":29,"offset":1560},"indent":[]}}],"position":{"start":{"line":68,"column":4,"offset":1535},"end":{"line":68,"column":29,"offset":1560},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1532},"end":{"line":68,"column":29,"offset":1560},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated using the ","position":{"start":{"line":69,"column":4,"offset":1564},"end":{"line":69,"column":25,"offset":1585},"indent":[]}},{"type":"inlineCode","value":"!php/object","position":{"start":{"line":69,"column":25,"offset":1585},"end":{"line":69,"column":38,"offset":1598},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":69,"column":38,"offset":1598},"end":{"line":69,"column":43,"offset":1603},"indent":[]}},{"type":"inlineCode","value":"!php/const","position":{"start":{"line":69,"column":43,"offset":1603},"end":{"line":69,"column":55,"offset":1615},"indent":[]}},{"type":"text","value":" tags without a value.","position":{"start":{"line":69,"column":55,"offset":1615},"end":{"line":69,"column":77,"offset":1637},"indent":[]}}],"position":{"start":{"line":69,"column":4,"offset":1564},"end":{"line":69,"column":77,"offset":1637},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1561},"end":{"line":69,"column":77,"offset":1637},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1151},"end":{"line":69,"column":77,"offset":1637},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"5.0.0","position":{"start":{"line":71,"column":1,"offset":1639},"end":{"line":71,"column":6,"offset":1644},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1639},"end":{"line":72,"column":6,"offset":1650},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Removed support for mappings inside multi-line strings.","position":{"start":{"line":74,"column":4,"offset":1655},"end":{"line":74,"column":59,"offset":1710},"indent":[]}}],"position":{"start":{"line":74,"column":4,"offset":1655},"end":{"line":74,"column":59,"offset":1710},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1652},"end":{"line":74,"column":59,"offset":1710},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"removed support for implicit STDIN usage in the ","position":{"start":{"line":75,"column":4,"offset":1714},"end":{"line":75,"column":52,"offset":1762},"indent":[]}},{"type":"inlineCode","value":"lint:yaml","position":{"start":{"line":75,"column":52,"offset":1762},"end":{"line":75,"column":63,"offset":1773},"indent":[]}},{"type":"text","value":" command, use ","position":{"start":{"line":75,"column":63,"offset":1773},"end":{"line":75,"column":77,"offset":1787},"indent":[]}},{"type":"inlineCode","value":"lint:yaml -","position":{"start":{"line":75,"column":77,"offset":1787},"end":{"line":75,"column":90,"offset":1800},"indent":[]}},{"type":"text","value":" (append a dash) instead to make it explicit.","position":{"start":{"line":75,"column":90,"offset":1800},"end":{"line":75,"column":135,"offset":1845},"indent":[]}}],"position":{"start":{"line":75,"column":4,"offset":1714},"end":{"line":75,"column":135,"offset":1845},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1711},"end":{"line":75,"column":135,"offset":1845},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1652},"end":{"line":75,"column":135,"offset":1845},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"4.4.0","position":{"start":{"line":77,"column":1,"offset":1847},"end":{"line":77,"column":6,"offset":1852},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1847},"end":{"line":78,"column":6,"offset":1858},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support for parsing the inline notation spanning multiple lines.","position":{"start":{"line":80,"column":4,"offset":1863},"end":{"line":80,"column":74,"offset":1933},"indent":[]}}],"position":{"start":{"line":80,"column":4,"offset":1863},"end":{"line":80,"column":74,"offset":1933},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1860},"end":{"line":80,"column":74,"offset":1933},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support to dump ","position":{"start":{"line":81,"column":4,"offset":1937},"end":{"line":81,"column":26,"offset":1959},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":81,"column":26,"offset":1959},"end":{"line":81,"column":32,"offset":1965},"indent":[]}},{"type":"text","value":" as ","position":{"start":{"line":81,"column":32,"offset":1965},"end":{"line":81,"column":36,"offset":1969},"indent":[]}},{"type":"inlineCode","value":"~","position":{"start":{"line":81,"column":36,"offset":1969},"end":{"line":81,"column":39,"offset":1972},"indent":[]}},{"type":"text","value":" by using the ","position":{"start":{"line":81,"column":39,"offset":1972},"end":{"line":81,"column":53,"offset":1986},"indent":[]}},{"type":"inlineCode","value":"Yaml::DUMP_NULL_AS_TILDE","position":{"start":{"line":81,"column":53,"offset":1986},"end":{"line":81,"column":79,"offset":2012},"indent":[]}},{"type":"text","value":" flag.","position":{"start":{"line":81,"column":79,"offset":2012},"end":{"line":81,"column":85,"offset":2018},"indent":[]}}],"position":{"start":{"line":81,"column":4,"offset":1937},"end":{"line":81,"column":85,"offset":2018},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1934},"end":{"line":81,"column":85,"offset":2018},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"deprecated accepting STDIN implicitly when using the ","position":{"start":{"line":82,"column":4,"offset":2022},"end":{"line":82,"column":57,"offset":2075},"indent":[]}},{"type":"inlineCode","value":"lint:yaml","position":{"start":{"line":82,"column":57,"offset":2075},"end":{"line":82,"column":68,"offset":2086},"indent":[]}},{"type":"text","value":" command, use ","position":{"start":{"line":82,"column":68,"offset":2086},"end":{"line":82,"column":82,"offset":2100},"indent":[]}},{"type":"inlineCode","value":"lint:yaml -","position":{"start":{"line":82,"column":82,"offset":2100},"end":{"line":82,"column":95,"offset":2113},"indent":[]}},{"type":"text","value":" (append a dash) instead to make it explicit.","position":{"start":{"line":82,"column":95,"offset":2113},"end":{"line":82,"column":140,"offset":2158},"indent":[]}}],"position":{"start":{"line":82,"column":4,"offset":2022},"end":{"line":82,"column":140,"offset":2158},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":2019},"end":{"line":82,"column":140,"offset":2158},"indent":[]}}],"position":{"start":{"line":80,"column":1,"offset":1860},"end":{"line":82,"column":140,"offset":2158},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"4.3.0","position":{"start":{"line":84,"column":1,"offset":2160},"end":{"line":84,"column":6,"offset":2165},"indent":[]}}],"position":{"start":{"line":84,"column":1,"offset":2160},"end":{"line":85,"column":6,"offset":2171},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using a mapping inside a multi-line string is deprecated and will throw a ","position":{"start":{"line":87,"column":4,"offset":2176},"end":{"line":87,"column":78,"offset":2250},"indent":[]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":87,"column":78,"offset":2250},"end":{"line":87,"column":94,"offset":2266},"indent":[]}},{"type":"text","value":" in 5.0.","position":{"start":{"line":87,"column":94,"offset":2266},"end":{"line":87,"column":102,"offset":2274},"indent":[]}}],"position":{"start":{"line":87,"column":4,"offset":2176},"end":{"line":87,"column":102,"offset":2274},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2173},"end":{"line":87,"column":102,"offset":2274},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2173},"end":{"line":87,"column":102,"offset":2274},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"4.2.0","position":{"start":{"line":89,"column":1,"offset":2276},"end":{"line":89,"column":6,"offset":2281},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2276},"end":{"line":90,"column":6,"offset":2287},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"added support for multiple files or directories in ","position":{"start":{"line":92,"column":4,"offset":2292},"end":{"line":92,"column":55,"offset":2343},"indent":[]}},{"type":"inlineCode","value":"LintCommand","position":{"start":{"line":92,"column":55,"offset":2343},"end":{"line":92,"column":68,"offset":2356},"indent":[]}}],"position":{"start":{"line":92,"column":4,"offset":2292},"end":{"line":92,"column":68,"offset":2356},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2289},"end":{"line":92,"column":68,"offset":2356},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2289},"end":{"line":92,"column":68,"offset":2356},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"4.0.0","position":{"start":{"line":94,"column":1,"offset":2358},"end":{"line":94,"column":6,"offset":2363},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":2358},"end":{"line":95,"column":6,"offset":2369},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The behavior of the non-specific tag ","position":{"start":{"line":97,"column":4,"offset":2374},"end":{"line":97,"column":41,"offset":2411},"indent":[]}},{"type":"inlineCode","value":"!","position":{"start":{"line":97,"column":41,"offset":2411},"end":{"line":97,"column":44,"offset":2414},"indent":[]}},{"type":"text","value":" is changed and now forces\nnon-evaluating your values.","position":{"start":{"line":97,"column":44,"offset":2414},"end":{"line":98,"column":31,"offset":2471},"indent":[4]}}],"position":{"start":{"line":97,"column":4,"offset":2374},"end":{"line":98,"column":31,"offset":2471},"indent":[4]}}],"position":{"start":{"line":97,"column":1,"offset":2371},"end":{"line":98,"column":31,"offset":2471},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"complex mappings will throw a ","position":{"start":{"line":99,"column":4,"offset":2475},"end":{"line":99,"column":34,"offset":2505},"indent":[]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":99,"column":34,"offset":2505},"end":{"line":99,"column":50,"offset":2521},"indent":[]}}],"position":{"start":{"line":99,"column":4,"offset":2475},"end":{"line":99,"column":50,"offset":2521},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":2472},"end":{"line":99,"column":50,"offset":2521},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"support for the comma as a group separator for floats has been dropped, use\nthe underscore instead","position":{"start":{"line":100,"column":4,"offset":2525},"end":{"line":101,"column":26,"offset":2626},"indent":[4]}}],"position":{"start":{"line":100,"column":4,"offset":2525},"end":{"line":101,"column":26,"offset":2626},"indent":[4]}}],"position":{"start":{"line":100,"column":1,"offset":2522},"end":{"line":101,"column":26,"offset":2626},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"support for the ","position":{"start":{"line":102,"column":4,"offset":2630},"end":{"line":102,"column":20,"offset":2646},"indent":[]}},{"type":"inlineCode","value":"!!php/object","position":{"start":{"line":102,"column":20,"offset":2646},"end":{"line":102,"column":34,"offset":2660},"indent":[]}},{"type":"text","value":" tag has been dropped, use the ","position":{"start":{"line":102,"column":34,"offset":2660},"end":{"line":102,"column":65,"offset":2691},"indent":[]}},{"type":"inlineCode","value":"!php/object","position":{"start":{"line":102,"column":65,"offset":2691},"end":{"line":102,"column":78,"offset":2704},"indent":[]}},{"type":"text","value":"\ntag instead","position":{"start":{"line":102,"column":78,"offset":2704},"end":{"line":103,"column":15,"offset":2719},"indent":[4]}}],"position":{"start":{"line":102,"column":4,"offset":2630},"end":{"line":103,"column":15,"offset":2719},"indent":[4]}}],"position":{"start":{"line":102,"column":1,"offset":2627},"end":{"line":103,"column":15,"offset":2719},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"duplicate mapping keys throw a ","position":{"start":{"line":104,"column":4,"offset":2723},"end":{"line":104,"column":35,"offset":2754},"indent":[]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":104,"column":35,"offset":2754},"end":{"line":104,"column":51,"offset":2770},"indent":[]}}],"position":{"start":{"line":104,"column":4,"offset":2723},"end":{"line":104,"column":51,"offset":2770},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2720},"end":{"line":104,"column":51,"offset":2770},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"non-string mapping keys throw a ","position":{"start":{"line":105,"column":4,"offset":2774},"end":{"line":105,"column":36,"offset":2806},"indent":[]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":105,"column":36,"offset":2806},"end":{"line":105,"column":52,"offset":2822},"indent":[]}},{"type":"text","value":", use the ","position":{"start":{"line":105,"column":52,"offset":2822},"end":{"line":105,"column":62,"offset":2832},"indent":[]}},{"type":"inlineCode","value":"Yaml::PARSE_KEYS_AS_STRINGS","position":{"start":{"line":105,"column":62,"offset":2832},"end":{"line":105,"column":91,"offset":2861},"indent":[]}},{"type":"text","value":"\nflag to cast them to strings","position":{"start":{"line":105,"column":91,"offset":2861},"end":{"line":106,"column":32,"offset":2893},"indent":[4]}}],"position":{"start":{"line":105,"column":4,"offset":2774},"end":{"line":106,"column":32,"offset":2893},"indent":[4]}}],"position":{"start":{"line":105,"column":1,"offset":2771},"end":{"line":106,"column":32,"offset":2893},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"%","position":{"start":{"line":107,"column":4,"offset":2897},"end":{"line":107,"column":7,"offset":2900},"indent":[]}},{"type":"text","value":" at the beginning of an unquoted string throw a ","position":{"start":{"line":107,"column":7,"offset":2900},"end":{"line":107,"column":55,"offset":2948},"indent":[]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":107,"column":55,"offset":2948},"end":{"line":107,"column":71,"offset":2964},"indent":[]}}],"position":{"start":{"line":107,"column":4,"offset":2897},"end":{"line":107,"column":71,"offset":2964},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2894},"end":{"line":107,"column":71,"offset":2964},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"mappings with a colon (","position":{"start":{"line":108,"column":4,"offset":2968},"end":{"line":108,"column":27,"offset":2991},"indent":[]}},{"type":"inlineCode","value":":","position":{"start":{"line":108,"column":27,"offset":2991},"end":{"line":108,"column":30,"offset":2994},"indent":[]}},{"type":"text","value":") that is not followed by a whitespace throw a\n","position":{"start":{"line":108,"column":30,"offset":2994},"end":{"line":109,"column":4,"offset":3044},"indent":[4]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":109,"column":4,"offset":3044},"end":{"line":109,"column":20,"offset":3060},"indent":[]}}],"position":{"start":{"line":108,"column":4,"offset":2968},"end":{"line":109,"column":20,"offset":3060},"indent":[4]}}],"position":{"start":{"line":108,"column":1,"offset":2965},"end":{"line":109,"column":20,"offset":3060},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the ","position":{"start":{"line":110,"column":4,"offset":3064},"end":{"line":110,"column":8,"offset":3068},"indent":[]}},{"type":"inlineCode","value":"Dumper::setIndentation()","position":{"start":{"line":110,"column":8,"offset":3068},"end":{"line":110,"column":34,"offset":3094},"indent":[]}},{"type":"text","value":" method has been removed","position":{"start":{"line":110,"column":34,"offset":3094},"end":{"line":110,"column":58,"offset":3118},"indent":[]}}],"position":{"start":{"line":110,"column":4,"offset":3064},"end":{"line":110,"column":58,"offset":3118},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":3061},"end":{"line":110,"column":58,"offset":3118},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"being able to pass boolean options to the ","position":{"start":{"line":111,"column":4,"offset":3122},"end":{"line":111,"column":46,"offset":3164},"indent":[]}},{"type":"inlineCode","value":"Yaml::parse()","position":{"start":{"line":111,"column":46,"offset":3164},"end":{"line":111,"column":61,"offset":3179},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":111,"column":61,"offset":3179},"end":{"line":111,"column":63,"offset":3181},"indent":[]}},{"type":"inlineCode","value":"Yaml::dump()","position":{"start":{"line":111,"column":63,"offset":3181},"end":{"line":111,"column":77,"offset":3195},"indent":[]}},{"type":"text","value":",\n","position":{"start":{"line":111,"column":77,"offset":3195},"end":{"line":112,"column":4,"offset":3200},"indent":[4]}},{"type":"inlineCode","value":"Parser::parse()","position":{"start":{"line":112,"column":4,"offset":3200},"end":{"line":112,"column":21,"offset":3217},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":112,"column":21,"offset":3217},"end":{"line":112,"column":27,"offset":3223},"indent":[]}},{"type":"inlineCode","value":"Dumper::dump()","position":{"start":{"line":112,"column":27,"offset":3223},"end":{"line":112,"column":43,"offset":3239},"indent":[]}},{"type":"text","value":" methods to configure the behavior of\nthe parser and dumper is no longer supported, pass bitmask flags instead","position":{"start":{"line":112,"column":43,"offset":3239},"end":{"line":113,"column":76,"offset":3352},"indent":[4]}}],"position":{"start":{"line":111,"column":4,"offset":3122},"end":{"line":113,"column":76,"offset":3352},"indent":[4,4]}}],"position":{"start":{"line":111,"column":1,"offset":3119},"end":{"line":113,"column":76,"offset":3352},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the constructor arguments of the ","position":{"start":{"line":114,"column":4,"offset":3356},"end":{"line":114,"column":37,"offset":3389},"indent":[]}},{"type":"inlineCode","value":"Parser","position":{"start":{"line":114,"column":37,"offset":3389},"end":{"line":114,"column":45,"offset":3397},"indent":[]}},{"type":"text","value":" class have been removed","position":{"start":{"line":114,"column":45,"offset":3397},"end":{"line":114,"column":69,"offset":3421},"indent":[]}}],"position":{"start":{"line":114,"column":4,"offset":3356},"end":{"line":114,"column":69,"offset":3421},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":3353},"end":{"line":114,"column":69,"offset":3421},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the ","position":{"start":{"line":115,"column":4,"offset":3425},"end":{"line":115,"column":8,"offset":3429},"indent":[]}},{"type":"inlineCode","value":"Inline","position":{"start":{"line":115,"column":8,"offset":3429},"end":{"line":115,"column":16,"offset":3437},"indent":[]}},{"type":"text","value":" class is internal and no longer part of the BC promise","position":{"start":{"line":115,"column":16,"offset":3437},"end":{"line":115,"column":71,"offset":3492},"indent":[]}}],"position":{"start":{"line":115,"column":4,"offset":3425},"end":{"line":115,"column":71,"offset":3492},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":3422},"end":{"line":115,"column":71,"offset":3492},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"removed support for the ","position":{"start":{"line":116,"column":4,"offset":3496},"end":{"line":116,"column":28,"offset":3520},"indent":[]}},{"type":"inlineCode","value":"!str","position":{"start":{"line":116,"column":28,"offset":3520},"end":{"line":116,"column":34,"offset":3526},"indent":[]}},{"type":"text","value":" tag, use the ","position":{"start":{"line":116,"column":34,"offset":3526},"end":{"line":116,"column":48,"offset":3540},"indent":[]}},{"type":"inlineCode","value":"!!str","position":{"start":{"line":116,"column":48,"offset":3540},"end":{"line":116,"column":55,"offset":3547},"indent":[]}},{"type":"text","value":" tag instead","position":{"start":{"line":116,"column":55,"offset":3547},"end":{"line":116,"column":67,"offset":3559},"indent":[]}}],"position":{"start":{"line":116,"column":4,"offset":3496},"end":{"line":116,"column":67,"offset":3559},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":3493},"end":{"line":116,"column":67,"offset":3559},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"added support for tagged scalars.","position":{"start":{"line":117,"column":4,"offset":3563},"end":{"line":117,"column":37,"offset":3596},"indent":[]}}],"position":{"start":{"line":117,"column":4,"offset":3563},"end":{"line":117,"column":37,"offset":3596},"indent":[]}},{"type":"code","lang":"yml","meta":null,"value":"Yaml::parse('!foo bar', Yaml::PARSE_CUSTOM_TAGS);\n// returns TaggedValue('foo', 'bar');","position":{"start":{"line":119,"column":4,"offset":3601},"end":{"line":122,"column":7,"offset":3708},"indent":[4,4,4]}}],"position":{"start":{"line":117,"column":1,"offset":3560},"end":{"line":122,"column":7,"offset":3708},"indent":[1,1,1,1,1]}}],"position":{"start":{"line":97,"column":1,"offset":2371},"end":{"line":122,"column":7,"offset":3708},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.4.0","position":{"start":{"line":124,"column":1,"offset":3710},"end":{"line":124,"column":6,"offset":3715},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":3710},"end":{"line":125,"column":6,"offset":3721},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"added support for parsing YAML files using the ","position":{"start":{"line":127,"column":4,"offset":3726},"end":{"line":127,"column":51,"offset":3773},"indent":[]}},{"type":"inlineCode","value":"Yaml::parseFile()","position":{"start":{"line":127,"column":51,"offset":3773},"end":{"line":127,"column":70,"offset":3792},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":127,"column":70,"offset":3792},"end":{"line":127,"column":74,"offset":3796},"indent":[]}},{"type":"inlineCode","value":"Parser::parseFile()","position":{"start":{"line":127,"column":74,"offset":3796},"end":{"line":127,"column":95,"offset":3817},"indent":[]}},{"type":"text","value":" method","position":{"start":{"line":127,"column":95,"offset":3817},"end":{"line":127,"column":102,"offset":3824},"indent":[]}}],"position":{"start":{"line":127,"column":4,"offset":3726},"end":{"line":127,"column":102,"offset":3824},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3723},"end":{"line":128,"column":1,"offset":3825},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the ","position":{"start":{"line":129,"column":4,"offset":3829},"end":{"line":129,"column":8,"offset":3833},"indent":[]}},{"type":"inlineCode","value":"Dumper","position":{"start":{"line":129,"column":8,"offset":3833},"end":{"line":129,"column":16,"offset":3841},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":129,"column":16,"offset":3841},"end":{"line":129,"column":18,"offset":3843},"indent":[]}},{"type":"inlineCode","value":"Parser","position":{"start":{"line":129,"column":18,"offset":3843},"end":{"line":129,"column":26,"offset":3851},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":129,"column":26,"offset":3851},"end":{"line":129,"column":32,"offset":3857},"indent":[]}},{"type":"inlineCode","value":"Yaml","position":{"start":{"line":129,"column":32,"offset":3857},"end":{"line":129,"column":38,"offset":3863},"indent":[]}},{"type":"text","value":" classes are marked as final","position":{"start":{"line":129,"column":38,"offset":3863},"end":{"line":129,"column":66,"offset":3891},"indent":[]}}],"position":{"start":{"line":129,"column":4,"offset":3829},"end":{"line":129,"column":66,"offset":3891},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3826},"end":{"line":130,"column":1,"offset":3892},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated the ","position":{"start":{"line":131,"column":4,"offset":3896},"end":{"line":131,"column":19,"offset":3911},"indent":[]}},{"type":"inlineCode","value":"!php/object:","position":{"start":{"line":131,"column":19,"offset":3911},"end":{"line":131,"column":33,"offset":3925},"indent":[]}},{"type":"text","value":" tag which will be replaced by the\n","position":{"start":{"line":131,"column":33,"offset":3925},"end":{"line":132,"column":4,"offset":3963},"indent":[4]}},{"type":"inlineCode","value":"!php/object","position":{"start":{"line":132,"column":4,"offset":3963},"end":{"line":132,"column":17,"offset":3976},"indent":[]}},{"type":"text","value":" tag (without the colon) in 4.0.","position":{"start":{"line":132,"column":17,"offset":3976},"end":{"line":132,"column":49,"offset":4008},"indent":[]}}],"position":{"start":{"line":131,"column":4,"offset":3896},"end":{"line":132,"column":49,"offset":4008},"indent":[4]}}],"position":{"start":{"line":131,"column":1,"offset":3893},"end":{"line":133,"column":1,"offset":4009},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated the ","position":{"start":{"line":134,"column":4,"offset":4013},"end":{"line":134,"column":19,"offset":4028},"indent":[]}},{"type":"inlineCode","value":"!php/const:","position":{"start":{"line":134,"column":19,"offset":4028},"end":{"line":134,"column":32,"offset":4041},"indent":[]}},{"type":"text","value":" tag which will be replaced by the\n","position":{"start":{"line":134,"column":32,"offset":4041},"end":{"line":135,"column":4,"offset":4079},"indent":[4]}},{"type":"inlineCode","value":"!php/const","position":{"start":{"line":135,"column":4,"offset":4079},"end":{"line":135,"column":16,"offset":4091},"indent":[]}},{"type":"text","value":" tag (without the colon) in 4.0.","position":{"start":{"line":135,"column":16,"offset":4091},"end":{"line":135,"column":48,"offset":4123},"indent":[]}}],"position":{"start":{"line":134,"column":4,"offset":4013},"end":{"line":135,"column":48,"offset":4123},"indent":[4]}}],"position":{"start":{"line":134,"column":1,"offset":4010},"end":{"line":136,"column":1,"offset":4124},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Support for the ","position":{"start":{"line":137,"column":4,"offset":4128},"end":{"line":137,"column":20,"offset":4144},"indent":[]}},{"type":"inlineCode","value":"!str","position":{"start":{"line":137,"column":20,"offset":4144},"end":{"line":137,"column":26,"offset":4150},"indent":[]}},{"type":"text","value":" tag is deprecated, use the ","position":{"start":{"line":137,"column":26,"offset":4150},"end":{"line":137,"column":54,"offset":4178},"indent":[]}},{"type":"inlineCode","value":"!!str","position":{"start":{"line":137,"column":54,"offset":4178},"end":{"line":137,"column":61,"offset":4185},"indent":[]}},{"type":"text","value":" tag instead.","position":{"start":{"line":137,"column":61,"offset":4185},"end":{"line":137,"column":74,"offset":4198},"indent":[]}}],"position":{"start":{"line":137,"column":4,"offset":4128},"end":{"line":137,"column":74,"offset":4198},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4125},"end":{"line":138,"column":1,"offset":4199},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated using the non-specific tag ","position":{"start":{"line":139,"column":4,"offset":4203},"end":{"line":139,"column":42,"offset":4241},"indent":[]}},{"type":"inlineCode","value":"!","position":{"start":{"line":139,"column":42,"offset":4241},"end":{"line":139,"column":45,"offset":4244},"indent":[]}},{"type":"text","value":" as its behavior will change in 4.0.\nIt will force non-evaluating your values in 4.0. Use plain integers or ","position":{"start":{"line":139,"column":45,"offset":4244},"end":{"line":140,"column":75,"offset":4355},"indent":[4]}},{"type":"inlineCode","value":"!!float","position":{"start":{"line":140,"column":75,"offset":4355},"end":{"line":140,"column":84,"offset":4364},"indent":[]}},{"type":"text","value":" instead.","position":{"start":{"line":140,"column":84,"offset":4364},"end":{"line":140,"column":93,"offset":4373},"indent":[]}}],"position":{"start":{"line":139,"column":4,"offset":4203},"end":{"line":140,"column":93,"offset":4373},"indent":[4]}}],"position":{"start":{"line":139,"column":1,"offset":4200},"end":{"line":140,"column":93,"offset":4373},"indent":[1]}}],"position":{"start":{"line":127,"column":1,"offset":3723},"end":{"line":140,"column":93,"offset":4373},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.3.0","position":{"start":{"line":142,"column":1,"offset":4375},"end":{"line":142,"column":6,"offset":4380},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":4375},"end":{"line":143,"column":6,"offset":4386},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Starting an unquoted string with a question mark followed by a space is\ndeprecated and will throw a ","position":{"start":{"line":145,"column":4,"offset":4391},"end":{"line":146,"column":32,"offset":4494},"indent":[4]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":146,"column":32,"offset":4494},"end":{"line":146,"column":48,"offset":4510},"indent":[]}},{"type":"text","value":" in Symfony 4.0.","position":{"start":{"line":146,"column":48,"offset":4510},"end":{"line":146,"column":64,"offset":4526},"indent":[]}}],"position":{"start":{"line":145,"column":4,"offset":4391},"end":{"line":146,"column":64,"offset":4526},"indent":[4]}}],"position":{"start":{"line":145,"column":1,"offset":4388},"end":{"line":147,"column":1,"offset":4527},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated support for implicitly parsing non-string mapping keys as strings.\nMapping keys that are no strings will lead to a ","position":{"start":{"line":148,"column":4,"offset":4531},"end":{"line":149,"column":52,"offset":4660},"indent":[4]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":149,"column":52,"offset":4660},"end":{"line":149,"column":68,"offset":4676},"indent":[]}},{"type":"text","value":" in Symfony\n4.0. Use quotes to opt-in for keys to be parsed as strings.","position":{"start":{"line":149,"column":68,"offset":4676},"end":{"line":150,"column":63,"offset":4750},"indent":[4]}}],"position":{"start":{"line":148,"column":4,"offset":4531},"end":{"line":150,"column":63,"offset":4750},"indent":[4,4]}},{"type":"paragraph","children":[{"type":"text","value":"Before:","position":{"start":{"line":152,"column":4,"offset":4755},"end":{"line":152,"column":11,"offset":4762},"indent":[]}}],"position":{"start":{"line":152,"column":4,"offset":4755},"end":{"line":152,"column":11,"offset":4762},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"$yaml = <<<YAML\nnull: null key\ntrue: boolean true\n2.0: float key\nYAML;\n\nYaml::parse($yaml);","position":{"start":{"line":154,"column":4,"offset":4767},"end":{"line":162,"column":7,"offset":4890},"indent":[4,4,4,4,4,1,4,4]}},{"type":"paragraph","children":[{"type":"text","value":"After:","position":{"start":{"line":164,"column":4,"offset":4895},"end":{"line":164,"column":10,"offset":4901},"indent":[]}}],"position":{"start":{"line":164,"column":4,"offset":4895},"end":{"line":164,"column":10,"offset":4901},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"\n$yaml = <<<YAML\n\"null\": null key\n\"true\": boolean true\n\"2.0\": float key\nYAML;\n\nYaml::parse($yaml);","position":{"start":{"line":166,"column":4,"offset":4906},"end":{"line":175,"column":7,"offset":5036},"indent":[1,4,4,4,4,4,1,4,4]}}],"position":{"start":{"line":148,"column":1,"offset":4528},"end":{"line":176,"column":1,"offset":5037},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Omitted mapping values will be parsed as ","position":{"start":{"line":177,"column":4,"offset":5041},"end":{"line":177,"column":45,"offset":5082},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":177,"column":45,"offset":5082},"end":{"line":177,"column":51,"offset":5088},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":177,"column":51,"offset":5088},"end":{"line":177,"column":52,"offset":5089},"indent":[]}}],"position":{"start":{"line":177,"column":4,"offset":5041},"end":{"line":177,"column":52,"offset":5089},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":5038},"end":{"line":178,"column":1,"offset":5090},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Omitting the key of a mapping is deprecated and will throw a ","position":{"start":{"line":179,"column":4,"offset":5094},"end":{"line":179,"column":65,"offset":5155},"indent":[]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":179,"column":65,"offset":5155},"end":{"line":179,"column":81,"offset":5171},"indent":[]}},{"type":"text","value":" in Symfony 4.0.","position":{"start":{"line":179,"column":81,"offset":5171},"end":{"line":179,"column":97,"offset":5187},"indent":[]}}],"position":{"start":{"line":179,"column":4,"offset":5094},"end":{"line":179,"column":97,"offset":5187},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":5091},"end":{"line":180,"column":1,"offset":5188},"indent":[1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support for dumping empty PHP arrays as YAML sequences:","position":{"start":{"line":181,"column":4,"offset":5192},"end":{"line":181,"column":65,"offset":5253},"indent":[]}}],"position":{"start":{"line":181,"column":4,"offset":5192},"end":{"line":181,"column":65,"offset":5253},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"Yaml::dump([], 0, 0, Yaml::DUMP_EMPTY_ARRAY_AS_SEQUENCE);","position":{"start":{"line":183,"column":4,"offset":5258},"end":{"line":185,"column":7,"offset":5332},"indent":[4,4]}}],"position":{"start":{"line":181,"column":1,"offset":5189},"end":{"line":185,"column":7,"offset":5332},"indent":[1,1,1,1]}}],"position":{"start":{"line":145,"column":1,"offset":4388},"end":{"line":185,"column":7,"offset":5332},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.2.0","position":{"start":{"line":187,"column":1,"offset":5334},"end":{"line":187,"column":6,"offset":5339},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":5334},"end":{"line":188,"column":6,"offset":5345},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Mappings with a colon (","position":{"start":{"line":190,"column":4,"offset":5350},"end":{"line":190,"column":27,"offset":5373},"indent":[]}},{"type":"inlineCode","value":":","position":{"start":{"line":190,"column":27,"offset":5373},"end":{"line":190,"column":30,"offset":5376},"indent":[]}},{"type":"text","value":") that is not followed by a whitespace are deprecated\nwhen the mapping key is not quoted and will lead to a ","position":{"start":{"line":190,"column":30,"offset":5376},"end":{"line":191,"column":58,"offset":5487},"indent":[4]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":191,"column":58,"offset":5487},"end":{"line":191,"column":74,"offset":5503},"indent":[]}},{"type":"text","value":" in\nSymfony 4.0 (e.g. ","position":{"start":{"line":191,"column":74,"offset":5503},"end":{"line":192,"column":22,"offset":5528},"indent":[4]}},{"type":"inlineCode","value":"foo:bar","position":{"start":{"line":192,"column":22,"offset":5528},"end":{"line":192,"column":31,"offset":5537},"indent":[]}},{"type":"text","value":" must be ","position":{"start":{"line":192,"column":31,"offset":5537},"end":{"line":192,"column":40,"offset":5546},"indent":[]}},{"type":"inlineCode","value":"foo: bar","position":{"start":{"line":192,"column":40,"offset":5546},"end":{"line":192,"column":50,"offset":5556},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":192,"column":50,"offset":5556},"end":{"line":192,"column":52,"offset":5558},"indent":[]}}],"position":{"start":{"line":190,"column":4,"offset":5350},"end":{"line":192,"column":52,"offset":5558},"indent":[4,4]}}],"position":{"start":{"line":190,"column":1,"offset":5347},"end":{"line":193,"column":1,"offset":5559},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support for parsing PHP constants:","position":{"start":{"line":194,"column":4,"offset":5563},"end":{"line":194,"column":44,"offset":5603},"indent":[]}}],"position":{"start":{"line":194,"column":4,"offset":5563},"end":{"line":194,"column":44,"offset":5603},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"Yaml::parse('!php/const:PHP_INT_MAX', Yaml::PARSE_CONSTANT);","position":{"start":{"line":196,"column":4,"offset":5608},"end":{"line":198,"column":7,"offset":5685},"indent":[4,4]}}],"position":{"start":{"line":194,"column":1,"offset":5560},"end":{"line":199,"column":1,"offset":5686},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Support for silently ignoring duplicate mapping keys in YAML has been\ndeprecated and will lead to a ","position":{"start":{"line":200,"column":4,"offset":5690},"end":{"line":201,"column":34,"offset":5793},"indent":[4]}},{"type":"inlineCode","value":"ParseException","position":{"start":{"line":201,"column":34,"offset":5793},"end":{"line":201,"column":50,"offset":5809},"indent":[]}},{"type":"text","value":" in Symfony 4.0.","position":{"start":{"line":201,"column":50,"offset":5809},"end":{"line":201,"column":66,"offset":5825},"indent":[]}}],"position":{"start":{"line":200,"column":4,"offset":5690},"end":{"line":201,"column":66,"offset":5825},"indent":[4]}}],"position":{"start":{"line":200,"column":1,"offset":5687},"end":{"line":201,"column":66,"offset":5825},"indent":[1]}}],"position":{"start":{"line":190,"column":1,"offset":5347},"end":{"line":201,"column":66,"offset":5825},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.1.0","position":{"start":{"line":203,"column":1,"offset":5827},"end":{"line":203,"column":6,"offset":5832},"indent":[]}}],"position":{"start":{"line":203,"column":1,"offset":5827},"end":{"line":204,"column":6,"offset":5838},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support to dump ","position":{"start":{"line":206,"column":4,"offset":5843},"end":{"line":206,"column":26,"offset":5865},"indent":[]}},{"type":"inlineCode","value":"stdClass","position":{"start":{"line":206,"column":26,"offset":5865},"end":{"line":206,"column":36,"offset":5875},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":206,"column":36,"offset":5875},"end":{"line":206,"column":41,"offset":5880},"indent":[]}},{"type":"inlineCode","value":"ArrayAccess","position":{"start":{"line":206,"column":41,"offset":5880},"end":{"line":206,"column":54,"offset":5893},"indent":[]}},{"type":"text","value":" objects as YAML mappings\nthrough the ","position":{"start":{"line":206,"column":54,"offset":5893},"end":{"line":207,"column":16,"offset":5934},"indent":[4]}},{"type":"inlineCode","value":"Yaml::DUMP_OBJECT_AS_MAP","position":{"start":{"line":207,"column":16,"offset":5934},"end":{"line":207,"column":42,"offset":5960},"indent":[]}},{"type":"text","value":" flag.","position":{"start":{"line":207,"column":42,"offset":5960},"end":{"line":207,"column":48,"offset":5966},"indent":[]}}],"position":{"start":{"line":206,"column":4,"offset":5843},"end":{"line":207,"column":48,"offset":5966},"indent":[4]}}],"position":{"start":{"line":206,"column":1,"offset":5840},"end":{"line":208,"column":1,"offset":5967},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Strings that are not UTF-8 encoded will be dumped as base64 encoded binary\ndata.","position":{"start":{"line":209,"column":4,"offset":5971},"end":{"line":210,"column":9,"offset":6054},"indent":[4]}}],"position":{"start":{"line":209,"column":4,"offset":5971},"end":{"line":210,"column":9,"offset":6054},"indent":[4]}}],"position":{"start":{"line":209,"column":1,"offset":5968},"end":{"line":211,"column":1,"offset":6055},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support for dumping multi line strings as literal blocks.","position":{"start":{"line":212,"column":4,"offset":6059},"end":{"line":212,"column":67,"offset":6122},"indent":[]}}],"position":{"start":{"line":212,"column":4,"offset":6059},"end":{"line":212,"column":67,"offset":6122},"indent":[]}}],"position":{"start":{"line":212,"column":1,"offset":6056},"end":{"line":213,"column":1,"offset":6123},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support for parsing base64 encoded binary data when they are tagged\nwith the ","position":{"start":{"line":214,"column":4,"offset":6127},"end":{"line":215,"column":13,"offset":6213},"indent":[4]}},{"type":"inlineCode","value":"!!binary","position":{"start":{"line":215,"column":13,"offset":6213},"end":{"line":215,"column":23,"offset":6223},"indent":[]}},{"type":"text","value":" tag.","position":{"start":{"line":215,"column":23,"offset":6223},"end":{"line":215,"column":28,"offset":6228},"indent":[]}}],"position":{"start":{"line":214,"column":4,"offset":6127},"end":{"line":215,"column":28,"offset":6228},"indent":[4]}}],"position":{"start":{"line":214,"column":1,"offset":6124},"end":{"line":216,"column":1,"offset":6229},"indent":[1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support for parsing timestamps as ","position":{"start":{"line":217,"column":4,"offset":6233},"end":{"line":217,"column":44,"offset":6273},"indent":[]}},{"type":"inlineCode","value":"\\DateTime","position":{"start":{"line":217,"column":44,"offset":6273},"end":{"line":217,"column":55,"offset":6284},"indent":[]}},{"type":"text","value":" objects:","position":{"start":{"line":217,"column":55,"offset":6284},"end":{"line":217,"column":64,"offset":6293},"indent":[]}}],"position":{"start":{"line":217,"column":4,"offset":6233},"end":{"line":217,"column":64,"offset":6293},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"Yaml::parse('2001-12-15 21:59:43.10 -5', Yaml::PARSE_DATETIME);","position":{"start":{"line":219,"column":4,"offset":6298},"end":{"line":221,"column":7,"offset":6378},"indent":[4,4]}}],"position":{"start":{"line":217,"column":1,"offset":6230},"end":{"line":222,"column":1,"offset":6379},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"\\DateTime","position":{"start":{"line":223,"column":4,"offset":6383},"end":{"line":223,"column":15,"offset":6394},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":223,"column":15,"offset":6394},"end":{"line":223,"column":20,"offset":6399},"indent":[]}},{"type":"inlineCode","value":"\\DateTimeImmutable","position":{"start":{"line":223,"column":20,"offset":6399},"end":{"line":223,"column":40,"offset":6419},"indent":[]}},{"type":"text","value":" objects are dumped as YAML timestamps.","position":{"start":{"line":223,"column":40,"offset":6419},"end":{"line":223,"column":79,"offset":6458},"indent":[]}}],"position":{"start":{"line":223,"column":4,"offset":6383},"end":{"line":223,"column":79,"offset":6458},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":6380},"end":{"line":224,"column":1,"offset":6459},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated usage of ","position":{"start":{"line":225,"column":4,"offset":6463},"end":{"line":225,"column":24,"offset":6483},"indent":[]}},{"type":"inlineCode","value":"%","position":{"start":{"line":225,"column":24,"offset":6483},"end":{"line":225,"column":27,"offset":6486},"indent":[]}},{"type":"text","value":" at the beginning of an unquoted string.","position":{"start":{"line":225,"column":27,"offset":6486},"end":{"line":225,"column":67,"offset":6526},"indent":[]}}],"position":{"start":{"line":225,"column":4,"offset":6463},"end":{"line":225,"column":67,"offset":6526},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":6460},"end":{"line":226,"column":1,"offset":6527},"indent":[1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support for customizing the YAML parser behavior through an optional bit field:","position":{"start":{"line":227,"column":4,"offset":6531},"end":{"line":227,"column":89,"offset":6616},"indent":[]}}],"position":{"start":{"line":227,"column":4,"offset":6531},"end":{"line":227,"column":89,"offset":6616},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"Yaml::parse('{ \"foo\": \"bar\", \"fiz\": \"cat\" }', Yaml::PARSE_EXCEPTION_ON_INVALID_TYPE | Yaml::PARSE_OBJECT | Yaml::PARSE_OBJECT_FOR_MAP);","position":{"start":{"line":229,"column":4,"offset":6621},"end":{"line":231,"column":7,"offset":6773},"indent":[4,4]}}],"position":{"start":{"line":227,"column":1,"offset":6528},"end":{"line":232,"column":1,"offset":6774},"indent":[1,1,1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Added support for customizing the dumped YAML string through an optional bit field:","position":{"start":{"line":233,"column":4,"offset":6778},"end":{"line":233,"column":87,"offset":6861},"indent":[]}}],"position":{"start":{"line":233,"column":4,"offset":6778},"end":{"line":233,"column":87,"offset":6861},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"Yaml::dump(['foo' => new A(), 'bar' => 1], 0, 0, Yaml::DUMP_EXCEPTION_ON_INVALID_TYPE | Yaml::DUMP_OBJECT);","position":{"start":{"line":235,"column":4,"offset":6866},"end":{"line":237,"column":7,"offset":6990},"indent":[4,4]}}],"position":{"start":{"line":233,"column":1,"offset":6775},"end":{"line":237,"column":7,"offset":6990},"indent":[1,1,1,1]}}],"position":{"start":{"line":206,"column":1,"offset":5840},"end":{"line":237,"column":7,"offset":6990},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3.0.0","position":{"start":{"line":239,"column":1,"offset":6992},"end":{"line":239,"column":6,"offset":6997},"indent":[]}}],"position":{"start":{"line":239,"column":1,"offset":6992},"end":{"line":240,"column":6,"offset":7003},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Yaml::parse() now throws an exception when a blackslash is not escaped\nin double-quoted strings","position":{"start":{"line":242,"column":4,"offset":7008},"end":{"line":243,"column":28,"offset":7106},"indent":[4]}}],"position":{"start":{"line":242,"column":4,"offset":7008},"end":{"line":243,"column":28,"offset":7106},"indent":[4]}}],"position":{"start":{"line":242,"column":1,"offset":7005},"end":{"line":243,"column":28,"offset":7106},"indent":[1]}}],"position":{"start":{"line":242,"column":1,"offset":7005},"end":{"line":243,"column":28,"offset":7106},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"2.8.0","position":{"start":{"line":245,"column":1,"offset":7108},"end":{"line":245,"column":6,"offset":7113},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":7108},"end":{"line":246,"column":6,"offset":7119},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated usage of a colon in an unquoted mapping value","position":{"start":{"line":248,"column":4,"offset":7124},"end":{"line":248,"column":60,"offset":7180},"indent":[]}}],"position":{"start":{"line":248,"column":4,"offset":7124},"end":{"line":248,"column":60,"offset":7180},"indent":[]}}],"position":{"start":{"line":248,"column":1,"offset":7121},"end":{"line":248,"column":60,"offset":7180},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Deprecated usage of @, ","position":{"start":{"line":249,"column":4,"offset":7184},"end":{"line":249,"column":27,"offset":7207},"indent":[]}},{"type":"text","value":"`","position":{"start":{"line":249,"column":27,"offset":7207},"end":{"line":249,"column":29,"offset":7209},"indent":[]}},{"type":"text","value":", | and > at the beginning of an unquoted string","position":{"start":{"line":249,"column":29,"offset":7209},"end":{"line":249,"column":77,"offset":7257},"indent":[]}}],"position":{"start":{"line":249,"column":4,"offset":7184},"end":{"line":249,"column":77,"offset":7257},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":7181},"end":{"line":249,"column":77,"offset":7257},"indent":[]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When surrounding strings with double-quotes, you must now escape ","position":{"start":{"line":250,"column":4,"offset":7261},"end":{"line":250,"column":69,"offset":7326},"indent":[]}},{"type":"inlineCode","value":"\\","position":{"start":{"line":250,"column":69,"offset":7326},"end":{"line":250,"column":72,"offset":7329},"indent":[]}},{"type":"text","value":" characters. Not\nescaping those characters (when surrounded by double-quotes) is deprecated.","position":{"start":{"line":250,"column":72,"offset":7329},"end":{"line":251,"column":79,"offset":7424},"indent":[4]}}],"position":{"start":{"line":250,"column":4,"offset":7261},"end":{"line":251,"column":79,"offset":7424},"indent":[4]}},{"type":"paragraph","children":[{"type":"text","value":"Before:","position":{"start":{"line":253,"column":4,"offset":7429},"end":{"line":253,"column":11,"offset":7436},"indent":[]}}],"position":{"start":{"line":253,"column":4,"offset":7429},"end":{"line":253,"column":11,"offset":7436},"indent":[]}},{"type":"code","lang":"yml","meta":null,"value":"class: \"Foo\\Var\"","position":{"start":{"line":255,"column":4,"offset":7441},"end":{"line":257,"column":7,"offset":7474},"indent":[4,4]}},{"type":"paragraph","children":[{"type":"text","value":"After:","position":{"start":{"line":259,"column":4,"offset":7479},"end":{"line":259,"column":10,"offset":7485},"indent":[]}}],"position":{"start":{"line":259,"column":4,"offset":7479},"end":{"line":259,"column":10,"offset":7485},"indent":[]}},{"type":"code","lang":"yml","meta":null,"value":"class: \"Foo\\\\Var\"","position":{"start":{"line":261,"column":4,"offset":7490},"end":{"line":263,"column":7,"offset":7524},"indent":[4,4]}}],"position":{"start":{"line":250,"column":1,"offset":7258},"end":{"line":263,"column":7,"offset":7524},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":248,"column":1,"offset":7121},"end":{"line":263,"column":7,"offset":7524},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"2.1.0","position":{"start":{"line":265,"column":1,"offset":7526},"end":{"line":265,"column":6,"offset":7531},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":7526},"end":{"line":266,"column":6,"offset":7537},"indent":[1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Yaml::parse() does not evaluate loaded files as PHP files by default\nanymore (call Yaml::enablePhpParsing() to get back the old behavior)","position":{"start":{"line":268,"column":4,"offset":7542},"end":{"line":269,"column":72,"offset":7682},"indent":[4]}}],"position":{"start":{"line":268,"column":4,"offset":7542},"end":{"line":269,"column":72,"offset":7682},"indent":[4]}}],"position":{"start":{"line":268,"column":1,"offset":7539},"end":{"line":269,"column":72,"offset":7682},"indent":[1]}}],"position":{"start":{"line":268,"column":1,"offset":7539},"end":{"line":269,"column":72,"offset":7682},"indent":[1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":272,"column":1,"offset":7685},"end":{"line":272,"column":31,"offset":7715},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":272,"column":31,"offset":7715}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"changelog\"\n    }}>{`CHANGELOG`}</h1>\n    <h2 {...{\n      \"id\": \"71\"\n    }}>{`7.1`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Add support for getting all the enum cases with `}<inlineCode parentName=\"li\">{`!php/enum Foo`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"70\"\n    }}>{`7.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Remove the `}<inlineCode parentName=\"li\">{`!php/const:`}</inlineCode>{` tag, use `}<inlineCode parentName=\"li\">{`!php/const`}</inlineCode>{` instead (without the colon)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"63\"\n    }}>{`6.3`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Add support to dump int keys as strings by using the `}<inlineCode parentName=\"li\">{`Yaml::DUMP_NUMERIC_KEY_AS_STRING`}</inlineCode>{` flag`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"62\"\n    }}>{`6.2`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Add support for `}<inlineCode parentName=\"li\">{`!php/enum`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`!php/enum *->value`}</inlineCode></li>\n      <li parentName=\"ul\">{`Deprecate the `}<inlineCode parentName=\"li\">{`!php/const:`}</inlineCode>{` tag in key which will be replaced by the `}<inlineCode parentName=\"li\">{`!php/const`}</inlineCode>{` tag (without the colon) since 3.4`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"61\"\n    }}>{`6.1`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`In cases where it will likely improve readability, strings containing single quotes will be double-quoted`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"54\"\n    }}>{`5.4`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Add new `}<inlineCode parentName=\"li\">{`lint:yaml dirname --exclude=/dirname/foo.yaml --exclude=/dirname/bar.yaml`}</inlineCode>{`\noption to exclude one or more specific files from multiple file list`}</li>\n      <li parentName=\"ul\">{`Allow negatable for the parse tags option with `}<inlineCode parentName=\"li\">{`--no-parse-tags`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"53\"\n    }}>{`5.3`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Added `}<inlineCode parentName=\"li\">{`github`}</inlineCode>{` format support & autodetection to render errors as annotations\nwhen running the YAML linter command in a Github Action environment.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"510\"\n    }}>{`5.1.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added support for parsing numbers prefixed with `}<inlineCode parentName=\"p\">{`0o`}</inlineCode>{` as octal numbers.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated support for parsing numbers starting with `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` as octal numbers. They will be parsed as strings as of Symfony 6.0. Prefix numbers with `}<inlineCode parentName=\"p\">{`0o`}</inlineCode>{`\nso that they are parsed as octal numbers.`}</p>\n        <p parentName=\"li\">{`Before:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`Yaml::parse('072');\n`}</code></pre>\n        <p parentName=\"li\">{`After:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`Yaml::parse('0o72');\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added `}<inlineCode parentName=\"p\">{`yaml-lint`}</inlineCode>{` binary.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated using the `}<inlineCode parentName=\"p\">{`!php/object`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`!php/const`}</inlineCode>{` tags without a value.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"500\"\n    }}>{`5.0.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Removed support for mappings inside multi-line strings.`}</li>\n      <li parentName=\"ul\">{`removed support for implicit STDIN usage in the `}<inlineCode parentName=\"li\">{`lint:yaml`}</inlineCode>{` command, use `}<inlineCode parentName=\"li\">{`lint:yaml -`}</inlineCode>{` (append a dash) instead to make it explicit.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"440\"\n    }}>{`4.4.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Added support for parsing the inline notation spanning multiple lines.`}</li>\n      <li parentName=\"ul\">{`Added support to dump `}<inlineCode parentName=\"li\">{`null`}</inlineCode>{` as `}<inlineCode parentName=\"li\">{`~`}</inlineCode>{` by using the `}<inlineCode parentName=\"li\">{`Yaml::DUMP_NULL_AS_TILDE`}</inlineCode>{` flag.`}</li>\n      <li parentName=\"ul\">{`deprecated accepting STDIN implicitly when using the `}<inlineCode parentName=\"li\">{`lint:yaml`}</inlineCode>{` command, use `}<inlineCode parentName=\"li\">{`lint:yaml -`}</inlineCode>{` (append a dash) instead to make it explicit.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"430\"\n    }}>{`4.3.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Using a mapping inside a multi-line string is deprecated and will throw a `}<inlineCode parentName=\"li\">{`ParseException`}</inlineCode>{` in 5.0.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"420\"\n    }}>{`4.2.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`added support for multiple files or directories in `}<inlineCode parentName=\"li\">{`LintCommand`}</inlineCode></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"400\"\n    }}>{`4.0.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The behavior of the non-specific tag `}<inlineCode parentName=\"p\">{`!`}</inlineCode>{` is changed and now forces\nnon-evaluating your values.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`complex mappings will throw a `}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`support for the comma as a group separator for floats has been dropped, use\nthe underscore instead`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`support for the `}<inlineCode parentName=\"p\">{`!!php/object`}</inlineCode>{` tag has been dropped, use the `}<inlineCode parentName=\"p\">{`!php/object`}</inlineCode>{`\ntag instead`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`duplicate mapping keys throw a `}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`non-string mapping keys throw a `}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode>{`, use the `}<inlineCode parentName=\"p\">{`Yaml::PARSE_KEYS_AS_STRINGS`}</inlineCode>{`\nflag to cast them to strings`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`%`}</inlineCode>{` at the beginning of an unquoted string throw a `}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`mappings with a colon (`}<inlineCode parentName=\"p\">{`:`}</inlineCode>{`) that is not followed by a whitespace throw a\n`}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`the `}<inlineCode parentName=\"p\">{`Dumper::setIndentation()`}</inlineCode>{` method has been removed`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`being able to pass boolean options to the `}<inlineCode parentName=\"p\">{`Yaml::parse()`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Yaml::dump()`}</inlineCode>{`,\n`}<inlineCode parentName=\"p\">{`Parser::parse()`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`Dumper::dump()`}</inlineCode>{` methods to configure the behavior of\nthe parser and dumper is no longer supported, pass bitmask flags instead`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`the constructor arguments of the `}<inlineCode parentName=\"p\">{`Parser`}</inlineCode>{` class have been removed`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`the `}<inlineCode parentName=\"p\">{`Inline`}</inlineCode>{` class is internal and no longer part of the BC promise`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`removed support for the `}<inlineCode parentName=\"p\">{`!str`}</inlineCode>{` tag, use the `}<inlineCode parentName=\"p\">{`!!str`}</inlineCode>{` tag instead`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`added support for tagged scalars.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yml\"\n          }}>{`Yaml::parse('!foo bar', Yaml::PARSE_CUSTOM_TAGS);\n// returns TaggedValue('foo', 'bar');\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"340\"\n    }}>{`3.4.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`added support for parsing YAML files using the `}<inlineCode parentName=\"p\">{`Yaml::parseFile()`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Parser::parseFile()`}</inlineCode>{` method`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`the `}<inlineCode parentName=\"p\">{`Dumper`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Parser`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`Yaml`}</inlineCode>{` classes are marked as final`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated the `}<inlineCode parentName=\"p\">{`!php/object:`}</inlineCode>{` tag which will be replaced by the\n`}<inlineCode parentName=\"p\">{`!php/object`}</inlineCode>{` tag (without the colon) in 4.0.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated the `}<inlineCode parentName=\"p\">{`!php/const:`}</inlineCode>{` tag which will be replaced by the\n`}<inlineCode parentName=\"p\">{`!php/const`}</inlineCode>{` tag (without the colon) in 4.0.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Support for the `}<inlineCode parentName=\"p\">{`!str`}</inlineCode>{` tag is deprecated, use the `}<inlineCode parentName=\"p\">{`!!str`}</inlineCode>{` tag instead.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated using the non-specific tag `}<inlineCode parentName=\"p\">{`!`}</inlineCode>{` as its behavior will change in 4.0.\nIt will force non-evaluating your values in 4.0. Use plain integers or `}<inlineCode parentName=\"p\">{`!!float`}</inlineCode>{` instead.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"330\"\n    }}>{`3.3.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Starting an unquoted string with a question mark followed by a space is\ndeprecated and will throw a `}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode>{` in Symfony 4.0.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated support for implicitly parsing non-string mapping keys as strings.\nMapping keys that are no strings will lead to a `}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode>{` in Symfony\n4.0. Use quotes to opt-in for keys to be parsed as strings.`}</p>\n        <p parentName=\"li\">{`Before:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-php\"\n          }}>{`$yaml = <<<YAML\nnull: null key\ntrue: boolean true\n2.0: float key\nYAML;\n\nYaml::parse($yaml);\n`}</code></pre>\n        <p parentName=\"li\">{`After:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-php\"\n          }}>{`\n$yaml = <<<YAML\n\"null\": null key\n\"true\": boolean true\n\"2.0\": float key\nYAML;\n\nYaml::parse($yaml);\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Omitted mapping values will be parsed as `}<inlineCode parentName=\"p\">{`null`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Omitting the key of a mapping is deprecated and will throw a `}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode>{` in Symfony 4.0.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added support for dumping empty PHP arrays as YAML sequences:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-php\"\n          }}>{`Yaml::dump([], 0, 0, Yaml::DUMP_EMPTY_ARRAY_AS_SEQUENCE);\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"320\"\n    }}>{`3.2.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Mappings with a colon (`}<inlineCode parentName=\"p\">{`:`}</inlineCode>{`) that is not followed by a whitespace are deprecated\nwhen the mapping key is not quoted and will lead to a `}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode>{` in\nSymfony 4.0 (e.g. `}<inlineCode parentName=\"p\">{`foo:bar`}</inlineCode>{` must be `}<inlineCode parentName=\"p\">{`foo: bar`}</inlineCode>{`).`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added support for parsing PHP constants:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-php\"\n          }}>{`Yaml::parse('!php/const:PHP_INT_MAX', Yaml::PARSE_CONSTANT);\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Support for silently ignoring duplicate mapping keys in YAML has been\ndeprecated and will lead to a `}<inlineCode parentName=\"p\">{`ParseException`}</inlineCode>{` in Symfony 4.0.`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"310\"\n    }}>{`3.1.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added support to dump `}<inlineCode parentName=\"p\">{`stdClass`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ArrayAccess`}</inlineCode>{` objects as YAML mappings\nthrough the `}<inlineCode parentName=\"p\">{`Yaml::DUMP_OBJECT_AS_MAP`}</inlineCode>{` flag.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Strings that are not UTF-8 encoded will be dumped as base64 encoded binary\ndata.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added support for dumping multi line strings as literal blocks.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added support for parsing base64 encoded binary data when they are tagged\nwith the `}<inlineCode parentName=\"p\">{`!!binary`}</inlineCode>{` tag.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added support for parsing timestamps as `}<inlineCode parentName=\"p\">{`\\\\DateTime`}</inlineCode>{` objects:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-php\"\n          }}>{`Yaml::parse('2001-12-15 21:59:43.10 -5', Yaml::PARSE_DATETIME);\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`\\\\DateTime`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\\\\DateTimeImmutable`}</inlineCode>{` objects are dumped as YAML timestamps.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated usage of `}<inlineCode parentName=\"p\">{`%`}</inlineCode>{` at the beginning of an unquoted string.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added support for customizing the YAML parser behavior through an optional bit field:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-php\"\n          }}>{`Yaml::parse('{ \"foo\": \"bar\", \"fiz\": \"cat\" }', Yaml::PARSE_EXCEPTION_ON_INVALID_TYPE | Yaml::PARSE_OBJECT | Yaml::PARSE_OBJECT_FOR_MAP);\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Added support for customizing the dumped YAML string through an optional bit field:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-php\"\n          }}>{`Yaml::dump(['foo' => new A(), 'bar' => 1], 0, 0, Yaml::DUMP_EXCEPTION_ON_INVALID_TYPE | Yaml::DUMP_OBJECT);\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"300\"\n    }}>{`3.0.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Yaml::parse() now throws an exception when a blackslash is not escaped\nin double-quoted strings`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"280\"\n    }}>{`2.8.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated usage of a colon in an unquoted mapping value`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated usage of @, `}{`\\``}{`, | and > at the beginning of an unquoted string`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When surrounding strings with double-quotes, you must now escape `}<inlineCode parentName=\"p\">{`\\\\`}</inlineCode>{` characters. Not\nescaping those characters (when surrounded by double-quotes) is deprecated.`}</p>\n        <p parentName=\"li\">{`Before:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yml\"\n          }}>{`class: \"Foo\\\\Var\"\n`}</code></pre>\n        <p parentName=\"li\">{`After:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yml\"\n          }}>{`class: \"Foo\\\\\\\\Var\"\n`}</code></pre>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"210\"\n    }}>{`2.1.0`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Yaml::parse() does not evaluate loaded files as PHP files by default\nanymore (call Yaml::enablePhpParsing() to get back the old behavior)`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}