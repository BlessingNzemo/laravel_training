{"expireTime":9007200985218080000,"key":"gatsby-plugin-mdx-entire-payload-8188fff502c0d8d35809c2cde5b81fb5-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://packagist.org/packages/sebastian/exporter","children":[{"type":"image","title":null,"url":"https://poser.pugx.org/sebastian/exporter/v/stable.png","alt":"Latest Stable Version","position":{"start":{"line":7,"column":2,"offset":143},"end":{"line":7,"column":82,"offset":223},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":134,"offset":275},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":7,"column":134,"offset":275},"end":{"line":8,"column":1,"offset":276},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/sebastianbergmann/exporter/actions","children":[{"type":"image","title":null,"url":"https://github.com/sebastianbergmann/exporter/workflows/CI/badge.svg","alt":"CI Status","position":{"start":{"line":8,"column":2,"offset":277},"end":{"line":8,"column":84,"offset":359},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":276},"end":{"line":8,"column":140,"offset":415},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":8,"column":140,"offset":415},"end":{"line":9,"column":1,"offset":416},"indent":[1]}},{"type":"link","title":null,"url":"https://codecov.io/gh/sebastianbergmann/exporter","children":[{"type":"image","title":null,"url":"https://codecov.io/gh/sebastianbergmann/exporter/branch/main/graph/badge.svg","alt":"codecov","position":{"start":{"line":9,"column":2,"offset":417},"end":{"line":9,"column":90,"offset":505},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":416},"end":{"line":9,"column":141,"offset":556},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":9,"column":141,"offset":556},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"sebastian/exporter","position":{"start":{"line":11,"column":3,"offset":560},"end":{"line":11,"column":21,"offset":578},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":558},"end":{"line":11,"column":21,"offset":578},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This component provides the functionality to export PHP variables for visualization.","position":{"start":{"line":13,"column":1,"offset":580},"end":{"line":13,"column":85,"offset":664},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":580},"end":{"line":13,"column":85,"offset":664},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation","position":{"start":{"line":15,"column":4,"offset":669},"end":{"line":15,"column":16,"offset":681},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":666},"end":{"line":15,"column":16,"offset":681},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can add this library as a local, per-project dependency to your project using ","position":{"start":{"line":17,"column":1,"offset":683},"end":{"line":17,"column":83,"offset":765},"indent":[]}},{"type":"link","title":null,"url":"https://getcomposer.org/","children":[{"type":"text","value":"Composer","position":{"start":{"line":17,"column":84,"offset":766},"end":{"line":17,"column":92,"offset":774},"indent":[]}}],"position":{"start":{"line":17,"column":83,"offset":765},"end":{"line":17,"column":119,"offset":801},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":17,"column":119,"offset":801},"end":{"line":17,"column":120,"offset":802},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":683},"end":{"line":17,"column":120,"offset":802},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"composer require sebastian/exporter","position":{"start":{"line":19,"column":1,"offset":804},"end":{"line":21,"column":4,"offset":847},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:","position":{"start":{"line":23,"column":1,"offset":849},"end":{"line":23,"column":154,"offset":1002},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":849},"end":{"line":23,"column":154,"offset":1002},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"composer require --dev sebastian/exporter","position":{"start":{"line":25,"column":1,"offset":1004},"end":{"line":27,"column":4,"offset":1053},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":29,"column":4,"offset":1058},"end":{"line":29,"column":9,"offset":1063},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1055},"end":{"line":29,"column":9,"offset":1063},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Exporting:","position":{"start":{"line":31,"column":1,"offset":1065},"end":{"line":31,"column":11,"offset":1075},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1065},"end":{"line":31,"column":11,"offset":1075},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\nuse SebastianBergmann\\Exporter\\Exporter;\n\n$exporter = new Exporter;\n\n/*\nException Object &0000000078de0f0d000000002003a261 (\n    'message' => ''\n    'string' => ''\n    'code' => 0\n    'file' => '/home/sebastianbergmann/test.php'\n    'line' => 34\n    'previous' => null\n)\n*/\n\nprint $exporter->export(new Exception);","position":{"start":{"line":33,"column":1,"offset":1077},"end":{"line":51,"column":4,"offset":1408},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Data Types","position":{"start":{"line":53,"column":4,"offset":1413},"end":{"line":53,"column":14,"offset":1423},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1410},"end":{"line":53,"column":14,"offset":1423},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Exporting simple types:","position":{"start":{"line":55,"column":1,"offset":1425},"end":{"line":55,"column":24,"offset":1448},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1425},"end":{"line":55,"column":24,"offset":1448},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\nuse SebastianBergmann\\Exporter\\Exporter;\n\n$exporter = new Exporter;\n\n// 46\nprint $exporter->export(46);\n\n// 4.0\nprint $exporter->export(4.0);\n\n// 'hello, world!'\nprint $exporter->export('hello, world!');\n\n// false\nprint $exporter->export(false);\n\n// NAN\nprint $exporter->export(acos(8));\n\n// -INF\nprint $exporter->export(log(0));\n\n// null\nprint $exporter->export(null);\n\n// resource(13) of type (stream)\nprint $exporter->export(fopen('php://stderr', 'w'));\n\n// Binary String: 0x000102030405\nprint $exporter->export(chr(0) . chr(1) . chr(2) . chr(3) . chr(4) . chr(5));","position":{"start":{"line":57,"column":1,"offset":1450},"end":{"line":89,"column":4,"offset":2035},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Exporting complex types:","position":{"start":{"line":91,"column":1,"offset":2037},"end":{"line":91,"column":25,"offset":2061},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2037},"end":{"line":91,"column":25,"offset":2061},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\nuse SebastianBergmann\\Exporter\\Exporter;\n\n$exporter = new Exporter;\n\n/*\nArray &0 (\n    0 => Array &1 (\n        0 => 1\n        1 => 2\n        2 => 3\n    )\n    1 => Array &2 (\n        0 => ''\n        1 => 0\n        2 => false\n    )\n)\n*/\n\nprint $exporter->export(array(array(1,2,3), array(\"\",0,FALSE)));\n\n/*\nArray &0 (\n    'self' => Array &1 (\n        'self' => Array &1\n    )\n)\n*/\n\n$array = array();\n$array['self'] = &$array;\nprint $exporter->export($array);\n\n/*\nstdClass Object &0000000003a66dcc0000000025e723e2 (\n    'self' => stdClass Object &0000000003a66dcc0000000025e723e2\n)\n*/\n\n$obj = new stdClass();\n$obj->self = $obj;\nprint $exporter->export($obj);","position":{"start":{"line":93,"column":1,"offset":2063},"end":{"line":137,"column":4,"offset":2735},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Compact exports:","position":{"start":{"line":139,"column":1,"offset":2737},"end":{"line":139,"column":17,"offset":2753},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":2737},"end":{"line":139,"column":17,"offset":2753},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\nuse SebastianBergmann\\Exporter\\Exporter;\n\n$exporter = new Exporter;\n\n// Array ()\nprint $exporter->shortenedExport(array());\n\n// Array (...)\nprint $exporter->shortenedExport(array(1,2,3,4,5));\n\n// stdClass Object ()\nprint $exporter->shortenedExport(new stdClass);\n\n// Exception Object (...)\nprint $exporter->shortenedExport(new Exception);\n\n// this\\nis\\na\\nsuper\\nlong\\nstring\\nt...\\nspace\nprint $exporter->shortenedExport(\n<<<LONG_STRING\nthis\nis\na\nsuper\nlong\nstring\nthat\nwraps\na\nlot\nand\neats\nup\na\nlot\nof\nspace\nLONG_STRING\n);","position":{"start":{"line":141,"column":1,"offset":2755},"end":{"line":181,"column":4,"offset":3296},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":184,"column":1,"offset":3299},"end":{"line":184,"column":31,"offset":3329},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":184,"column":31,"offset":3329}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/sebastian/exporter\"\n      }}><img alt=\"Latest Stable Version\" src=\"https://poser.pugx.org/sebastian/exporter/v/stable.png\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/sebastianbergmann/exporter/actions\"\n      }}><img alt=\"CI Status\" src=\"https://github.com/sebastianbergmann/exporter/workflows/CI/badge.svg\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://codecov.io/gh/sebastianbergmann/exporter\"\n      }}><img alt=\"codecov\" src=\"https://codecov.io/gh/sebastianbergmann/exporter/branch/main/graph/badge.svg\" /></a></p>\n    <h1 {...{\n      \"id\": \"sebastianexporter\"\n    }}>{`sebastian/exporter`}</h1>\n    <p>{`This component provides the functionality to export PHP variables for visualization.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`You can add this library as a local, per-project dependency to your project using `}<a parentName=\"p\" {...{\n        \"href\": \"https://getcomposer.org/\"\n      }}>{`Composer`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`composer require sebastian/exporter\n`}</code></pre>\n    <p>{`If you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`composer require --dev sebastian/exporter\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Exporting:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nuse SebastianBergmann\\\\Exporter\\\\Exporter;\n\n$exporter = new Exporter;\n\n/*\nException Object &0000000078de0f0d000000002003a261 (\n    'message' => ''\n    'string' => ''\n    'code' => 0\n    'file' => '/home/sebastianbergmann/test.php'\n    'line' => 34\n    'previous' => null\n)\n*/\n\nprint $exporter->export(new Exception);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"data-types\"\n    }}>{`Data Types`}</h2>\n    <p>{`Exporting simple types:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nuse SebastianBergmann\\\\Exporter\\\\Exporter;\n\n$exporter = new Exporter;\n\n// 46\nprint $exporter->export(46);\n\n// 4.0\nprint $exporter->export(4.0);\n\n// 'hello, world!'\nprint $exporter->export('hello, world!');\n\n// false\nprint $exporter->export(false);\n\n// NAN\nprint $exporter->export(acos(8));\n\n// -INF\nprint $exporter->export(log(0));\n\n// null\nprint $exporter->export(null);\n\n// resource(13) of type (stream)\nprint $exporter->export(fopen('php://stderr', 'w'));\n\n// Binary String: 0x000102030405\nprint $exporter->export(chr(0) . chr(1) . chr(2) . chr(3) . chr(4) . chr(5));\n`}</code></pre>\n    <p>{`Exporting complex types:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nuse SebastianBergmann\\\\Exporter\\\\Exporter;\n\n$exporter = new Exporter;\n\n/*\nArray &0 (\n    0 => Array &1 (\n        0 => 1\n        1 => 2\n        2 => 3\n    )\n    1 => Array &2 (\n        0 => ''\n        1 => 0\n        2 => false\n    )\n)\n*/\n\nprint $exporter->export(array(array(1,2,3), array(\"\",0,FALSE)));\n\n/*\nArray &0 (\n    'self' => Array &1 (\n        'self' => Array &1\n    )\n)\n*/\n\n$array = array();\n$array['self'] = &$array;\nprint $exporter->export($array);\n\n/*\nstdClass Object &0000000003a66dcc0000000025e723e2 (\n    'self' => stdClass Object &0000000003a66dcc0000000025e723e2\n)\n*/\n\n$obj = new stdClass();\n$obj->self = $obj;\nprint $exporter->export($obj);\n`}</code></pre>\n    <p>{`Compact exports:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nuse SebastianBergmann\\\\Exporter\\\\Exporter;\n\n$exporter = new Exporter;\n\n// Array ()\nprint $exporter->shortenedExport(array());\n\n// Array (...)\nprint $exporter->shortenedExport(array(1,2,3,4,5));\n\n// stdClass Object ()\nprint $exporter->shortenedExport(new stdClass);\n\n// Exception Object (...)\nprint $exporter->shortenedExport(new Exception);\n\n// this\\\\nis\\\\na\\\\nsuper\\\\nlong\\\\nstring\\\\nt...\\\\nspace\nprint $exporter->shortenedExport(\n<<<LONG_STRING\nthis\nis\na\nsuper\nlong\nstring\nthat\nwraps\na\nlot\nand\neats\nup\na\nlot\nof\nspace\nLONG_STRING\n);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}