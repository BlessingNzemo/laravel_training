{"expireTime":9007200985218041000,"key":"gatsby-plugin-mdx-entire-payload-d4eb92c42b7f37c05529497766a045f5-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"league/config","position":{"start":{"line":7,"column":3,"offset":144},"end":{"line":7,"column":16,"offset":157},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":16,"offset":157},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://packagist.org/packages/league/config","children":[{"type":"image","title":null,"url":"https://img.shields.io/packagist/v/league/config.svg?style=flat-square","alt":"Latest Version","position":{"start":{"line":9,"column":2,"offset":160},"end":{"line":9,"column":91,"offset":249},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":159},"end":{"line":9,"column":138,"offset":296},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":9,"column":138,"offset":296},"end":{"line":10,"column":1,"offset":297},"indent":[1]}},{"type":"link","title":null,"url":"https://packagist.org/packages/league/config","children":[{"type":"image","title":null,"url":"https://img.shields.io/packagist/dt/league/config.svg?style=flat-square","alt":"Total Downloads","position":{"start":{"line":10,"column":2,"offset":298},"end":{"line":10,"column":93,"offset":389},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":297},"end":{"line":10,"column":140,"offset":436},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":10,"column":140,"offset":436},"end":{"line":11,"column":1,"offset":437},"indent":[1]}},{"type":"link","title":null,"url":"LICENSE","children":[{"type":"image","title":null,"url":"https://img.shields.io/badge/License-BSD--3-brightgreen.svg?style=flat-square","alt":"Software License","position":{"start":{"line":11,"column":2,"offset":438},"end":{"line":11,"column":100,"offset":536},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":437},"end":{"line":11,"column":110,"offset":546},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":11,"column":110,"offset":546},"end":{"line":12,"column":1,"offset":547},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/thephpleague/config/actions?query=workflow%3ATests+branch%3Amain","children":[{"type":"image","title":null,"url":"https://img.shields.io/github/workflow/status/thephpleague/config/Tests/main.svg?style=flat-square","alt":"Build Status","position":{"start":{"line":12,"column":2,"offset":548},"end":{"line":12,"column":117,"offset":663},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":547},"end":{"line":12,"column":203,"offset":749},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":12,"column":203,"offset":749},"end":{"line":13,"column":1,"offset":750},"indent":[1]}},{"type":"link","title":null,"url":"https://scrutinizer-ci.com/g/thephpleague/config/code-structure","children":[{"type":"image","title":null,"url":"https://img.shields.io/scrutinizer/coverage/g/thephpleague/config.svg?style=flat-square","alt":"Coverage Status","position":{"start":{"line":13,"column":2,"offset":751},"end":{"line":13,"column":109,"offset":858},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":750},"end":{"line":13,"column":175,"offset":924},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":13,"column":175,"offset":924},"end":{"line":14,"column":1,"offset":925},"indent":[1]}},{"type":"link","title":null,"url":"https://scrutinizer-ci.com/g/thephpleague/config","children":[{"type":"image","title":null,"url":"https://img.shields.io/scrutinizer/g/thephpleague/config.svg?style=flat-square","alt":"Quality Score","position":{"start":{"line":14,"column":2,"offset":926},"end":{"line":14,"column":98,"offset":1022},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":925},"end":{"line":14,"column":149,"offset":1073},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":14,"column":149,"offset":1073},"end":{"line":15,"column":1,"offset":1074},"indent":[1]}},{"type":"link","title":null,"url":"https://www.colinodell.com/sponsor","children":[{"type":"image","title":null,"url":"https://img.shields.io/badge/sponsor%20this%20package-%E2%9D%A4-ff69b4.svg?style=flat-square","alt":"Sponsor development of this project","position":{"start":{"line":15,"column":2,"offset":1075},"end":{"line":15,"column":134,"offset":1207},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":1074},"end":{"line":15,"column":171,"offset":1244},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":159},"end":{"line":15,"column":171,"offset":1244},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"league/config","position":{"start":{"line":17,"column":3,"offset":1248},"end":{"line":17,"column":16,"offset":1261},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1246},"end":{"line":17,"column":18,"offset":1263},"indent":[]}},{"type":"text","value":" helps you define nested configuration arrays with strict schemas and access configuration values with dot notation.  It was created by ","position":{"start":{"line":17,"column":18,"offset":1263},"end":{"line":17,"column":154,"offset":1399},"indent":[]}},{"type":"linkReference","identifier":"@colinodell","label":"@colinodell","referenceType":"full","children":[{"type":"text","value":"Colin O'Dell","position":{"start":{"line":17,"column":155,"offset":1400},"end":{"line":17,"column":167,"offset":1412},"indent":[]}}],"position":{"start":{"line":17,"column":154,"offset":1399},"end":{"line":17,"column":181,"offset":1426},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":17,"column":181,"offset":1426},"end":{"line":17,"column":182,"offset":1427},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":1246},"end":{"line":17,"column":182,"offset":1427},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"📦 Installation","position":{"start":{"line":19,"column":4,"offset":1432},"end":{"line":19,"column":19,"offset":1447},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1429},"end":{"line":19,"column":19,"offset":1447},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This project requires PHP 7.4 or higher.  To install it via ","position":{"start":{"line":21,"column":1,"offset":1449},"end":{"line":21,"column":61,"offset":1509},"indent":[]}},{"type":"linkReference","identifier":"composer","label":"Composer","referenceType":"shortcut","children":[{"type":"text","value":"Composer","position":{"start":{"line":21,"column":62,"offset":1510},"end":{"line":21,"column":70,"offset":1518},"indent":[]}}],"position":{"start":{"line":21,"column":61,"offset":1509},"end":{"line":21,"column":71,"offset":1519},"indent":[]}},{"type":"text","value":" simply run:","position":{"start":{"line":21,"column":71,"offset":1519},"end":{"line":21,"column":83,"offset":1531},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":1449},"end":{"line":21,"column":83,"offset":1531},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"composer require league/config","position":{"start":{"line":23,"column":1,"offset":1533},"end":{"line":25,"column":4,"offset":1575},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"🧰️ Basic Usage","position":{"start":{"line":27,"column":4,"offset":1580},"end":{"line":27,"column":19,"offset":1595},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1577},"end":{"line":27,"column":19,"offset":1595},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":29,"column":1,"offset":1597},"end":{"line":29,"column":5,"offset":1601},"indent":[]}},{"type":"inlineCode","value":"Configuration","position":{"start":{"line":29,"column":5,"offset":1601},"end":{"line":29,"column":20,"offset":1616},"indent":[]}},{"type":"text","value":" class provides everything you need to define the configuration structure and fetch values:","position":{"start":{"line":29,"column":20,"offset":1616},"end":{"line":29,"column":111,"offset":1707},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1597},"end":{"line":29,"column":111,"offset":1707},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"use League\\Config\\Configuration;\nuse Nette\\Schema\\Expect;\n\n// Define your configuration schema\n$config = new Configuration([\n    'database' => Expect::structure([\n        'driver' => Expect::anyOf('mysql', 'postgresql', 'sqlite')->required(),\n        'host' => Expect::string()->default('localhost'),\n        'port' => Expect::int()->min(1)->max(65535),\n        'ssl' => Expect::bool(),\n        'database' => Expect::string()->required(),\n        'username' => Expect::string()->required(),\n        'password' => Expect::string()->nullable(),\n    ]),\n    'logging' => Expect::structure([\n        'enabled' => Expect::bool()->default($_ENV['DEBUG'] == true),\n        'file' => Expect::string()->deprecated(\"use logging.path instead\"),\n        'path' => Expect::string()->assert(function ($path) { return \\is_writeable($path); })->required(),\n    ]),\n]);\n\n// Set the values, either all at once with `merge()`:\n$config->merge([\n    'database' => [\n        'driver' => 'mysql',\n        'port' => 3306,\n        'database' => 'mydb',\n        'username' => 'user',\n        'password' => 'secret',\n    ],\n]);\n\n// Or one-at-a-time with `set()`:\n$config->set('logging.path', '/var/log/myapp.log');\n\n// You can now retrieve those values with `get()`.\n// Validation and defaults will be applied for you automatically\n$config->get('database');        // Fetches the entire \"database\" section as an array\n$config->get('database.driver'); // Fetch a specific nested value with dot notation\n$config->get('database/driver'); // Fetch a specific nested value with slash notation\n$config->get('database.host');   // Returns the default value \"localhost\"\n$config->get('logging.path');    // Guaranteed to be writeable thanks to the assertion in the schema\n\n// If validation fails an `InvalidConfigurationException` will be thrown:\n$config->set('database.driver', 'mongodb');\n$config->get('database.driver'); // InvalidConfigurationException\n\n// Attempting to fetch a non-existent key will result in an `InvalidConfigurationException`\n$config->get('foo.bar');\n\n// You could avoid this by checking whether that item exists:\n$config->exists('foo.bar'); // Returns `false`","position":{"start":{"line":31,"column":1,"offset":1709},"end":{"line":84,"column":4,"offset":3868},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"📓 Documentation","position":{"start":{"line":86,"column":4,"offset":3873},"end":{"line":86,"column":20,"offset":3889},"indent":[]}}],"position":{"start":{"line":86,"column":1,"offset":3870},"end":{"line":86,"column":20,"offset":3889},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Full documentation can be found at ","position":{"start":{"line":88,"column":1,"offset":3891},"end":{"line":88,"column":36,"offset":3926},"indent":[]}},{"type":"linkReference","identifier":"docs","label":"docs","referenceType":"full","children":[{"type":"text","value":"config.thephpleague.com","position":{"start":{"line":88,"column":37,"offset":3927},"end":{"line":88,"column":60,"offset":3950},"indent":[]}}],"position":{"start":{"line":88,"column":36,"offset":3926},"end":{"line":88,"column":67,"offset":3957},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":88,"column":67,"offset":3957},"end":{"line":88,"column":68,"offset":3958},"indent":[]}}],"position":{"start":{"line":88,"column":1,"offset":3891},"end":{"line":88,"column":68,"offset":3958},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"💭 Philosophy","position":{"start":{"line":90,"column":4,"offset":3963},"end":{"line":90,"column":17,"offset":3976},"indent":[]}}],"position":{"start":{"line":90,"column":1,"offset":3960},"end":{"line":90,"column":17,"offset":3976},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This library aims to provide a ","position":{"start":{"line":92,"column":1,"offset":3978},"end":{"line":92,"column":32,"offset":4009},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"simple yet opinionated","position":{"start":{"line":92,"column":34,"offset":4011},"end":{"line":92,"column":56,"offset":4033},"indent":[]}}],"position":{"start":{"line":92,"column":32,"offset":4009},"end":{"line":92,"column":58,"offset":4035},"indent":[]}},{"type":"text","value":" approach to configuration with the following goals:","position":{"start":{"line":92,"column":58,"offset":4035},"end":{"line":92,"column":110,"offset":4087},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":3978},"end":{"line":92,"column":110,"offset":4087},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The configuration should operate on ","position":{"start":{"line":94,"column":3,"offset":4091},"end":{"line":94,"column":39,"offset":4127},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"arrays with nested values","position":{"start":{"line":94,"column":41,"offset":4129},"end":{"line":94,"column":66,"offset":4154},"indent":[]}}],"position":{"start":{"line":94,"column":39,"offset":4127},"end":{"line":94,"column":68,"offset":4156},"indent":[]}},{"type":"text","value":" which are easily accessible","position":{"start":{"line":94,"column":68,"offset":4156},"end":{"line":94,"column":96,"offset":4184},"indent":[]}}],"position":{"start":{"line":94,"column":3,"offset":4091},"end":{"line":94,"column":96,"offset":4184},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":4089},"end":{"line":94,"column":96,"offset":4184},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The configuration structure should be ","position":{"start":{"line":95,"column":3,"offset":4187},"end":{"line":95,"column":41,"offset":4225},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"defined with strict schemas","position":{"start":{"line":95,"column":43,"offset":4227},"end":{"line":95,"column":70,"offset":4254},"indent":[]}}],"position":{"start":{"line":95,"column":41,"offset":4225},"end":{"line":95,"column":72,"offset":4256},"indent":[]}},{"type":"text","value":" defining the overall structure, allowed types, and allowed values","position":{"start":{"line":95,"column":72,"offset":4256},"end":{"line":95,"column":138,"offset":4322},"indent":[]}}],"position":{"start":{"line":95,"column":3,"offset":4187},"end":{"line":95,"column":138,"offset":4322},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":4185},"end":{"line":95,"column":138,"offset":4322},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Schemas should be defined using a ","position":{"start":{"line":96,"column":3,"offset":4325},"end":{"line":96,"column":37,"offset":4359},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"simple, fluent interface","position":{"start":{"line":96,"column":39,"offset":4361},"end":{"line":96,"column":63,"offset":4385},"indent":[]}}],"position":{"start":{"line":96,"column":37,"offset":4359},"end":{"line":96,"column":65,"offset":4387},"indent":[]}}],"position":{"start":{"line":96,"column":3,"offset":4325},"end":{"line":96,"column":65,"offset":4387},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":4323},"end":{"line":96,"column":65,"offset":4387},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You should be able to ","position":{"start":{"line":97,"column":3,"offset":4390},"end":{"line":97,"column":25,"offset":4412},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"add and combine schemas but never modify existing ones","position":{"start":{"line":97,"column":27,"offset":4414},"end":{"line":97,"column":81,"offset":4468},"indent":[]}}],"position":{"start":{"line":97,"column":25,"offset":4412},"end":{"line":97,"column":83,"offset":4470},"indent":[]}}],"position":{"start":{"line":97,"column":3,"offset":4390},"end":{"line":97,"column":83,"offset":4470},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":4388},"end":{"line":97,"column":83,"offset":4470},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Both the configuration values and the schema should be ","position":{"start":{"line":98,"column":3,"offset":4473},"end":{"line":98,"column":58,"offset":4528},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"defined and managed with PHP code","position":{"start":{"line":98,"column":60,"offset":4530},"end":{"line":98,"column":93,"offset":4563},"indent":[]}}],"position":{"start":{"line":98,"column":58,"offset":4528},"end":{"line":98,"column":95,"offset":4565},"indent":[]}}],"position":{"start":{"line":98,"column":3,"offset":4473},"end":{"line":98,"column":95,"offset":4565},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":4471},"end":{"line":98,"column":95,"offset":4565},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Schemas should be ","position":{"start":{"line":99,"column":3,"offset":4568},"end":{"line":99,"column":21,"offset":4586},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"immutable","position":{"start":{"line":99,"column":23,"offset":4588},"end":{"line":99,"column":32,"offset":4597},"indent":[]}}],"position":{"start":{"line":99,"column":21,"offset":4586},"end":{"line":99,"column":34,"offset":4599},"indent":[]}},{"type":"text","value":"; they should never change once they are set","position":{"start":{"line":99,"column":34,"offset":4599},"end":{"line":99,"column":78,"offset":4643},"indent":[]}}],"position":{"start":{"line":99,"column":3,"offset":4568},"end":{"line":99,"column":78,"offset":4643},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":4566},"end":{"line":99,"column":78,"offset":4643},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Configuration values should never define or influence the schemas","position":{"start":{"line":100,"column":3,"offset":4646},"end":{"line":100,"column":68,"offset":4711},"indent":[]}}],"position":{"start":{"line":100,"column":3,"offset":4646},"end":{"line":100,"column":68,"offset":4711},"indent":[]}}],"position":{"start":{"line":100,"column":1,"offset":4644},"end":{"line":100,"column":68,"offset":4711},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":4089},"end":{"line":100,"column":68,"offset":4711},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As a result, this library will likely ","position":{"start":{"line":102,"column":1,"offset":4713},"end":{"line":102,"column":39,"offset":4751},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"never","position":{"start":{"line":102,"column":41,"offset":4753},"end":{"line":102,"column":46,"offset":4758},"indent":[]}}],"position":{"start":{"line":102,"column":39,"offset":4751},"end":{"line":102,"column":48,"offset":4760},"indent":[]}},{"type":"text","value":" support features like:","position":{"start":{"line":102,"column":48,"offset":4760},"end":{"line":102,"column":71,"offset":4783},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":4713},"end":{"line":102,"column":71,"offset":4783},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Loading and/or exporting configuration values or schemas using YAML, XML, or other files","position":{"start":{"line":104,"column":3,"offset":4787},"end":{"line":104,"column":91,"offset":4875},"indent":[]}}],"position":{"start":{"line":104,"column":3,"offset":4787},"end":{"line":104,"column":91,"offset":4875},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":4785},"end":{"line":104,"column":91,"offset":4875},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Parsing configuration values from a command line or other user interface","position":{"start":{"line":105,"column":3,"offset":4878},"end":{"line":105,"column":75,"offset":4950},"indent":[]}}],"position":{"start":{"line":105,"column":3,"offset":4878},"end":{"line":105,"column":75,"offset":4950},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":4876},"end":{"line":105,"column":75,"offset":4950},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Dynamically changing the schema, allowed values, or default values based on other configuration values","position":{"start":{"line":106,"column":3,"offset":4953},"end":{"line":106,"column":105,"offset":5055},"indent":[]}}],"position":{"start":{"line":106,"column":3,"offset":4953},"end":{"line":106,"column":105,"offset":5055},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":4951},"end":{"line":106,"column":105,"offset":5055},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":4785},"end":{"line":106,"column":105,"offset":5055},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you need that functionality you should check out other libraries like:","position":{"start":{"line":108,"column":1,"offset":5057},"end":{"line":108,"column":74,"offset":5130},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":5057},"end":{"line":108,"column":74,"offset":5130},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"symfony/config","label":"symfony/config","referenceType":"shortcut","children":[{"type":"text","value":"symfony/config","position":{"start":{"line":110,"column":4,"offset":5135},"end":{"line":110,"column":18,"offset":5149},"indent":[]}}],"position":{"start":{"line":110,"column":3,"offset":5134},"end":{"line":110,"column":19,"offset":5150},"indent":[]}}],"position":{"start":{"line":110,"column":3,"offset":5134},"end":{"line":110,"column":19,"offset":5150},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":5132},"end":{"line":110,"column":19,"offset":5150},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"symfony/options-resolver","label":"symfony/options-resolver","referenceType":"shortcut","children":[{"type":"text","value":"symfony/options-resolver","position":{"start":{"line":111,"column":4,"offset":5154},"end":{"line":111,"column":28,"offset":5178},"indent":[]}}],"position":{"start":{"line":111,"column":3,"offset":5153},"end":{"line":111,"column":29,"offset":5179},"indent":[]}}],"position":{"start":{"line":111,"column":3,"offset":5153},"end":{"line":111,"column":29,"offset":5179},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":5151},"end":{"line":111,"column":29,"offset":5179},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"hassankhan/config","label":"hassankhan/config","referenceType":"shortcut","children":[{"type":"text","value":"hassankhan/config","position":{"start":{"line":112,"column":4,"offset":5183},"end":{"line":112,"column":21,"offset":5200},"indent":[]}}],"position":{"start":{"line":112,"column":3,"offset":5182},"end":{"line":112,"column":22,"offset":5201},"indent":[]}}],"position":{"start":{"line":112,"column":3,"offset":5182},"end":{"line":112,"column":22,"offset":5201},"indent":[]}}],"position":{"start":{"line":112,"column":1,"offset":5180},"end":{"line":112,"column":22,"offset":5201},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"consolidation/config","label":"consolidation/config","referenceType":"shortcut","children":[{"type":"text","value":"consolidation/config","position":{"start":{"line":113,"column":4,"offset":5205},"end":{"line":113,"column":24,"offset":5225},"indent":[]}}],"position":{"start":{"line":113,"column":3,"offset":5204},"end":{"line":113,"column":25,"offset":5226},"indent":[]}}],"position":{"start":{"line":113,"column":3,"offset":5204},"end":{"line":113,"column":25,"offset":5226},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":5202},"end":{"line":113,"column":25,"offset":5226},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"linkReference","identifier":"laminas/laminas-config","label":"laminas/laminas-config","referenceType":"shortcut","children":[{"type":"text","value":"laminas/laminas-config","position":{"start":{"line":114,"column":4,"offset":5230},"end":{"line":114,"column":26,"offset":5252},"indent":[]}}],"position":{"start":{"line":114,"column":3,"offset":5229},"end":{"line":114,"column":27,"offset":5253},"indent":[]}}],"position":{"start":{"line":114,"column":3,"offset":5229},"end":{"line":114,"column":27,"offset":5253},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":5227},"end":{"line":114,"column":27,"offset":5253},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":5132},"end":{"line":114,"column":27,"offset":5253},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"🏷️ Versioning","position":{"start":{"line":116,"column":4,"offset":5258},"end":{"line":116,"column":18,"offset":5272},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":5255},"end":{"line":116,"column":18,"offset":5272},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://semver.org/","children":[{"type":"text","value":"SemVer","position":{"start":{"line":118,"column":2,"offset":5275},"end":{"line":118,"column":8,"offset":5281},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":5274},"end":{"line":118,"column":29,"offset":5302},"indent":[]}},{"type":"text","value":" is followed closely. Minor and patch releases should not introduce breaking changes to the codebase.","position":{"start":{"line":118,"column":29,"offset":5302},"end":{"line":118,"column":130,"offset":5403},"indent":[]}}],"position":{"start":{"line":118,"column":1,"offset":5274},"end":{"line":118,"column":130,"offset":5403},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Any classes or methods marked ","position":{"start":{"line":120,"column":1,"offset":5405},"end":{"line":120,"column":31,"offset":5435},"indent":[]}},{"type":"inlineCode","value":"@internal","position":{"start":{"line":120,"column":31,"offset":5435},"end":{"line":120,"column":42,"offset":5446},"indent":[]}},{"type":"text","value":" are not intended for use outside this library and are subject to breaking changes at any time, so please avoid using them.","position":{"start":{"line":120,"column":42,"offset":5446},"end":{"line":120,"column":165,"offset":5569},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":5405},"end":{"line":120,"column":165,"offset":5569},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"🛠️ Maintenance & Support","position":{"start":{"line":122,"column":4,"offset":5574},"end":{"line":122,"column":29,"offset":5599},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":5571},"end":{"line":122,"column":29,"offset":5599},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a new ","position":{"start":{"line":124,"column":1,"offset":5601},"end":{"line":124,"column":12,"offset":5612},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"minor","position":{"start":{"line":124,"column":14,"offset":5614},"end":{"line":124,"column":19,"offset":5619},"indent":[]}}],"position":{"start":{"line":124,"column":12,"offset":5612},"end":{"line":124,"column":21,"offset":5621},"indent":[]}},{"type":"text","value":" version (e.g. ","position":{"start":{"line":124,"column":21,"offset":5621},"end":{"line":124,"column":36,"offset":5636},"indent":[]}},{"type":"inlineCode","value":"1.0","position":{"start":{"line":124,"column":36,"offset":5636},"end":{"line":124,"column":41,"offset":5641},"indent":[]}},{"type":"text","value":" -> ","position":{"start":{"line":124,"column":41,"offset":5641},"end":{"line":124,"column":45,"offset":5645},"indent":[]}},{"type":"inlineCode","value":"1.1","position":{"start":{"line":124,"column":45,"offset":5645},"end":{"line":124,"column":50,"offset":5650},"indent":[]}},{"type":"text","value":") is released, the previous one (","position":{"start":{"line":124,"column":50,"offset":5650},"end":{"line":124,"column":83,"offset":5683},"indent":[]}},{"type":"inlineCode","value":"1.0","position":{"start":{"line":124,"column":83,"offset":5683},"end":{"line":124,"column":88,"offset":5688},"indent":[]}},{"type":"text","value":") will continue to receive security and critical bug fixes for ","position":{"start":{"line":124,"column":88,"offset":5688},"end":{"line":124,"column":151,"offset":5751},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"at least","position":{"start":{"line":124,"column":152,"offset":5752},"end":{"line":124,"column":160,"offset":5760},"indent":[]}}],"position":{"start":{"line":124,"column":151,"offset":5751},"end":{"line":124,"column":161,"offset":5761},"indent":[]}},{"type":"text","value":" 3 months.","position":{"start":{"line":124,"column":161,"offset":5761},"end":{"line":124,"column":171,"offset":5771},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":5601},"end":{"line":124,"column":171,"offset":5771},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a new ","position":{"start":{"line":126,"column":1,"offset":5773},"end":{"line":126,"column":12,"offset":5784},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"major","position":{"start":{"line":126,"column":14,"offset":5786},"end":{"line":126,"column":19,"offset":5791},"indent":[]}}],"position":{"start":{"line":126,"column":12,"offset":5784},"end":{"line":126,"column":21,"offset":5793},"indent":[]}},{"type":"text","value":" version is released (e.g. ","position":{"start":{"line":126,"column":21,"offset":5793},"end":{"line":126,"column":48,"offset":5820},"indent":[]}},{"type":"inlineCode","value":"1.1","position":{"start":{"line":126,"column":48,"offset":5820},"end":{"line":126,"column":53,"offset":5825},"indent":[]}},{"type":"text","value":" -> ","position":{"start":{"line":126,"column":53,"offset":5825},"end":{"line":126,"column":57,"offset":5829},"indent":[]}},{"type":"inlineCode","value":"2.0","position":{"start":{"line":126,"column":57,"offset":5829},"end":{"line":126,"column":62,"offset":5834},"indent":[]}},{"type":"text","value":"), the previous one (","position":{"start":{"line":126,"column":62,"offset":5834},"end":{"line":126,"column":83,"offset":5855},"indent":[]}},{"type":"inlineCode","value":"1.1","position":{"start":{"line":126,"column":83,"offset":5855},"end":{"line":126,"column":88,"offset":5860},"indent":[]}},{"type":"text","value":") will receive critical bug fixes for ","position":{"start":{"line":126,"column":88,"offset":5860},"end":{"line":126,"column":126,"offset":5898},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"at least","position":{"start":{"line":126,"column":127,"offset":5899},"end":{"line":126,"column":135,"offset":5907},"indent":[]}}],"position":{"start":{"line":126,"column":126,"offset":5898},"end":{"line":126,"column":136,"offset":5908},"indent":[]}},{"type":"text","value":" 3 months and security updates for 6 months after that new release comes out.","position":{"start":{"line":126,"column":136,"offset":5908},"end":{"line":126,"column":213,"offset":5985},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":5773},"end":{"line":126,"column":213,"offset":5985},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(This policy may change in the future and exceptions may be made on a case-by-case basis.)","position":{"start":{"line":128,"column":1,"offset":5987},"end":{"line":128,"column":91,"offset":6077},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":5987},"end":{"line":128,"column":91,"offset":6077},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"👷‍️ Contributing","position":{"start":{"line":130,"column":4,"offset":6082},"end":{"line":130,"column":21,"offset":6099},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":6079},"end":{"line":130,"column":21,"offset":6099},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Contributions to this library are ","position":{"start":{"line":132,"column":1,"offset":6101},"end":{"line":132,"column":35,"offset":6135},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"welcome","position":{"start":{"line":132,"column":37,"offset":6137},"end":{"line":132,"column":44,"offset":6144},"indent":[]}}],"position":{"start":{"line":132,"column":35,"offset":6135},"end":{"line":132,"column":46,"offset":6146},"indent":[]}},{"type":"text","value":"! We only ask that you adhere to our ","position":{"start":{"line":132,"column":46,"offset":6146},"end":{"line":132,"column":83,"offset":6183},"indent":[]}},{"type":"linkReference","identifier":"contributor guidelines","label":"contributor guidelines","referenceType":"shortcut","children":[{"type":"text","value":"contributor guidelines","position":{"start":{"line":132,"column":84,"offset":6184},"end":{"line":132,"column":106,"offset":6206},"indent":[]}}],"position":{"start":{"line":132,"column":83,"offset":6183},"end":{"line":132,"column":107,"offset":6207},"indent":[]}},{"type":"text","value":" and avoid making changes that conflict with our Philosophy above.","position":{"start":{"line":132,"column":107,"offset":6207},"end":{"line":132,"column":173,"offset":6273},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":6101},"end":{"line":132,"column":173,"offset":6273},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"🧪 Testing","position":{"start":{"line":134,"column":4,"offset":6278},"end":{"line":134,"column":14,"offset":6288},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":6275},"end":{"line":134,"column":14,"offset":6288},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"composer test","position":{"start":{"line":136,"column":1,"offset":6290},"end":{"line":138,"column":4,"offset":6315},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"📄 License","position":{"start":{"line":140,"column":4,"offset":6320},"end":{"line":140,"column":14,"offset":6330},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":6317},"end":{"line":140,"column":14,"offset":6330},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"league/config","position":{"start":{"line":142,"column":3,"offset":6334},"end":{"line":142,"column":16,"offset":6347},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":6332},"end":{"line":142,"column":18,"offset":6349},"indent":[]}},{"type":"text","value":" is licensed under the BSD-3 license.  See the ","position":{"start":{"line":142,"column":18,"offset":6349},"end":{"line":142,"column":65,"offset":6396},"indent":[]}},{"type":"linkReference","identifier":"license","label":"license","referenceType":"full","children":[{"type":"inlineCode","value":"LICENSE.md","position":{"start":{"line":142,"column":66,"offset":6397},"end":{"line":142,"column":78,"offset":6409},"indent":[]}}],"position":{"start":{"line":142,"column":65,"offset":6396},"end":{"line":142,"column":88,"offset":6419},"indent":[]}},{"type":"text","value":" file for more details.","position":{"start":{"line":142,"column":88,"offset":6419},"end":{"line":142,"column":111,"offset":6442},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":6332},"end":{"line":142,"column":111,"offset":6442},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"🗺️  Who Uses It?","position":{"start":{"line":144,"column":4,"offset":6447},"end":{"line":144,"column":21,"offset":6464},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":6444},"end":{"line":144,"column":21,"offset":6464},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This project is used by ","position":{"start":{"line":146,"column":1,"offset":6466},"end":{"line":146,"column":25,"offset":6490},"indent":[]}},{"type":"linkReference","identifier":"league-commonmark","label":"league-commonmark","referenceType":"full","children":[{"type":"text","value":"league/commonmark","position":{"start":{"line":146,"column":26,"offset":6491},"end":{"line":146,"column":43,"offset":6508},"indent":[]}}],"position":{"start":{"line":146,"column":25,"offset":6490},"end":{"line":146,"column":63,"offset":6528},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":146,"column":63,"offset":6528},"end":{"line":146,"column":64,"offset":6529},"indent":[]}}],"position":{"start":{"line":146,"column":1,"offset":6466},"end":{"line":146,"column":64,"offset":6529},"indent":[]}},{"type":"definition","identifier":"docs","label":"docs","title":null,"url":"https://config.thephpleague.com/","position":{"start":{"line":148,"column":1,"offset":6531},"end":{"line":148,"column":41,"offset":6571},"indent":[]}},{"type":"definition","identifier":"@colinodell","label":"@colinodell","title":null,"url":"https://www.twitter.com/colinodell","position":{"start":{"line":149,"column":1,"offset":6572},"end":{"line":149,"column":50,"offset":6621},"indent":[]}},{"type":"definition","identifier":"composer","label":"Composer","title":null,"url":"https://getcomposer.org/","position":{"start":{"line":150,"column":1,"offset":6622},"end":{"line":150,"column":37,"offset":6658},"indent":[]}},{"type":"definition","identifier":"php league","label":"PHP League","title":null,"url":"https://thephpleague.com","position":{"start":{"line":151,"column":1,"offset":6659},"end":{"line":151,"column":39,"offset":6697},"indent":[]}},{"type":"definition","identifier":"symfony/config","label":"symfony/config","title":null,"url":"https://symfony.com/doc/current/components/config.html","position":{"start":{"line":152,"column":1,"offset":6698},"end":{"line":152,"column":73,"offset":6770},"indent":[]}},{"type":"definition","identifier":"symfony/options-resolver","label":"symfony/options-resolver","title":null,"url":"https://symfony.com/doc/current/components/options_resolver.html","position":{"start":{"line":153,"column":1,"offset":6771},"end":{"line":153,"column":93,"offset":6863},"indent":[]}},{"type":"definition","identifier":"hassankhan/config","label":"hassankhan/config","title":null,"url":"https://github.com/hassankhan/config","position":{"start":{"line":154,"column":1,"offset":6864},"end":{"line":154,"column":58,"offset":6921},"indent":[]}},{"type":"definition","identifier":"consolidation/config","label":"consolidation/config","title":null,"url":"https://github.com/consolidation/config","position":{"start":{"line":155,"column":1,"offset":6922},"end":{"line":155,"column":64,"offset":6985},"indent":[]}},{"type":"definition","identifier":"laminas/laminas-config","label":"laminas/laminas-config","title":null,"url":"https://docs.laminas.dev/laminas-config/","position":{"start":{"line":156,"column":1,"offset":6986},"end":{"line":156,"column":67,"offset":7052},"indent":[]}},{"type":"definition","identifier":"contributor guidelines","label":"contributor guidelines","title":null,"url":"https://github.com/thephpleague/config/blob/main/.github/CONTRIBUTING.md","position":{"start":{"line":157,"column":1,"offset":7053},"end":{"line":157,"column":99,"offset":7151},"indent":[]}},{"type":"definition","identifier":"license","label":"license","title":null,"url":"https://github.com/thephpleague/config/blob/main/LICENSE.md","position":{"start":{"line":158,"column":1,"offset":7152},"end":{"line":158,"column":71,"offset":7222},"indent":[]}},{"type":"definition","identifier":"league-commonmark","label":"league-commonmark","title":null,"url":"https://commonmark.thephpleague.com","position":{"start":{"line":159,"column":1,"offset":7223},"end":{"line":159,"column":57,"offset":7279},"indent":[]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":162,"column":1,"offset":7282},"end":{"line":162,"column":31,"offset":7312},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":162,"column":31,"offset":7312}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"leagueconfig\"\n    }}>{`league/config`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/league/config\"\n      }}><img alt=\"Latest Version\" src=\"https://img.shields.io/packagist/v/league/config.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/league/config\"\n      }}><img alt=\"Total Downloads\" src=\"https://img.shields.io/packagist/dt/league/config.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"LICENSE\"\n      }}><img alt=\"Software License\" src=\"https://img.shields.io/badge/License-BSD--3-brightgreen.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/thephpleague/config/actions?query=workflow%3ATests+branch%3Amain\"\n      }}><img alt=\"Build Status\" src=\"https://img.shields.io/github/workflow/status/thephpleague/config/Tests/main.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://scrutinizer-ci.com/g/thephpleague/config/code-structure\"\n      }}><img alt=\"Coverage Status\" src=\"https://img.shields.io/scrutinizer/coverage/g/thephpleague/config.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://scrutinizer-ci.com/g/thephpleague/config\"\n      }}><img alt=\"Quality Score\" src=\"https://img.shields.io/scrutinizer/g/thephpleague/config.svg?style=flat-square\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.colinodell.com/sponsor\"\n      }}><img alt=\"Sponsor development of this project\" src=\"https://img.shields.io/badge/sponsor%20this%20package-%E2%9D%A4-ff69b4.svg?style=flat-square\" /></a></p>\n    <p><strong parentName=\"p\">{`league/config`}</strong>{` helps you define nested configuration arrays with strict schemas and access configuration values with dot notation.  It was created by `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.twitter.com/colinodell\"\n      }}>{`Colin O'Dell`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"-installation\"\n    }}>{`📦 Installation`}</h2>\n    <p>{`This project requires PHP 7.4 or higher.  To install it via `}<a parentName=\"p\" {...{\n        \"href\": \"https://getcomposer.org/\"\n      }}>{`Composer`}</a>{` simply run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`composer require league/config\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"️-basic-usage\"\n    }}>{`🧰️ Basic Usage`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Configuration`}</inlineCode>{` class provides everything you need to define the configuration structure and fetch values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`use League\\\\Config\\\\Configuration;\nuse Nette\\\\Schema\\\\Expect;\n\n// Define your configuration schema\n$config = new Configuration([\n    'database' => Expect::structure([\n        'driver' => Expect::anyOf('mysql', 'postgresql', 'sqlite')->required(),\n        'host' => Expect::string()->default('localhost'),\n        'port' => Expect::int()->min(1)->max(65535),\n        'ssl' => Expect::bool(),\n        'database' => Expect::string()->required(),\n        'username' => Expect::string()->required(),\n        'password' => Expect::string()->nullable(),\n    ]),\n    'logging' => Expect::structure([\n        'enabled' => Expect::bool()->default($_ENV['DEBUG'] == true),\n        'file' => Expect::string()->deprecated(\"use logging.path instead\"),\n        'path' => Expect::string()->assert(function ($path) { return \\\\is_writeable($path); })->required(),\n    ]),\n]);\n\n// Set the values, either all at once with \\`merge()\\`:\n$config->merge([\n    'database' => [\n        'driver' => 'mysql',\n        'port' => 3306,\n        'database' => 'mydb',\n        'username' => 'user',\n        'password' => 'secret',\n    ],\n]);\n\n// Or one-at-a-time with \\`set()\\`:\n$config->set('logging.path', '/var/log/myapp.log');\n\n// You can now retrieve those values with \\`get()\\`.\n// Validation and defaults will be applied for you automatically\n$config->get('database');        // Fetches the entire \"database\" section as an array\n$config->get('database.driver'); // Fetch a specific nested value with dot notation\n$config->get('database/driver'); // Fetch a specific nested value with slash notation\n$config->get('database.host');   // Returns the default value \"localhost\"\n$config->get('logging.path');    // Guaranteed to be writeable thanks to the assertion in the schema\n\n// If validation fails an \\`InvalidConfigurationException\\` will be thrown:\n$config->set('database.driver', 'mongodb');\n$config->get('database.driver'); // InvalidConfigurationException\n\n// Attempting to fetch a non-existent key will result in an \\`InvalidConfigurationException\\`\n$config->get('foo.bar');\n\n// You could avoid this by checking whether that item exists:\n$config->exists('foo.bar'); // Returns \\`false\\`\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-documentation\"\n    }}>{`📓 Documentation`}</h2>\n    <p>{`Full documentation can be found at `}<a parentName=\"p\" {...{\n        \"href\": \"https://config.thephpleague.com/\"\n      }}>{`config.thephpleague.com`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"-philosophy\"\n    }}>{`💭 Philosophy`}</h2>\n    <p>{`This library aims to provide a `}<strong parentName=\"p\">{`simple yet opinionated`}</strong>{` approach to configuration with the following goals:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The configuration should operate on `}<strong parentName=\"li\">{`arrays with nested values`}</strong>{` which are easily accessible`}</li>\n      <li parentName=\"ul\">{`The configuration structure should be `}<strong parentName=\"li\">{`defined with strict schemas`}</strong>{` defining the overall structure, allowed types, and allowed values`}</li>\n      <li parentName=\"ul\">{`Schemas should be defined using a `}<strong parentName=\"li\">{`simple, fluent interface`}</strong></li>\n      <li parentName=\"ul\">{`You should be able to `}<strong parentName=\"li\">{`add and combine schemas but never modify existing ones`}</strong></li>\n      <li parentName=\"ul\">{`Both the configuration values and the schema should be `}<strong parentName=\"li\">{`defined and managed with PHP code`}</strong></li>\n      <li parentName=\"ul\">{`Schemas should be `}<strong parentName=\"li\">{`immutable`}</strong>{`; they should never change once they are set`}</li>\n      <li parentName=\"ul\">{`Configuration values should never define or influence the schemas`}</li>\n    </ul>\n    <p>{`As a result, this library will likely `}<strong parentName=\"p\">{`never`}</strong>{` support features like:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Loading and/or exporting configuration values or schemas using YAML, XML, or other files`}</li>\n      <li parentName=\"ul\">{`Parsing configuration values from a command line or other user interface`}</li>\n      <li parentName=\"ul\">{`Dynamically changing the schema, allowed values, or default values based on other configuration values`}</li>\n    </ul>\n    <p>{`If you need that functionality you should check out other libraries like:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://symfony.com/doc/current/components/config.html\"\n        }}>{`symfony/config`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://symfony.com/doc/current/components/options_resolver.html\"\n        }}>{`symfony/options-resolver`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/hassankhan/config\"\n        }}>{`hassankhan/config`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/consolidation/config\"\n        }}>{`consolidation/config`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.laminas.dev/laminas-config/\"\n        }}>{`laminas/laminas-config`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"️-versioning\"\n    }}>{`🏷️ Versioning`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"http://semver.org/\"\n      }}>{`SemVer`}</a>{` is followed closely. Minor and patch releases should not introduce breaking changes to the codebase.`}</p>\n    <p>{`Any classes or methods marked `}<inlineCode parentName=\"p\">{`@internal`}</inlineCode>{` are not intended for use outside this library and are subject to breaking changes at any time, so please avoid using them.`}</p>\n    <h2 {...{\n      \"id\": \"️-maintenance--support\"\n    }}>{`🛠️ Maintenance & Support`}</h2>\n    <p>{`When a new `}<strong parentName=\"p\">{`minor`}</strong>{` version (e.g. `}<inlineCode parentName=\"p\">{`1.0`}</inlineCode>{` -> `}<inlineCode parentName=\"p\">{`1.1`}</inlineCode>{`) is released, the previous one (`}<inlineCode parentName=\"p\">{`1.0`}</inlineCode>{`) will continue to receive security and critical bug fixes for `}<em parentName=\"p\">{`at least`}</em>{` 3 months.`}</p>\n    <p>{`When a new `}<strong parentName=\"p\">{`major`}</strong>{` version is released (e.g. `}<inlineCode parentName=\"p\">{`1.1`}</inlineCode>{` -> `}<inlineCode parentName=\"p\">{`2.0`}</inlineCode>{`), the previous one (`}<inlineCode parentName=\"p\">{`1.1`}</inlineCode>{`) will receive critical bug fixes for `}<em parentName=\"p\">{`at least`}</em>{` 3 months and security updates for 6 months after that new release comes out.`}</p>\n    <p>{`(This policy may change in the future and exceptions may be made on a case-by-case basis.)`}</p>\n    <h2 {...{\n      \"id\": \"️-contributing\"\n    }}>{`👷‍️ Contributing`}</h2>\n    <p>{`Contributions to this library are `}<strong parentName=\"p\">{`welcome`}</strong>{`! We only ask that you adhere to our `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/thephpleague/config/blob/main/.github/CONTRIBUTING.md\"\n      }}>{`contributor guidelines`}</a>{` and avoid making changes that conflict with our Philosophy above.`}</p>\n    <h2 {...{\n      \"id\": \"-testing\"\n    }}>{`🧪 Testing`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`composer test\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"-license\"\n    }}>{`📄 License`}</h2>\n    <p><strong parentName=\"p\">{`league/config`}</strong>{` is licensed under the BSD-3 license.  See the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/thephpleague/config/blob/main/LICENSE.md\"\n      }}><inlineCode parentName=\"a\">{`LICENSE.md`}</inlineCode></a>{` file for more details.`}</p>\n    <h2 {...{\n      \"id\": \"️--who-uses-it\"\n    }}>{`🗺️  Who Uses It?`}</h2>\n    <p>{`This project is used by `}<a parentName=\"p\" {...{\n        \"href\": \"https://commonmark.thephpleague.com\"\n      }}>{`league/commonmark`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}