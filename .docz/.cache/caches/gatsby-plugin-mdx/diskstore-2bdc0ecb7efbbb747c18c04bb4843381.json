{"expireTime":9007200985218081000,"key":"gatsby-plugin-mdx-entire-payload-d05729250b849a653bee74487049304c-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://packagist.org/packages/sebastian/comparator","children":[{"type":"image","title":null,"url":"https://poser.pugx.org/sebastian/comparator/v","alt":"Latest Stable Version","position":{"start":{"line":7,"column":2,"offset":143},"end":{"line":7,"column":73,"offset":214},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":127,"offset":268},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":7,"column":127,"offset":268},"end":{"line":8,"column":1,"offset":269},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/sebastianbergmann/comparator/actions","children":[{"type":"image","title":null,"url":"https://github.com/sebastianbergmann/comparator/workflows/CI/badge.svg","alt":"CI Status","position":{"start":{"line":8,"column":2,"offset":270},"end":{"line":8,"column":86,"offset":354},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":269},"end":{"line":8,"column":144,"offset":412},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":8,"column":144,"offset":412},"end":{"line":9,"column":1,"offset":413},"indent":[1]}},{"type":"link","title":null,"url":"https://codecov.io/gh/sebastianbergmann/comparator","children":[{"type":"image","title":null,"url":"https://codecov.io/gh/sebastianbergmann/comparator/branch/main/graph/badge.svg","alt":"codecov","position":{"start":{"line":9,"column":2,"offset":414},"end":{"line":9,"column":92,"offset":504},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":413},"end":{"line":9,"column":145,"offset":557},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":9,"column":145,"offset":557},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"sebastian/comparator","position":{"start":{"line":11,"column":3,"offset":561},"end":{"line":11,"column":23,"offset":581},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":559},"end":{"line":11,"column":23,"offset":581},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This component provides the functionality to compare PHP values for equality.","position":{"start":{"line":13,"column":1,"offset":583},"end":{"line":13,"column":78,"offset":660},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":583},"end":{"line":13,"column":78,"offset":660},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation","position":{"start":{"line":15,"column":4,"offset":665},"end":{"line":15,"column":16,"offset":677},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":662},"end":{"line":15,"column":16,"offset":677},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can add this library as a local, per-project dependency to your project using ","position":{"start":{"line":17,"column":1,"offset":679},"end":{"line":17,"column":83,"offset":761},"indent":[]}},{"type":"link","title":null,"url":"https://getcomposer.org/","children":[{"type":"text","value":"Composer","position":{"start":{"line":17,"column":84,"offset":762},"end":{"line":17,"column":92,"offset":770},"indent":[]}}],"position":{"start":{"line":17,"column":83,"offset":761},"end":{"line":17,"column":119,"offset":797},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":17,"column":119,"offset":797},"end":{"line":17,"column":120,"offset":798},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":679},"end":{"line":17,"column":120,"offset":798},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"composer require sebastian/comparator","position":{"start":{"line":19,"column":1,"offset":800},"end":{"line":21,"column":4,"offset":845},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:","position":{"start":{"line":23,"column":1,"offset":847},"end":{"line":23,"column":154,"offset":1000},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":847},"end":{"line":23,"column":154,"offset":1000},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"composer require --dev sebastian/comparator","position":{"start":{"line":25,"column":1,"offset":1002},"end":{"line":27,"column":4,"offset":1053},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":29,"column":4,"offset":1058},"end":{"line":29,"column":9,"offset":1063},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1055},"end":{"line":29,"column":9,"offset":1063},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"<?php\nuse SebastianBergmann\\Comparator\\Factory;\nuse SebastianBergmann\\Comparator\\ComparisonFailure;\n\n$date1 = new DateTime('2013-03-29 04:13:35', new DateTimeZone('America/New_York'));\n$date2 = new DateTime('2013-03-29 03:13:35', new DateTimeZone('America/Chicago'));\n\n$factory = new Factory;\n$comparator = $factory->getComparatorFor($date1, $date2);\n\ntry {\n    $comparator->assertEquals($date1, $date2);\n    print \"Dates match\";\n} catch (ComparisonFailure $failure) {\n    print \"Dates don't match\";\n}","position":{"start":{"line":31,"column":1,"offset":1065},"end":{"line":48,"column":4,"offset":1577},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":51,"column":1,"offset":1580},"end":{"line":51,"column":31,"offset":1610},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":51,"column":31,"offset":1610}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/sebastian/comparator\"\n      }}><img alt=\"Latest Stable Version\" src=\"https://poser.pugx.org/sebastian/comparator/v\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/sebastianbergmann/comparator/actions\"\n      }}><img alt=\"CI Status\" src=\"https://github.com/sebastianbergmann/comparator/workflows/CI/badge.svg\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://codecov.io/gh/sebastianbergmann/comparator\"\n      }}><img alt=\"codecov\" src=\"https://codecov.io/gh/sebastianbergmann/comparator/branch/main/graph/badge.svg\" /></a></p>\n    <h1 {...{\n      \"id\": \"sebastiancomparator\"\n    }}>{`sebastian/comparator`}</h1>\n    <p>{`This component provides the functionality to compare PHP values for equality.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`You can add this library as a local, per-project dependency to your project using `}<a parentName=\"p\" {...{\n        \"href\": \"https://getcomposer.org/\"\n      }}>{`Composer`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`composer require sebastian/comparator\n`}</code></pre>\n    <p>{`If you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`composer require --dev sebastian/comparator\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`<?php\nuse SebastianBergmann\\\\Comparator\\\\Factory;\nuse SebastianBergmann\\\\Comparator\\\\ComparisonFailure;\n\n$date1 = new DateTime('2013-03-29 04:13:35', new DateTimeZone('America/New_York'));\n$date2 = new DateTime('2013-03-29 03:13:35', new DateTimeZone('America/Chicago'));\n\n$factory = new Factory;\n$comparator = $factory->getComparatorFor($date1, $date2);\n\ntry {\n    $comparator->assertEquals($date1, $date2);\n    print \"Dates match\";\n} catch (ComparisonFailure $failure) {\n    print \"Dates don't match\";\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}