{"expireTime":9007200985218087000,"key":"gatsby-plugin-mdx-entire-payload-ae36d2ac7cc08b2688abcdce4664839d-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":109,"offset":110},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":112},"end":{"line":5,"column":29,"offset":140},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"phpunit/php-timer","position":{"start":{"line":7,"column":3,"offset":144},"end":{"line":7,"column":20,"offset":161},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":142},"end":{"line":7,"column":20,"offset":161},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://packagist.org/packages/phpunit/php-timer","children":[{"type":"image","title":null,"url":"https://poser.pugx.org/phpunit/php-timer/v/stable.png","alt":"Latest Stable Version","position":{"start":{"line":9,"column":2,"offset":164},"end":{"line":9,"column":81,"offset":243},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":163},"end":{"line":9,"column":132,"offset":294},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":9,"column":132,"offset":294},"end":{"line":10,"column":1,"offset":295},"indent":[1]}},{"type":"link","title":null,"url":"https://github.com/sebastianbergmann/php-timer/actions","children":[{"type":"image","title":null,"url":"https://github.com/sebastianbergmann/php-timer/workflows/CI/badge.svg","alt":"CI Status","position":{"start":{"line":10,"column":2,"offset":296},"end":{"line":10,"column":85,"offset":379},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":295},"end":{"line":10,"column":142,"offset":436},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":10,"column":142,"offset":436},"end":{"line":11,"column":1,"offset":437},"indent":[1]}},{"type":"link","title":null,"url":"https://codecov.io/gh/sebastianbergmann/php-timer","children":[{"type":"image","title":null,"url":"https://codecov.io/gh/sebastianbergmann/php-timer/branch/main/graph/badge.svg","alt":"codecov","position":{"start":{"line":11,"column":2,"offset":438},"end":{"line":11,"column":91,"offset":527},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":437},"end":{"line":11,"column":143,"offset":579},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":163},"end":{"line":11,"column":143,"offset":579},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Utility class for timing things, factored out of PHPUnit into a stand-alone component.","position":{"start":{"line":13,"column":1,"offset":581},"end":{"line":13,"column":87,"offset":667},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":581},"end":{"line":13,"column":87,"offset":667},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Installation","position":{"start":{"line":15,"column":4,"offset":672},"end":{"line":15,"column":16,"offset":684},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":669},"end":{"line":15,"column":16,"offset":684},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can add this library as a local, per-project dependency to your project using ","position":{"start":{"line":17,"column":1,"offset":686},"end":{"line":17,"column":83,"offset":768},"indent":[]}},{"type":"link","title":null,"url":"https://getcomposer.org/","children":[{"type":"text","value":"Composer","position":{"start":{"line":17,"column":84,"offset":769},"end":{"line":17,"column":92,"offset":777},"indent":[]}}],"position":{"start":{"line":17,"column":83,"offset":768},"end":{"line":17,"column":119,"offset":804},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":17,"column":119,"offset":804},"end":{"line":17,"column":120,"offset":805},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":686},"end":{"line":17,"column":120,"offset":805},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"composer require phpunit/php-timer","position":{"start":{"line":19,"column":1,"offset":807},"end":{"line":21,"column":4,"offset":849},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:","position":{"start":{"line":23,"column":1,"offset":851},"end":{"line":23,"column":154,"offset":1004},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":851},"end":{"line":23,"column":154,"offset":1004},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"composer require --dev phpunit/php-timer","position":{"start":{"line":25,"column":1,"offset":1006},"end":{"line":27,"column":4,"offset":1054},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Usage","position":{"start":{"line":29,"column":4,"offset":1059},"end":{"line":29,"column":9,"offset":1064},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":1056},"end":{"line":29,"column":9,"offset":1064},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Basic Timing","position":{"start":{"line":31,"column":5,"offset":1070},"end":{"line":31,"column":17,"offset":1082},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1066},"end":{"line":31,"column":17,"offset":1082},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"require __DIR__ . '/vendor/autoload.php';\n\nuse SebastianBergmann\\Timer\\Timer;\n\n$timer = new Timer;\n\n$timer->start();\n\nforeach (\\range(0, 100000) as $i) {\n    // ...\n}\n\n$duration = $timer->stop();\n\nvar_dump(get_class($duration));\nvar_dump($duration->asString());\nvar_dump($duration->asSeconds());\nvar_dump($duration->asMilliseconds());\nvar_dump($duration->asMicroseconds());\nvar_dump($duration->asNanoseconds());","position":{"start":{"line":33,"column":1,"offset":1084},"end":{"line":54,"column":4,"offset":1506},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The code above yields the output below:","position":{"start":{"line":56,"column":1,"offset":1508},"end":{"line":56,"column":40,"offset":1547},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1508},"end":{"line":56,"column":40,"offset":1547},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"string(32) \"SebastianBergmann\\Timer\\Duration\"\nstring(9) \"00:00.002\"\nfloat(0.002851062)\nfloat(2.851062)\nfloat(2851.062)\nint(2851062)","position":{"start":{"line":58,"column":1,"offset":1549},"end":{"line":65,"column":4,"offset":1688},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Resource Consumption","position":{"start":{"line":67,"column":5,"offset":1694},"end":{"line":67,"column":25,"offset":1714},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1690},"end":{"line":67,"column":25,"offset":1714},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Explicit duration","position":{"start":{"line":69,"column":6,"offset":1721},"end":{"line":69,"column":23,"offset":1738},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1716},"end":{"line":69,"column":23,"offset":1738},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"require __DIR__ . '/vendor/autoload.php';\n\nuse SebastianBergmann\\Timer\\ResourceUsageFormatter;\nuse SebastianBergmann\\Timer\\Timer;\n\n$timer = new Timer;\n$timer->start();\n\nforeach (\\range(0, 100000) as $i) {\n    // ...\n}\n\nprint (new ResourceUsageFormatter)->resourceUsage($timer->stop());","position":{"start":{"line":71,"column":1,"offset":1740},"end":{"line":85,"column":4,"offset":2036},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The code above yields the output below:","position":{"start":{"line":87,"column":1,"offset":2038},"end":{"line":87,"column":40,"offset":2077},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2038},"end":{"line":87,"column":40,"offset":2077},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Time: 00:00.002, Memory: 6.00 MB","position":{"start":{"line":89,"column":1,"offset":2079},"end":{"line":91,"column":4,"offset":2119},"indent":[1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"Duration since PHP Startup (using unreliable ","position":{"start":{"line":93,"column":6,"offset":2126},"end":{"line":93,"column":51,"offset":2171},"indent":[]}},{"type":"inlineCode","value":"$_SERVER['REQUEST_TIME_FLOAT']","position":{"start":{"line":93,"column":51,"offset":2171},"end":{"line":93,"column":83,"offset":2203},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":93,"column":83,"offset":2203},"end":{"line":93,"column":84,"offset":2204},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2121},"end":{"line":93,"column":84,"offset":2204},"indent":[]}},{"type":"code","lang":"php","meta":null,"value":"require __DIR__ . '/vendor/autoload.php';\n\nuse SebastianBergmann\\Timer\\ResourceUsageFormatter;\n\nforeach (\\range(0, 100000) as $i) {\n    // ...\n}\n\nprint (new ResourceUsageFormatter)->resourceUsageSinceStartOfRequest();","position":{"start":{"line":95,"column":1,"offset":2206},"end":{"line":105,"column":4,"offset":2434},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The code above yields the output below:","position":{"start":{"line":107,"column":1,"offset":2436},"end":{"line":107,"column":40,"offset":2475},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2436},"end":{"line":107,"column":40,"offset":2475},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Time: 00:00.002, Memory: 6.00 MB","position":{"start":{"line":109,"column":1,"offset":2477},"end":{"line":111,"column":4,"offset":2517},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":114,"column":1,"offset":2520},"end":{"line":114,"column":31,"offset":2550},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":114,"column":31,"offset":2550}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"C:/wamp64/www/laravel_training/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"phpunitphp-timer\"\n    }}>{`phpunit/php-timer`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://packagist.org/packages/phpunit/php-timer\"\n      }}><img alt=\"Latest Stable Version\" src=\"https://poser.pugx.org/phpunit/php-timer/v/stable.png\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/sebastianbergmann/php-timer/actions\"\n      }}><img alt=\"CI Status\" src=\"https://github.com/sebastianbergmann/php-timer/workflows/CI/badge.svg\" /></a>{`\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://codecov.io/gh/sebastianbergmann/php-timer\"\n      }}><img alt=\"codecov\" src=\"https://codecov.io/gh/sebastianbergmann/php-timer/branch/main/graph/badge.svg\" /></a></p>\n    <p>{`Utility class for timing things, factored out of PHPUnit into a stand-alone component.`}</p>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`You can add this library as a local, per-project dependency to your project using `}<a parentName=\"p\" {...{\n        \"href\": \"https://getcomposer.org/\"\n      }}>{`Composer`}</a>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`composer require phpunit/php-timer\n`}</code></pre>\n    <p>{`If you only need this library during development, for instance to run your project's test suite, then you should add it as a development-time dependency:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`composer require --dev phpunit/php-timer\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <h3 {...{\n      \"id\": \"basic-timing\"\n    }}>{`Basic Timing`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`require __DIR__ . '/vendor/autoload.php';\n\nuse SebastianBergmann\\\\Timer\\\\Timer;\n\n$timer = new Timer;\n\n$timer->start();\n\nforeach (\\\\range(0, 100000) as $i) {\n    // ...\n}\n\n$duration = $timer->stop();\n\nvar_dump(get_class($duration));\nvar_dump($duration->asString());\nvar_dump($duration->asSeconds());\nvar_dump($duration->asMilliseconds());\nvar_dump($duration->asMicroseconds());\nvar_dump($duration->asNanoseconds());\n`}</code></pre>\n    <p>{`The code above yields the output below:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`string(32) \"SebastianBergmann\\\\Timer\\\\Duration\"\nstring(9) \"00:00.002\"\nfloat(0.002851062)\nfloat(2.851062)\nfloat(2851.062)\nint(2851062)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"resource-consumption\"\n    }}>{`Resource Consumption`}</h3>\n    <h4 {...{\n      \"id\": \"explicit-duration\"\n    }}>{`Explicit duration`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`require __DIR__ . '/vendor/autoload.php';\n\nuse SebastianBergmann\\\\Timer\\\\ResourceUsageFormatter;\nuse SebastianBergmann\\\\Timer\\\\Timer;\n\n$timer = new Timer;\n$timer->start();\n\nforeach (\\\\range(0, 100000) as $i) {\n    // ...\n}\n\nprint (new ResourceUsageFormatter)->resourceUsage($timer->stop());\n`}</code></pre>\n    <p>{`The code above yields the output below:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Time: 00:00.002, Memory: 6.00 MB\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"duration-since-php-startup-using-unreliable-_serverrequest_time_float\"\n    }}>{`Duration since PHP Startup (using unreliable `}<inlineCode parentName=\"h4\">{`$_SERVER['REQUEST_TIME_FLOAT']`}</inlineCode>{`)`}</h4>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-php\"\n      }}>{`require __DIR__ . '/vendor/autoload.php';\n\nuse SebastianBergmann\\\\Timer\\\\ResourceUsageFormatter;\n\nforeach (\\\\range(0, 100000) as $i) {\n    // ...\n}\n\nprint (new ResourceUsageFormatter)->resourceUsageSinceStartOfRequest();\n`}</code></pre>\n    <p>{`The code above yields the output below:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Time: 00:00.002, Memory: 6.00 MB\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;"}}